{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DmsWidget\\\\DmsFnolWidget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get'; //app\n\nimport { Layout, TreeView } from 'components';\nimport { selectDmsDocDetails, selectClaimData, selectLossId, selectClaimAssociateWithLoss, getClaimsAssociateWithLoss, getViewTableDocuments, selectorDmsViewFiles, selectDmsWidgetClaimDocs } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DmsWidget() {\n  _s();\n\n  var _associatedClaims$map;\n\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var claimData = useSelector(selectClaimData);\n  var associatedClaims = useSelector(selectClaimAssociateWithLoss);\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\n  var currentLossDetailId = get(lossInformation, 'lossDetailID');\n  var currentLossRef = get(lossInformation, 'lossRef');\n  var lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\n  var currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\n  useEffect(function () {\n    if (currentLossDetailId) {\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\n    }\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (currentClaimRef) {\n      dispatch(getViewTableDocuments({\n        referenceId: currentClaimRef,\n        sectionType: \"Claim\"\n      }));\n    }\n  }, [currentClaimRef]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimRefsArray = associatedClaims === null || associatedClaims === void 0 ? void 0 : (_associatedClaims$map = associatedClaims.map(function (item) {\n    return item.claimReference;\n  })) === null || _associatedClaims$map === void 0 ? void 0 : _associatedClaims$map.filter(function (claimref) {\n    return claimref !== currentClaimRef;\n  });\n  var lossDocuments = lossDocDetails.map(function (doc, index) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: \"\".concat(doc.documentId).concat(index),\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.updatedDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  });\n  var currentClaimDocuments = viewDocumentList.map(function (doc, index) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: \"\".concat(doc.documentId).concat(index),\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.updatedDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  });\n  var openedChild = [].concat(_toConsumableArray(lossDocuments), [currentClaimRef ? {\n    id: 'child1',\n    label: \"Claim \".concat(currentClaimRef),\n    labelInfo: '',\n    children: currentClaimDocuments\n  } : {}]);\n  var closedChild = claimRefsArray === null || claimRefsArray === void 0 ? void 0 : claimRefsArray.map(function (item) {\n    return {\n      id: item,\n      label: \"Claim \".concat(item),\n      labelInfo: '',\n      children: [dmsWidgetClaimDocs[item]]\n    };\n  });\n  var data = {\n    id: 'root',\n    label: \"Loss Reference \".concat(currentLossRef),\n    labelInfo: '',\n    children: [].concat(_toConsumableArray(openedChild), _toConsumableArray(closedChild))\n  };\n\n  var handleSelect = function handleSelect(_, nodeIds) {\n    if (nodeIds !== 'root' && nodeIds !== 'child1') {\n      dispatch(getViewTableDocuments({\n        referenceId: nodeIds,\n        sectionType: 'Claim',\n        isFromDmsWidget: true\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    padding: false,\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      handleAccordionClick: handleSelect,\n      treeData: data,\n      rootRef: currentLossRef,\n      widgetTitle: utils.string.t('dms.view.documents.title'),\n      columns: [{\n        header: utils.string.t('dms.upload.file'),\n        flex: '0.8'\n      }, {\n        header: utils.string.t('dms.upload.uploadedOn'),\n        flex: '0.5'\n      }],\n      defaultExpanded: ['child1', 'root']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsWidget, \"zAoR+/q86XjAtUsaXyGhJW0CFCE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DmsWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsWidget\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DmsWidget/DmsFnolWidget.js"],"names":["React","useEffect","useSelector","useDispatch","get","Layout","TreeView","selectDmsDocDetails","selectClaimData","selectLossId","selectClaimAssociateWithLoss","getClaimsAssociateWithLoss","getViewTableDocuments","selectorDmsViewFiles","selectDmsWidgetClaimDocs","config","utils","DmsWidget","dispatch","lossInformation","savedDmsDocList","claimData","associatedClaims","viewDocumentList","dmsWidgetClaimDocs","currentLossDetailId","currentLossRef","lossDocDetails","currentClaimRef","referenceId","sectionType","claimRefsArray","map","item","claimReference","filter","claimref","lossDocuments","doc","index","id","documentId","label","documentName","labelInfo","string","t","value","date","updatedDate","format","ui","text","currentClaimDocuments","openedChild","children","closedChild","data","handleSelect","_","nodeIds","isFromDmsWidget","header","flex"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport { Layout, TreeView } from 'components';\r\nimport { \r\n  selectDmsDocDetails,\r\n  selectClaimData,\r\n  selectLossId,\r\n  selectClaimAssociateWithLoss,\r\n  getClaimsAssociateWithLoss,\r\n  getViewTableDocuments,\r\n  selectorDmsViewFiles,\r\n  selectDmsWidgetClaimDocs \r\n } from 'stores';\r\n import config from 'config';\r\n import * as utils from 'utils';\r\n\r\nexport default function DmsWidget() {\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const claimData = useSelector(selectClaimData);\r\n  const associatedClaims = useSelector(selectClaimAssociateWithLoss);\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\r\n  const currentLossDetailId = get(lossInformation, 'lossDetailID');\r\n  const currentLossRef = get(lossInformation, 'lossRef');\r\n  const lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\r\n  const currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\r\n\r\n  useEffect(() => {\r\n    if (currentLossDetailId) {\r\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId))\r\n    }\r\n  }, [currentLossDetailId]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (currentClaimRef) {\r\n      dispatch(getViewTableDocuments({ referenceId: currentClaimRef, sectionType: \"Claim\" }))\r\n    }\r\n  }, [currentClaimRef]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimRefsArray = associatedClaims?.map((item) => item.claimReference)?.filter((claimref) => claimref !== currentClaimRef);\r\n\r\n  const lossDocuments = lossDocDetails.map((doc, index) => {\r\n    return { \r\n      ...doc,\r\n      id: `${doc.documentId}${index}`,\r\n      label: doc.documentName,\r\n      labelInfo: utils.string.t('format.date', { value: { date: doc?.updatedDate, format: config.ui.format.date.text } }) }\r\n  });\r\n\r\n  const currentClaimDocuments = viewDocumentList.map((doc, index) => {\r\n    return { \r\n      ...doc,\r\n      id: `${doc.documentId}${index}`,\r\n      label: doc.documentName,\r\n      labelInfo: utils.string.t('format.date', { value: { date: doc?.updatedDate, format: config.ui.format.date.text } }) }\r\n  });\r\n\r\n  const openedChild = [...lossDocuments, currentClaimRef ? { id: 'child1', label: `Claim ${currentClaimRef}`, labelInfo: '', children: currentClaimDocuments } : {}]\r\n\r\n  const closedChild = claimRefsArray?.map((item) => { return { id: item, label: `Claim ${item}`, labelInfo: '', children:  [dmsWidgetClaimDocs[item]]} })\r\n  \r\n  const data = {\r\n    id: 'root',\r\n    label: `Loss Reference ${currentLossRef}`,\r\n    labelInfo: '',\r\n    children: [...openedChild, ...closedChild]\r\n  };\r\n\r\n  const handleSelect = (_, nodeIds) => {\r\n    if (nodeIds !== 'root' && nodeIds !== 'child1') {\r\n      dispatch(getViewTableDocuments({ referenceId: nodeIds, sectionType: 'Claim', isFromDmsWidget: true }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar padding={false}>\r\n      <TreeView \r\n        handleAccordionClick={handleSelect}\r\n        treeData={data} \r\n        rootRef={currentLossRef}\r\n        widgetTitle={utils.string.t('dms.view.documents.title')}\r\n        columns={[\r\n          {header: utils.string.t('dms.upload.file'), flex: '0.8'},\r\n          {header: utils.string.t('dms.upload.uploadedOn'), flex: '0.5'}\r\n        ]}\r\n        defaultExpanded={['child1', 'root']}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}