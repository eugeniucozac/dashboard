{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { get } from 'lodash';\nimport types from './types';\nimport * as utils from 'utils';\nvar initialState = {\n  view: {\n    files: [],\n    versionHistory: {},\n    fileMetaData: {}\n  },\n  search: {\n    files: []\n  },\n  upload: {\n    documentMetaData: {},\n    document: {},\n    documentUploaded: {}\n  },\n  fileUpload: {\n    // TODO will later replace \"upload\"\n    metaData: {\n      requestParams: {\n        referenceId: '',\n        sectionRef: ''\n      },\n      data: {}\n    },\n    documentsUploaded: {}\n  },\n  contextSubType: {\n    type: '',\n    caseIncidentID: '',\n    caseIncidentNotesID: '',\n    refId: ''\n  }\n};\n\nvar dmsReducers = function dmsReducers() {\n  var _state$search, _state$search2, _action$payload, _action$payload$data, _state$upload, _action$payload2, _state$upload2, _state$upload3, _state$upload4, _state$upload4$docume, _state$upload5, _state$upload5$docume, _state$upload5$docume2, _state$upload5$docume3, _state$upload6;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        documentTypes: action.payload\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: action.payload,\n          itemsTotal: get(action.payload, 'totalElements', 0),\n          query: get(action.payload, 'searchBy') || [],\n          filters: (state === null || state === void 0 ? void 0 : (_state$search = state.search) === null || _state$search === void 0 ? void 0 : _state$search.filters) || get(action.payload, 'data.filterValue')\n        })\n      });\n\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: (state === null || state === void 0 ? void 0 : (_state$search2 = state.search) === null || _state$search2 === void 0 ? void 0 : _state$search2.files) || action.payload,\n          query: get(action.payload, 'searchBy') || [],\n          filters: Object.keys((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$data = _action$payload.data) === null || _action$payload$data === void 0 ? void 0 : _action$payload$data.filterValue).reduce(function (options, field) {\n            options[field] = action.payload.data.filterValue[field].sort(function (a, b) {\n              return utils.string.capitalise(a.name) > utils.string.capitalise(b.name) ? 1 : -1;\n            });\n            return options;\n          }, {})\n        })\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: initialState.search\n      });\n\n    case types.GET_DOCUMENT_META_DATA_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'PENDING',\n            data: {},\n            error: null\n          }\n        })\n      });\n\n    case types.GET_DOCUMENT_META_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'SUCCESS',\n            data: action.payload,\n            error: false\n          }\n        })\n      });\n\n    case types.GET_DOCUMENT_META_DATA_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'REJECTED',\n            error: action.payload\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'PENDING',\n            data: {},\n            error: null\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'SUCCESS',\n            data: action.payload,\n            error: false\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'REJECTED',\n            error: action.payload\n          }\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload = state.upload) === null || _state$upload === void 0 ? void 0 : _state$upload.documentUploaded), {}, {\n            status: 'PENDING',\n            error: null\n          })\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: {\n            status: 'SUCCESS',\n            data: action.payload,\n            refDocumentDto: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.documentDto,\n            error: false\n          }\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload2 = state.upload) === null || _state$upload2 === void 0 ? void 0 : _state$upload2.documentUploaded), {}, {\n            status: 'REJECTED',\n            error: action.payload\n          })\n        })\n      });\n\n    case types.UPDATE_DMS_UPLOAD_DOCUMENT_DTO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload3 = state.upload) === null || _state$upload3 === void 0 ? void 0 : _state$upload3.documentUploaded), {}, {\n            data: _objectSpread(_objectSpread({}, (_state$upload4 = state.upload) === null || _state$upload4 === void 0 ? void 0 : (_state$upload4$docume = _state$upload4.documentUploaded) === null || _state$upload4$docume === void 0 ? void 0 : _state$upload4$docume.data), {}, {\n              documentDto: _toConsumableArray((_state$upload5 = state.upload) === null || _state$upload5 === void 0 ? void 0 : (_state$upload5$docume = _state$upload5.documentUploaded) === null || _state$upload5$docume === void 0 ? void 0 : (_state$upload5$docume2 = _state$upload5$docume.data) === null || _state$upload5$docume2 === void 0 ? void 0 : (_state$upload5$docume3 = _state$upload5$docume2.documentDto) === null || _state$upload5$docume3 === void 0 ? void 0 : _state$upload5$docume3.filter(function (item) {\n                return item.documentName !== action.payload;\n              }))\n            })\n          })\n        })\n      });\n\n    case types.RESET_DMS_UPLOAD_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload6 = state.upload) === null || _state$upload6 === void 0 ? void 0 : _state$upload6.documentUploaded), {}, {\n            status: ''\n          })\n        })\n      });\n\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread({}, initialState.upload)\n      });\n\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          files: action.payload\n        })\n      });\n\n    case 'DMS_VIEW_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread({}, initialState.view)\n      });\n\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: action.payload\n        })\n      });\n\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: initialState.view.versionHistory\n        })\n      });\n\n    case types.GET_EDIT_DMS_META_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          fileMetaData: action.payload\n        })\n      });\n\n    case 'DMS_EDIT_META_DATA_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          fileMetaData: initialState.view.fileMetaData\n        })\n      });\n\n    case 'DMS_METADATA_GET_REQUEST':\n      var _action$payload3 = action.payload,\n          referenceId = _action$payload3.referenceId,\n          sectionRef = _action$payload3.sectionRef;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          metaData: _objectSpread(_objectSpread({}, state.fileUpload.metaData), {}, {\n            requestParams: {\n              referenceId: referenceId,\n              sectionRef: sectionRef\n            },\n            data: initialState.fileUpload.metaData.data\n          })\n        })\n      });\n\n    case 'DMS_METADATA_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          metaData: _objectSpread(_objectSpread({}, state.fileUpload.metaData), {}, {\n            data: action.payload\n          })\n        })\n      });\n\n    case 'DMS_METADATA_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          metaData: _objectSpread({}, initialState.fileUpload.metaData)\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          documentsUploaded: initialState.fileUpload.documentsUploaded\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          documentsUploaded: action.payload\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fileUpload: _objectSpread(_objectSpread({}, state.fileUpload), {}, {\n          documentsUploaded: initialState.fileUpload.documentsUploaded\n        })\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: _objectSpread(_objectSpread({}, state.contextSubType), action.payload)\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: initialState.contextSubType\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dmsReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.reducers.js"],"names":["get","types","utils","initialState","view","files","versionHistory","fileMetaData","search","upload","documentMetaData","document","documentUploaded","fileUpload","metaData","requestParams","referenceId","sectionRef","data","documentsUploaded","contextSubType","type","caseIncidentID","caseIncidentNotesID","refId","dmsReducers","state","action","documentTypes","payload","itemsTotal","query","filters","Object","keys","filterValue","reduce","options","field","sort","a","b","string","capitalise","name","GET_DOCUMENT_META_DATA_PENDING","status","error","GET_DOCUMENT_META_DATA_SUCCESS","GET_DOCUMENT_META_DATA_REJECTED","GET_DMS_DOCUMENT_PENDING","GET_DMS_DOCUMENT_SUCCESS","GET_DMS_DOCUMENT_REJECTED","POST_DMS_DOCUMENT_PENDING","POST_DMS_DOCUMENT_SUCCESS","refDocumentDto","documentDto","POST_DMS_DOCUMENT_REJECTED","UPDATE_DMS_UPLOAD_DOCUMENT_DTO","filter","item","documentName","RESET_DMS_UPLOAD_STATUS","GET_DMS_VERSION_HISTORY_SUCCESS","GET_EDIT_DMS_META_DATA_SUCCESS"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\r\nimport types from './types';\r\nimport * as utils from 'utils';\r\n\r\nconst initialState = {\r\n  view: {\r\n    files: [],\r\n    versionHistory: {},\r\n    fileMetaData: {},\r\n  },\r\n  search: {\r\n    files: [],\r\n  },\r\n  upload: {\r\n    documentMetaData: {},\r\n    document: {},\r\n    documentUploaded: {},\r\n  },\r\n  fileUpload: { // TODO will later replace \"upload\"\r\n    metaData: {\r\n      requestParams: { referenceId: '', sectionRef: '' },\r\n      data: {},\r\n    },\r\n    documentsUploaded: {},\r\n  },\r\n  contextSubType: {\r\n    type: '',\r\n    caseIncidentID: '',\r\n    caseIncidentNotesID: '',\r\n    refId: '',\r\n  },\r\n};\r\n\r\nconst dmsReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        documentTypes: action.payload,\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: action.payload,\r\n          itemsTotal: get(action.payload, 'totalElements', 0),\r\n          query: get(action.payload, 'searchBy') || [],\r\n          filters: state?.search?.filters || get(action.payload, 'data.filterValue'),\r\n        },\r\n      };\r\n\r\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: state?.search?.files || action.payload,\r\n          query: get(action.payload, 'searchBy') || [],\r\n          filters: Object.keys(action.payload?.data?.filterValue).reduce((options, field) => {\r\n            options[field] = action.payload.data.filterValue[field].sort((a, b) => (utils.string.capitalise(a.name) > utils.string.capitalise(b.name) ? 1 : -1));\r\n            return options;\r\n          }, {}),\r\n        },\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        search: initialState.search,\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'PENDING',\r\n            data: {},\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'PENDING',\r\n            data: {},\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: 'PENDING',\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            refDocumentDto: action.payload?.documentDto,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.UPDATE_DMS_UPLOAD_DOCUMENT_DTO:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            data: {\r\n              ...state.upload?.documentUploaded?.data,\r\n              documentDto: [...state.upload?.documentUploaded?.data?.documentDto?.filter((item) => item.documentName !== action.payload)],\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.RESET_DMS_UPLOAD_STATUS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: '',\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...initialState.upload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          files: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_VIEW_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...initialState.view,\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: initialState.view.versionHistory,\r\n        },\r\n      };\r\n\r\n    case types.GET_EDIT_DMS_META_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          fileMetaData: action.payload,\r\n        },\r\n      };\r\n    case 'DMS_EDIT_META_DATA_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          fileMetaData: initialState.view.fileMetaData,\r\n        },\r\n      };\r\n\r\n    case 'DMS_METADATA_GET_REQUEST':\r\n      const { referenceId, sectionRef } = action.payload;\r\n      return {\r\n        ...state,\r\n        fileUpload: {\r\n          ...state.fileUpload,\r\n          metaData: {\r\n            ...state.fileUpload.metaData,\r\n            requestParams: { referenceId: referenceId, sectionRef: sectionRef },\r\n            data: initialState.fileUpload.metaData.data,\r\n          },\r\n        },\r\n      };\r\n    case 'DMS_METADATA_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        fileUpload: {\r\n          ...state.fileUpload,\r\n          metaData: { ...state.fileUpload.metaData, data: action.payload },\r\n        },\r\n      };\r\n    case 'DMS_METADATA_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        fileUpload: { ...state.fileUpload, metaData: { ...initialState.fileUpload.metaData } },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_REQUEST':\r\n      return {\r\n        ...state,\r\n        fileUpload: { ...state.fileUpload, documentsUploaded: initialState.fileUpload.documentsUploaded },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        fileUpload: { ...state.fileUpload, documentsUploaded: action.payload },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_ERROR':\r\n      return {\r\n        ...state,\r\n        fileUpload: { ...state.fileUpload, documentsUploaded: initialState.fileUpload.documentsUploaded },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\r\n      return {\r\n        ...state,\r\n        contextSubType: {\r\n          ...state.contextSubType,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\r\n      return {\r\n        ...state,\r\n        contextSubType: initialState.contextSubType,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dmsReducers;\r\n"]},"metadata":{},"sourceType":"module"}