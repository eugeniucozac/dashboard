{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Card\\\\Card.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './Card.styles'; // mui\n\nimport { makeStyles, Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nCardView.propTypes = {\n  title: PropTypes.string,\n  subheader: PropTypes.string,\n  text: PropTypes.string,\n  variant: PropTypes.string,\n  compact: PropTypes.bool,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  fullwidth: PropTypes.bool,\n  clickable: PropTypes.bool,\n  handleClick: PropTypes.func,\n  muiCardProps: PropTypes.object,\n  nestedClasses: PropTypes.object,\n  cardRef: PropTypes.func\n};\nCardView.defaultProps = {\n  muiCardProps: {},\n  nestedClasses: {}\n};\nexport function CardView(_ref) {\n  var title = _ref.title,\n      subheader = _ref.subheader,\n      text = _ref.text,\n      variant = _ref.variant,\n      compact = _ref.compact,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      fullwidth = _ref.fullwidth,\n      clickable = _ref.clickable,\n      muiCardProps = _ref.muiCardProps,\n      handleClick = _ref.handleClick,\n      children = _ref.children,\n      nestedClasses = _ref.nestedClasses,\n      cardRef = _ref.cardRef;\n  var classes = makeStyles(styles, {\n    name: 'Card'\n  })({\n    compact: compact,\n    active: active,\n    disabled: disabled,\n    fullwidth: fullwidth,\n    clickable: clickable\n  });\n\n  var classesContainer = _defineProperty({}, nestedClasses.root, Boolean(nestedClasses.root));\n\n  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread({\n    ref: cardRef,\n    className: classes.root,\n    variant: muiCardProps.variant || 'outlined',\n    classes: {\n      root: classnames(classesContainer)\n    },\n    onClick: handleClick\n  }, muiCardProps), {}, {\n    children: [(title || subheader || text) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(title || subheader) && /*#__PURE__*/_jsxDEV(CardHeader, {\n        title: title || undefined,\n        subheader: subheader || undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this), (text || children) && /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [text && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !title && !subheader && !text && children && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = CardView;\nCardView.displayName = \"CardView\";\nCardView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CardView\",\n  \"props\": {\n    \"muiCardProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"subheader\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"text\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compact\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"active\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullwidth\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"clickable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cardRef\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Card\\\\Card.view.js\"] = {\n    name: \"CardView\",\n    docgenInfo: CardView.__docgenInfo,\n    path: \"src\\\\components\\\\Card\\\\Card.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Card/Card.view.js"],"names":["React","PropTypes","classnames","styles","makeStyles","Card","CardHeader","CardContent","Typography","CardView","propTypes","title","string","subheader","text","variant","compact","bool","active","disabled","fullwidth","clickable","handleClick","func","muiCardProps","object","nestedClasses","cardRef","defaultProps","children","classes","name","classesContainer","root","Boolean","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './Card.styles';\r\n\r\n// mui\r\nimport { makeStyles, Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\n\r\nCardView.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  text: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  compact: PropTypes.bool,\r\n  active: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  fullwidth: PropTypes.bool,\r\n  clickable: PropTypes.bool,\r\n  handleClick: PropTypes.func,\r\n  muiCardProps: PropTypes.object,\r\n  nestedClasses: PropTypes.object,\r\n  cardRef: PropTypes.func,\r\n};\r\n\r\nCardView.defaultProps = {\r\n  muiCardProps: {},\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function CardView({\r\n  title,\r\n  subheader,\r\n  text,\r\n  variant,\r\n  compact,\r\n  active,\r\n  disabled,\r\n  fullwidth,\r\n  clickable,\r\n  muiCardProps,\r\n  handleClick,\r\n  children,\r\n  nestedClasses,\r\n  cardRef,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Card' })({ compact, active, disabled, fullwidth, clickable });\r\n  const classesContainer = {\r\n    [nestedClasses.root]: Boolean(nestedClasses.root),\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      ref={cardRef}\r\n      className={classes.root}\r\n      variant={muiCardProps.variant || 'outlined'}\r\n      classes={{ root: classnames(classesContainer) }}\r\n      onClick={handleClick}\r\n      {...muiCardProps}\r\n    >\r\n      {/* 1st method: */}\r\n      {/* Content is rendered using title, subheader and text props. */}\r\n      {/* Any additional children content is rendered within the CardContent */}\r\n      {/* after the text prop content. */}\r\n      {(title || subheader || text) && (\r\n        <>\r\n          {(title || subheader) && <CardHeader title={title || undefined} subheader={subheader || undefined} />}\r\n\r\n          {(text || children) && (\r\n            <CardContent>\r\n              {text && (\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {text}\r\n                </Typography>\r\n              )}\r\n              {children}\r\n            </CardContent>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* 2nd method: */}\r\n      {/* Content is rendered using children. */}\r\n      {/* If none of the 3 main props are used, it is assumed that the */}\r\n      {/* content is using the correct CardHeader, CardContent, etc components */}\r\n      {!title && !subheader && !text && children && <>{children}</>}\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}