{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nexport var premiumProcessingRespondRFI = function premiumProcessingRespondRFI(rfiData) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(premiumProcessingRespondRFIRequest(rfiData));\n    dispatch(addLoader('premiumProcessingRespondRFI'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'api/workflow/process/rfi-reply',\n      data: rfiData\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var _data$data;\n\n      dispatch(premiumProcessingRespondRFISuccess(data));\n      dispatch(enqueueNotification('notification.respondRFI.success', 'success', {\n        keepAfterUrlChange: true,\n        data: {\n          id: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.taskRef\n        }\n      }));\n      return data;\n    })[\"catch\"](function (error) {\n      dispatch(premiumProcessingRespondRFIError(error, {\n        file: 'stores/premiumProcessing.actions.postRespondRFI'\n      }));\n      dispatch(enqueueNotification('notification.respondRFI.fail', 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('premiumProcessingRespondRFI'));\n    });\n  };\n};\nexport var premiumProcessingRespondRFIRequest = function premiumProcessingRespondRFIRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_REQUEST',\n    payload: payload\n  };\n};\nexport var premiumProcessingRespondRFISuccess = function premiumProcessingRespondRFISuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_GET_SUCCESS',\n    payload: data.data\n  };\n};\nexport var premiumProcessingRespondRFIError = function premiumProcessingRespondRFIError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_GET_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postRespondRFI.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","premiumProcessingRespondRFI","rfiData","dispatch","getState","auth","user","endpoint","config","vars","premiumProcessingRespondRFIRequest","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","premiumProcessingRespondRFISuccess","keepAfterUrlChange","id","taskRef","error","premiumProcessingRespondRFIError","file","handleUnauthorized","payload","type"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,mBAAhC,EAAqDC,YAArD,QAAyE,QAAzE;AAEA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAM1EA,QAAQ,EANkE;AAAA,QAEpEC,IAFoE,aAE5EC,IAF4E,CAEpED,IAFoE;AAAA,QAIlEE,QAJkE,aAG5EC,MAH4E,CAI1EC,IAJ0E,CAIlEF,QAJkE;;AAO9EJ,IAAAA,QAAQ,CAACO,kCAAkC,CAACR,OAAD,CAAnC,CAAR;AACAC,IAAAA,QAAQ,CAACL,SAAS,CAAC,6BAAD,CAAV,CAAR;AAEA,WAAOF,KAAK,CAACe,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAER,IAAI,CAACS,WADR;AAEJP,MAAAA,QAAQ,EAAEA,QAAQ,CAACQ,UAFf;AAGJC,MAAAA,IAAI,EAAE,gCAHF;AAIJC,MAAAA,IAAI,EAAEf;AAJF,KADD,EAOJgB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACe,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACe,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AAAA;;AACdd,MAAAA,QAAQ,CAACoB,kCAAkC,CAACN,IAAD,CAAnC,CAAR;AACAd,MAAAA,QAAQ,CACNJ,mBAAmB,CAAC,iCAAD,EAAoC,SAApC,EAA+C;AAAEyB,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BP,QAAAA,IAAI,EAAE;AAAEQ,UAAAA,EAAE,EAAER,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEA,IAAR,+CAAE,WAAYS;AAAlB;AAAlC,OAA/C,CADb,CAAR;AAGA,aAAOT,IAAP;AACD,KAfI,WAgBE,UAACU,KAAD,EAAW;AAChBxB,MAAAA,QAAQ,CACNyB,gCAAgC,CAACD,KAAD,EAAQ;AACtCE,QAAAA,IAAI,EAAE;AADgC,OAAR,CAD1B,CAAR;AAKA1B,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,8BAAD,EAAiC,OAAjC,CAApB,CAAR;AACAH,MAAAA,KAAK,CAACe,GAAN,CAAUmB,kBAAV,CAA6BH,KAA7B,EAAoCxB,QAApC,EAA8CN,UAA9C;AACA,aAAO8B,KAAP;AACD,KAzBI,aA0BI,YAAM;AACbxB,MAAAA,QAAQ,CAACH,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD,KA5BI,CAAP;AA6BD,GAvC0C;AAAA,CAApC;AAyCP,OAAO,IAAMU,kCAAkC,GAAG,SAArCA,kCAAqC,CAACqB,OAAD,EAAa;AAC7D,SAAO;AACLC,IAAAA,IAAI,EAAE,wCADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMR,kCAAkC,GAAG,SAArCA,kCAAqC,CAACN,IAAD,EAAU;AAC1D,SAAO;AACLe,IAAAA,IAAI,EAAE,4CADD;AAELD,IAAAA,OAAO,EAAEd,IAAI,CAACA;AAFT,GAAP;AAID,CALM;AAOP,OAAO,IAAMW,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACD,KAAD,EAAW;AACzD,SAAO;AACLK,IAAAA,IAAI,EAAE,0CADD;AAELD,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\n\r\nexport const premiumProcessingRespondRFI = (rfiData) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n  dispatch(premiumProcessingRespondRFIRequest(rfiData));\r\n  dispatch(addLoader('premiumProcessingRespondRFI'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'api/workflow/process/rfi-reply',\r\n      data: rfiData,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(premiumProcessingRespondRFISuccess(data));\r\n      dispatch(\r\n        enqueueNotification('notification.respondRFI.success', 'success', { keepAfterUrlChange: true, data: { id: data?.data?.taskRef } })\r\n      );\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        premiumProcessingRespondRFIError(error, {\r\n          file: 'stores/premiumProcessing.actions.postRespondRFI',\r\n        })\r\n      );\r\n      dispatch(enqueueNotification('notification.respondRFI.fail', 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('premiumProcessingRespondRFI'));\r\n    });\r\n};\r\n\r\nexport const premiumProcessingRespondRFIRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingRespondRFISuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_GET_SUCCESS',\r\n    payload: data.data,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingRespondRFIError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_RESPOND_RFI_GET_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}