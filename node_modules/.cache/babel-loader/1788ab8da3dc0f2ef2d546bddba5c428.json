{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditRiskQuote\\\\EditRiskQuote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { EditRiskQuoteView } from './EditRiskQuote.view';\nimport { patchRiskQuote } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditRiskQuote.propTypes = {\n  quote: PropTypes.object.isRequired,\n  handleClose: PropTypes.func\n};\nexport function EditRiskQuote(_ref) {\n  _s();\n\n  var quote = _ref.quote,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(data) {\n    return dispatch(patchRiskQuote(data, quote));\n  };\n\n  var handleSubmitAndAccept = function handleSubmitAndAccept(data) {\n    return dispatch(patchRiskQuote(data, quote, true));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  }; // abort\n\n\n  if (!quote || !quote.id) return null;\n  var facility = {\n    label: quote.facility.name,\n    value: JSON.stringify({\n      facilityId: quote.facility.id,\n      carrierId: quote.facility.carrierId\n    })\n  };\n  var fields = [[{\n    gridSize: {\n      xs: 12\n    },\n    type: 'select',\n    name: 'facility',\n    disabled: true,\n    value: facility.value,\n    options: [facility],\n    label: utils.string.t('app.facility')\n  }, {\n    gridSize: {\n      xs: 12,\n      sm: 6\n    },\n    type: 'number',\n    name: 'premium',\n    value: quote.premium,\n    label: \"\".concat(utils.string.t('risks.grossPremium')).concat((quote === null || quote === void 0 ? void 0 : quote.currency) ? \" (\".concat(quote === null || quote === void 0 ? void 0 : quote.currency.trim(), \")\") : \"\"),\n    validation: Yup.number().nullable().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).currency().required(utils.string.t('validation.required'))\n  }, {\n    gridSize: {\n      xs: 12,\n      sm: 6\n    },\n    type: 'datepicker',\n    name: 'validUntil',\n    label: utils.string.t('form.dateValidUntil.label'),\n    value: quote.validUntil,\n    outputFormat: 'iso',\n    muiPickerProps: {\n      minDate: utils.date.tomorrow()\n    },\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.string().nullable().required(utils.string.t('form.dateValidUntil.required'))\n  }], {\n    type: 'hidden',\n    name: 'riskId',\n    value: quote.riskId\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('risks.updateAndAccept'),\n    handler: handleSubmitAndAccept,\n    tooltip: {\n      title: utils.string.t('risks.updateLegend.submitAccept')\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('risks.update'),\n    handler: handleSubmit,\n    tooltip: {\n      title: utils.string.t('risks.updateLegend.submit')\n    }\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(EditRiskQuoteView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n}\n\n_s(EditRiskQuote, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditRiskQuote;\nEditRiskQuote.displayName = \"EditRiskQuote\";\nEditRiskQuote.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditRiskQuote\",\n  \"props\": {\n    \"quote\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default EditRiskQuote;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditRiskQuote\\\\EditRiskQuote.js\"] = {\n    name: \"EditRiskQuote\",\n    docgenInfo: EditRiskQuote.__docgenInfo,\n    path: \"src\\\\forms\\\\EditRiskQuote\\\\EditRiskQuote.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditRiskQuote\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditRiskQuote/EditRiskQuote.js"],"names":["React","PropTypes","useDispatch","Yup","EditRiskQuoteView","patchRiskQuote","utils","EditRiskQuote","propTypes","quote","object","isRequired","handleClose","func","dispatch","handleSubmit","data","handleSubmitAndAccept","handleCancel","generic","isFunction","id","facility","label","name","value","JSON","stringify","facilityId","carrierId","fields","gridSize","xs","type","disabled","options","string","t","sm","premium","currency","trim","validation","number","nullable","transform","originalvalue","isType","Number","isNaN","required","validUntil","outputFormat","muiPickerProps","minDate","date","tomorrow","muiComponentProps","fullWidth","riskId","actions","handler","tooltip","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { EditRiskQuoteView } from './EditRiskQuote.view';\r\nimport { patchRiskQuote } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nEditRiskQuote.propTypes = {\r\n  quote: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport function EditRiskQuote({ quote, handleClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    return dispatch(patchRiskQuote(data, quote));\r\n  };\r\n\r\n  const handleSubmitAndAccept = (data) => {\r\n    return dispatch(patchRiskQuote(data, quote, true));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  // abort\r\n  if (!quote || !quote.id) return null;\r\n\r\n  const facility = {\r\n    label: quote.facility.name,\r\n    value: JSON.stringify({\r\n      facilityId: quote.facility.id,\r\n      carrierId: quote.facility.carrierId,\r\n    }),\r\n  };\r\n\r\n  const fields = [\r\n    [\r\n      {\r\n        gridSize: { xs: 12 },\r\n        type: 'select',\r\n        name: 'facility',\r\n        disabled: true,\r\n        value: facility.value,\r\n        options: [facility],\r\n        label: utils.string.t('app.facility'),\r\n      },\r\n      {\r\n        gridSize: { xs: 12, sm: 6 },\r\n        type: 'number',\r\n        name: 'premium',\r\n        value: quote.premium,\r\n        label: `${utils.string.t('risks.grossPremium')}${quote?.currency ? ` (${quote?.currency.trim()})` : ``}`,\r\n        validation: Yup.number()\r\n          .nullable()\r\n          .transform(function (value, originalvalue) {\r\n            return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n          })\r\n          .currency()\r\n          .required(utils.string.t('validation.required')),\r\n      },\r\n      {\r\n        gridSize: { xs: 12, sm: 6 },\r\n        type: 'datepicker',\r\n        name: 'validUntil',\r\n        label: utils.string.t('form.dateValidUntil.label'),\r\n        value: quote.validUntil,\r\n        outputFormat: 'iso',\r\n        muiPickerProps: {\r\n          minDate: utils.date.tomorrow(),\r\n        },\r\n        muiComponentProps: {\r\n          fullWidth: true,\r\n        },\r\n        validation: Yup.string().nullable().required(utils.string.t('form.dateValidUntil.required')),\r\n      },\r\n    ],\r\n    {\r\n      type: 'hidden',\r\n      name: 'riskId',\r\n      value: quote.riskId,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('risks.updateAndAccept'),\r\n      handler: handleSubmitAndAccept,\r\n      tooltip: {\r\n        title: utils.string.t('risks.updateLegend.submitAccept'),\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('risks.update'),\r\n      handler: handleSubmit,\r\n      tooltip: {\r\n        title: utils.string.t('risks.updateLegend.submit'),\r\n      },\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <EditRiskQuoteView fields={fields} actions={actions} />;\r\n}\r\n\r\nexport default EditRiskQuote;\r\n"]},"metadata":{},"sourceType":"module"}