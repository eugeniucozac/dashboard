{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PlacementOverview\\\\PlacementOverview.js\";\nimport React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport chroma from 'chroma-js';\nimport get from 'lodash/get';\nimport throttle from 'lodash/throttle';\nimport merge from 'lodash/merge';\nimport isEqual from 'lodash/isEqual'; // app\n\nimport styles from './PlacementOverview.styles';\nimport { Button, Chart, FormSelect, LayoutContext, SectionHeader, Restricted, TableCell, Translate, Warning } from 'components';\nimport { LocationsTable, PlacementMap } from 'modules';\nimport { withThemeListener } from 'hoc';\nimport { resetLocations, showModal, postNewLocationGroup, setLocationUploadWizardExcelExtract, setLocationUploadWizardHeaderMap } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { withStyles, Box, RootRef, Table, TableRow, TableBody, Typography } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiLoaderQueue: get(state, 'ui.loader.queue', []),\n    placementSelected: get(state, 'placement.selected'),\n    headerMap: get(state, 'location.headerMap'),\n    locationsUploaded: get(state, 'location.locationsUploaded', []),\n    invalidLocationsUploaded: get(state, 'location.invalidLocationsUploaded', 0)\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  resetLocations: resetLocations,\n  showModal: showModal,\n  postNewLocationGroup: postNewLocationGroup,\n  setLocationUploadWizardExcelExtract: setLocationUploadWizardExcelExtract,\n  setLocationUploadWizardHeaderMap: setLocationUploadWizardHeaderMap\n};\nexport var PlacementOverview = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PlacementOverview, _PureComponent);\n\n  var _super = _createSuper(PlacementOverview);\n\n  function PlacementOverview(props) {\n    var _this;\n\n    _classCallCheck(this, PlacementOverview);\n\n    _this = _super.call(this, props);\n\n    _this.preparePage = function () {\n      var locations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var maps = _this.buildChartMaps(locations);\n\n      var filter = _this.findDefaultFilter(locations);\n\n      _this.setState({\n        maps: maps,\n        filter: filter\n      });\n    };\n\n    _this.findDefaultFilter = function () {\n      var locations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _loop = function _loop(i) {\n        var filter = _this.charts.reduce(function (f, chart) {\n          if (f) return f;\n          if (locations[i][chart.id]) return chart.id;\n          return f;\n        }, null);\n\n        if (filter) return {\n          v: filter\n        };\n      };\n\n      for (var i = 0; i < locations.length; i++) {\n        var _ret = _loop(i);\n\n        if (typeof _ret === \"object\") return _ret.v;\n      }\n    };\n\n    _this.buildChartMaps = function (locations) {\n      var maps = locations.reduce(function (maps, l) {\n        var yAxisLabel = _this.tivCategory(l.totalInsurableValues);\n\n        _this.charts.forEach(function (chart) {\n          var map = maps[chart.id];\n          var xAxisLabel = chart.getFilterVal(l);\n\n          if (!map.locationMap[yAxisLabel][xAxisLabel]) {\n            map.locationMap[yAxisLabel][xAxisLabel] = {\n              tiv: 0,\n              locations: []\n            };\n            map.labelMap[xAxisLabel] = true;\n          }\n\n          map.locationMap[yAxisLabel][xAxisLabel].tiv += l.totalInsurableValues;\n          map.locationMap[yAxisLabel][xAxisLabel].locations.push(l);\n        });\n\n        return maps;\n      }, _this.blankMaps());\n      var colors = utils.color.scale(_this.tivCategories.length).map(function (c) {\n        return {\n          color: c,\n          colorHover: chroma(c).darken(0.5).hex()\n        };\n      });\n\n      _this.charts.forEach(function (chart) {\n        var map = maps[chart.id];\n        map.id = chart.id;\n        map.labels = chart.sortFn(Object.keys(map.labelMap));\n        map.datasets = Object.keys(map.locationMap).map(function (y, yi) {\n          var dataset = _this.blankDataSetRow(colors[yi].color, colors[yi].colorHover);\n\n          map.labels.forEach(function (x, xi) {\n            var bar = map.locationMap[y][x];\n\n            if (bar) {\n              dataset.data[xi] = bar.tiv;\n              dataset.objects[xi] = bar.locations;\n            }\n          });\n          return dataset;\n        });\n      });\n\n      return maps;\n    };\n\n    _this.tivCategoryMap = function () {\n      return _this.tivCategories.reduce(function (map, category) {\n        map[category] = {};\n        return map;\n      }, {});\n    };\n\n    _this.blankMaps = function () {\n      return _this.charts.reduce(function (maps, chart) {\n        maps[chart.id] = _this.blankGraphData();\n        return maps;\n      }, _objectSpread({}, _this.state.maps));\n    };\n\n    _this.blankGraphData = function () {\n      return {\n        labelXMap: {},\n        labelCountMap: {},\n        labelMap: {},\n        datasets: [],\n        labels: [],\n        max: 0,\n        locationMap: _this.tivCategoryMap()\n      };\n    };\n\n    _this.blankDataSetRow = function (color, colorHover) {\n      return {\n        data: [],\n        objects: [],\n        backgroundColor: color,\n        hoverBackgroundColor: colorHover\n      };\n    };\n\n    _this.getLocationsFiltered = function (chartFilter) {\n      var filter = _this.state.filter;\n\n      if (!chartFilter || !_this.state.maps[filter] || !_this.state.maps[filter].locationMap) {\n        return _this.getLocationsActive(get(_this.props, 'placementSelected.locations', []));\n      }\n\n      var locationsFiltered = _this.tivCategories.reduce(function (arr, category) {\n        var obj = _this.state.maps[filter].locationMap[category][chartFilter];\n        return obj && obj.locations ? arr.concat(obj.locations) : arr;\n      }, []);\n\n      return _this.getLocationsActive(locationsFiltered);\n    };\n\n    _this.getLocationsActive = function (locations) {\n      return locations.map(function (location) {\n        location.active = _this.state.maps.activeMarkers.includes(location.id);\n        return Object.assign({}, location);\n      });\n    };\n\n    _this.handleClickLocation = function (location) {\n      if (!location || !location.id) return;\n      var maps = _this.state.maps;\n      var _this$props = _this.props,\n          mobile = _this$props.mobile,\n          tablet = _this$props.tablet;\n      var lng = get(location, 'geocodeResult.lng');\n      var lat = get(location, 'geocodeResult.lat');\n      var elementToScroll = mobile || tablet ? window : _this.props.context.refMain.current;\n      var elementOffsetTop = _this.mapRef.current.offsetTop;\n\n      _this.setState({\n        maps: _objectSpread(_objectSpread(_objectSpread({}, maps), {}, {\n          activeMarkers: maps.activeMarkers.includes(location.id) ? [] : [location.id]\n        }, lng && lat && {\n          center: [lng, lat]\n        }), {}, {\n          zoom: config.mapbox.marker.maxZoom\n        })\n      });\n\n      if (mobile) {\n        // adding 40px to offset the breadcrumb height\n        elementToScroll.scroll({\n          top: elementOffsetTop + 40,\n          left: 0,\n          behavior: 'smooth'\n        });\n      } else {\n        _this.mapRef.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    };\n\n    _this.handleChangeFilter = function (name, value) {\n      var mergedOptions = merge({}, _this.state.options, {\n        scales: {\n          xAxes: [{\n            scaleLabel: {\n              labelString: utils.string.t(\"placement.overview.chart.\".concat(value))\n            }\n          }]\n        }\n      });\n\n      _this.setState({\n        filter: value,\n        chartFilter: null,\n        options: mergedOptions,\n        maps: _objectSpread(_objectSpread({}, _this.state.maps), {}, {\n          center: _this.defaultMapOptions.center,\n          zoom: _this.defaultMapOptions.zoom\n        })\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        pagination: _objectSpread(_objectSpread({}, _this.state.pagination), {}, {\n          page: newPage\n        })\n      });\n    };\n\n    _this.handleChangeRowsPerPage = function (event) {\n      _this.setState({\n        pagination: _objectSpread(_objectSpread({}, _this.state.pagination), {}, {\n          rowsPerPage: event.target.value\n        })\n      });\n    };\n\n    _this.handleChartOnload = function (id, instance) {\n      _this.setState({\n        chartInstance: instance\n      });\n    };\n\n    _this.handleClickUpload = function (event) {\n      _this.props.resetLocations();\n\n      _this.props.showModal({\n        component: 'PASTE_FROM_EXCEL',\n        props: {\n          title: 'location.upload.title',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            name: 'placement-overview',\n            headers: _this.props.headerMap,\n            steps: 4,\n            labels: {\n              step1: {\n                title: utils.string.html('location.upload.step1.title'),\n                hint: utils.string.t('location.upload.step1.hint')\n              },\n              step2: {\n                title: utils.string.html('location.upload.step2.title'),\n                hint: utils.string.t('location.upload.step2.hint')\n              },\n              step3: {\n                title: utils.string.html('location.upload.step3.title'),\n                hint: utils.string.t('location.upload.step3.hint')\n              },\n              step4: {\n                title: utils.string.html('location.upload.step4.title'),\n                hint: utils.string.t('location.upload.step4.hint')\n              }\n            },\n            handlers: {\n              extract: function extract(data) {\n                return _this.props.setLocationUploadWizardExcelExtract(data);\n              },\n              match: function match(data) {\n                return _this.props.setLocationUploadWizardHeaderMap(data);\n              },\n              submit: function submit() {\n                return _this.props.postNewLocationGroup();\n              }\n            },\n            children: function children() {\n              var tiv = _this.props.locationsUploaded.reduce(function (sum, l) {\n                return sum + (l.totalInsurableValues || 0);\n              }, 0);\n\n              return /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: [_this.props.invalidLocationsUploaded > 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Translate, {\n                          label: \"location.summary.invalidLocationCount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 27\n                        }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(Warning, {\n                          text: utils.string.t('location.summary.locationRequiredFields'),\n                          type: \"error\",\n                          size: \"small\",\n                          align: \"left\",\n                          icon: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 515,\n                          columnNumber: 27\n                        }, _assertThisInitialized(_this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 25\n                      }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: _this.props.invalidLocationsUploaded\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 25\n                      }, _assertThisInitialized(_this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 23\n                    }, _assertThisInitialized(_this)) : null, /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Translate, {\n                          label: \"location.summary.locationCount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 528,\n                          columnNumber: 25\n                        }, _assertThisInitialized(_this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 23\n                      }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: _this.props.locationsUploaded.length\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 23\n                      }, _assertThisInitialized(_this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 21\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Translate, {\n                          label: \"location.field.totalInsurableValues\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 534,\n                          columnNumber: 25\n                        }, _assertThisInitialized(_this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 23\n                      }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: utils.string.t('format.currency', {\n                          value: {\n                            number: tiv,\n                            currency: constants.CURRENCY_USD\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 23\n                      }, _assertThisInitialized(_this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 21\n                    }, _assertThisInitialized(_this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 19\n                  }, _assertThisInitialized(_this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 17\n                }, _assertThisInitialized(_this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 15\n              }, _assertThisInitialized(_this));\n            }\n          }\n        }\n      });\n    };\n\n    _this.mapRef = /*#__PURE__*/React.createRef();\n    _this.geocodingMap = {\n      ROOFTOP: utils.string.t('map.geocoding.accuracy.building'),\n      RANGE_INTERPOLATED: utils.string.t('map.geocoding.accuracy.street'),\n      GEOMETRIC_CENTER: utils.string.t('map.geocoding.accuracy.longRoad'),\n      APPROXIMATE: utils.string.t('map.geocoding.accuracy.area'),\n      NOT_FOUND: utils.string.t('map.geocoding.accuracy.notFound')\n    };\n    _this.defaultMapOptions = {\n      center: config.mapbox.location.country.center.US,\n      zoom: config.mapbox.zoom\n    };\n    _this.charts = [{\n      id: 'country',\n      label: utils.string.t('placement.overview.chart.country'),\n      getFilterVal: function getFilterVal(l) {\n        return l.country && typeof l.country == 'string' ? l.country : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'state',\n      label: utils.string.t('placement.overview.chart.state'),\n      getFilterVal: function getFilterVal(l) {\n        return l.state && typeof l.state === 'string' ? l.state : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'city',\n      label: utils.string.t('placement.overview.chart.city'),\n      getFilterVal: function getFilterVal(l) {\n        return l.city && typeof l.city === 'string' ? l.city : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'geocodingAccuracy',\n      label: utils.string.t('placement.overview.chart.geocodingAccuracy'),\n      getFilterVal: function getFilterVal(l) {\n        return l.geocodeResult && l.geocodeResult.accuracy ? _this.geocodingMap[l.geocodeResult.accuracy] : _this.geocodingMap.NOT_FOUND;\n      },\n      sortFn: function sortFn(labels) {\n        return Object.values(_this.geocodingMap);\n      }\n    }, {\n      id: 'catExposure',\n      label: utils.string.t('placement.overview.chart.catExposure'),\n      getFilterVal: function getFilterVal(l) {\n        return l.exposures[0] && l.exposures[0].catType ? l.exposures[0].catType : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'hasSprinklers',\n      label: utils.string.t('placement.overview.chart.hasSprinklers'),\n      getFilterVal: function getFilterVal(l) {\n        return l.hasSprinklers && typeof l.hasSprinklers === 'string' ? l.hasSprinklers : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'hasAlarm',\n      label: utils.string.t('placement.overview.chart.hasAlarm'),\n      getFilterVal: function getFilterVal(l) {\n        return l.hasAlarm && typeof l.hasAlarm === 'string' ? l.hasAlarm : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }, {\n      id: 'hasBackupPower',\n      label: utils.string.t('placement.overview.chart.hasBackupPower'),\n      getFilterVal: function getFilterVal(l) {\n        return l.hasBackupPower && typeof l.hasBackupPower === 'string' ? l.hasBackupPower : utils.string.t('app.na');\n      },\n      sortFn: function sortFn(labels) {\n        return labels.sort();\n      }\n    }];\n    _this.tivCategories = [utils.string.t('app.na'), '< 100k', '100k - 1m', '1m - 10m', '10m - 100m', '100m - 1bn', ' > 1bn'];\n\n    _this.tivCategory = function (tiv) {\n      if (!tiv || !(tiv > 0)) return _this.tivCategories[0];\n      if (tiv < 100000) return _this.tivCategories[1];\n      if (tiv < 1000000) return _this.tivCategories[2];\n      if (tiv < 10000000) return _this.tivCategories[3];\n      if (tiv < 100000000) return _this.tivCategories[4];\n      if (tiv < 1000000000) return _this.tivCategories[5];\n      return _this.tivCategories[6];\n    };\n\n    _this.state = {\n      filter: null,\n      maps: {\n        activeMarkers: [],\n        center: _this.defaultMapOptions.center,\n        zoom: _this.defaultMapOptions.zoom\n      },\n      chartFilter: null,\n      chartInstance: null,\n      options: _objectSpread(_objectSpread({}, config.ui.chart.bar), {}, {\n        maintainAspectRatio: false,\n        scales: merge({}, config.ui.chart.bar.scales, {\n          xAxes: [{\n            scaleLabel: {\n              labelString: utils.string.t('placement.overview.chart.state')\n            }\n          }],\n          yAxes: [{\n            scaleLabel: {\n              labelString: utils.string.t('placement.overview.chart.scaleTivTitle', {\n                currency: config.currency\n              })\n            },\n            ticks: {\n              callback: function callback(label) {\n                return utils.string.t('format.number', {\n                  value: {\n                    number: label,\n                    format: {\n                      average: true,\n                      totalLength: 12,\n                      lowPrecision: false\n                    }\n                  }\n                }).toUpperCase();\n              }\n            }\n          }]\n        }),\n        tooltips: _objectSpread(_objectSpread({}, config.ui.chart.bar.tooltips), {}, {\n          callbacks: {\n            title: function title(tooltipItems, data) {\n              var tiv = tooltipItems.reduce(function (sum, tooltipItem) {\n                var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || 0;\n                return sum + value;\n              }, 0);\n              return (tooltipItems[0].label || '') + ' ' + utils.string.t('chart.tooltip.tiv', {\n                amount: tiv\n              });\n            },\n            label: function label() {\n              return null;\n            },\n            footer: function footer(tooltipItems, data) {\n              return tooltipItems.map(function (tooltipItem) {\n                var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || 0;\n                return _this.tivCategories[tooltipItem.datasetIndex] + ' ' + utils.string.t('chart.tooltip.tiv', {\n                  amount: value\n                });\n              });\n            }\n          }\n        }),\n        onClick: function onClick(event) {\n          var _this$state = _this.state,\n              maps = _this$state.maps,\n              filter = _this$state.filter,\n              chartFilter = _this$state.chartFilter;\n          var chart = get(_assertThisInitialized(_this), 'state.chartInstance', {});\n          var element = chart.getElementAtEvent(event)[0];\n\n          if (element) {\n            var newChartFilter = get(maps, \"[\".concat(filter, \"].labels[\").concat(element._index, \"]\"));\n\n            _this.setState({\n              chartFilter: chartFilter === newChartFilter ? null : newChartFilter\n            });\n          }\n        },\n        onHover: throttle(function (event, elems) {\n          var canvas = get(_assertThisInitialized(_this), 'state.chartInstance.canvas');\n\n          if (canvas) {\n            canvas.style.cursor = elems[0] ? 'pointer' : 'default';\n          }\n        }, 100)\n      })\n    };\n    return _this;\n  }\n\n  _createClass(PlacementOverview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.preparePage(get(this.props, 'placementSelected.locations', []));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var chart = get(this, 'state.chartInstance') || {};\n\n      if (chart && utils.generic.isFunction(chart.destroy)) {\n        chart.destroy();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevLocations = get(prevProps, 'placementSelected.locations', []);\n      var newLocations = get(this.props, 'placementSelected.locations', []);\n\n      if (!isEqual(prevLocations, newLocations)) {\n        this.preparePage(newLocations);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          uiLoaderQueue = _this$props2.uiLoaderQueue,\n          classes = _this$props2.classes,\n          placementSelected = _this$props2.placementSelected;\n      var _this$state2 = this.state,\n          filter = _this$state2.filter,\n          maps = _this$state2.maps,\n          chartFilter = _this$state2.chartFilter,\n          options = _this$state2.options;\n      var loading = uiLoaderQueue.length || 0;\n      var cols = [{\n        id: 'streetAddress',\n        label: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"app.streetAddress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 37\n        }, this),\n        sort: {\n          type: 'lexical',\n          direction: 'asc'\n        }\n      }, {\n        id: 'city',\n        label: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"app.city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 28\n        }, this),\n        sort: {\n          type: 'lexical',\n          direction: 'asc'\n        }\n      }, {\n        id: 'state',\n        label: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"app.state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 29\n        }, this),\n        sort: {\n          type: 'lexical',\n          direction: 'asc'\n        }\n      }, {\n        id: 'totalInsurableValues',\n        label: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"app.tiv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 44\n        }, this),\n        sort: {\n          type: 'numeric',\n          direction: 'desc'\n        }\n      }];\n      var locations = get(this.props, 'placementSelected.locations', []);\n      var locationsFiltered = this.getLocationsFiltered(chartFilter);\n      var chartOpts = this.charts.map(function (chart) {\n        return {\n          value: chart.id,\n          label: chart.label\n        };\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: utils.placement.isPhysicalLoss(placementSelected) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            title: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"placement.overview.title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 35\n            }, this),\n            icon: DashboardIcon,\n            testid: \"placement-overview\",\n            children: [locations.length > 0 && !loading && /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"map_filter\",\n              size: \"sm\",\n              value: filter,\n              options: chartOpts,\n              muiComponentProps: {\n                fullWidth: false\n              },\n              nestedClasses: {\n                root: classes.select\n              },\n              handleUpdate: this.handleChangeFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), !loading && locations.length <= 0 && /*#__PURE__*/_jsxDEV(Restricted, {\n              include: [constants.ROLE_BROKER],\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: CloudUploadIcon,\n                iconWide: true,\n                color: \"primary\",\n                variant: \"outlined\",\n                size: \"medium\",\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"map.sov.upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 27\n                }, this),\n                onClick: this.handleClickUpload\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: locationsFiltered.length > 0 ? 'auto' : 0\n            },\n            children: filter && !!get(maps, \"\".concat(filter, \".datasets.length\")) && !!get(maps, \"\".concat(filter, \".labels.length\")) && /*#__PURE__*/_jsxDEV(Chart, {\n              id: \"placementLocations\",\n              type: \"bar\",\n              height: 180 // JSON parse/stringify is not ideal but ChartJS takes reference to data/objects within\n              // this allows us to keep the animation when changing filter/data\n              ,\n              data: JSON.parse(JSON.stringify(maps[filter])),\n              options: options,\n              nestedClasses: {\n                root: classes.chartContainer,\n                chart: classes.chart\n              },\n              onload: this.handleChartOnload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RootRef, {\n            rootRef: this.mapRef,\n            children: /*#__PURE__*/_jsxDEV(PlacementMap, {\n              locations: locations,\n              locationsFiltered: locationsFiltered,\n              center: maps.center,\n              zoom: maps.zoom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), locationsFiltered.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tableContainer,\n            children: [/*#__PURE__*/_jsxDEV(Translate, {\n              label: \"placement.overview.listLocations\",\n              variant: \"h3\",\n              display: \"inline\",\n              noWrap: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), (filter || chartFilter) && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              display: \"inline\",\n              noWrap: true,\n              className: classes.tableSubtitle,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"(\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 21\n              }, this), filter && /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"placement.overview.chart.\".concat(filter)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 32\n              }, this), chartFilter && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\xA0/\\xA0\", chartFilter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \")\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LocationsTable, {\n              rows: locationsFiltered,\n              cols: cols,\n              sort: {\n                by: 'totalInsurableValues',\n                type: 'numeric',\n                direction: 'desc'\n              },\n              pagination: {\n                page: 0,\n                rowsPerPage: 100,\n                rowsTotal: locationsFiltered.length\n              },\n              handleClickRow: this.handleClickLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"\".concat(config.routes.placement.marketing.markets, \"/\").concat(placementSelected.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return PlacementOverview;\n}(PureComponent);\nexport var PlacementOverviewWithContext = /*#__PURE__*/function (_PureComponent2) {\n  _inherits(PlacementOverviewWithContext, _PureComponent2);\n\n  var _super2 = _createSuper(PlacementOverviewWithContext);\n\n  function PlacementOverviewWithContext() {\n    _classCallCheck(this, PlacementOverviewWithContext);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(PlacementOverviewWithContext, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(LayoutContext.Consumer, {\n        children: function children(context) {\n          return /*#__PURE__*/_jsxDEV(PlacementOverview, _objectSpread(_objectSpread({}, _this2.props), {}, {\n            context: context\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 50\n          }, _this2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 12\n      }, this);\n    }\n  }]);\n\n  return PlacementOverviewWithContext;\n}(PureComponent);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withThemeListener)(PlacementOverviewWithContext);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PlacementOverview/PlacementOverview.js"],"names":["React","PureComponent","Redirect","connect","compose","chroma","get","throttle","merge","isEqual","styles","Button","Chart","FormSelect","LayoutContext","SectionHeader","Restricted","TableCell","Translate","Warning","LocationsTable","PlacementMap","withThemeListener","resetLocations","showModal","postNewLocationGroup","setLocationUploadWizardExcelExtract","setLocationUploadWizardHeaderMap","constants","utils","config","withStyles","Box","RootRef","Table","TableRow","TableBody","Typography","DashboardIcon","CloudUploadIcon","mapStateToProps","state","uiLoaderQueue","placementSelected","headerMap","locationsUploaded","invalidLocationsUploaded","mapDispatchToProps","PlacementOverview","props","preparePage","locations","maps","buildChartMaps","filter","findDefaultFilter","setState","i","charts","reduce","f","chart","id","length","l","yAxisLabel","tivCategory","totalInsurableValues","forEach","map","xAxisLabel","getFilterVal","locationMap","tiv","labelMap","push","blankMaps","colors","color","scale","tivCategories","c","colorHover","darken","hex","labels","sortFn","Object","keys","datasets","y","yi","dataset","blankDataSetRow","x","xi","bar","data","objects","tivCategoryMap","category","blankGraphData","labelXMap","labelCountMap","max","backgroundColor","hoverBackgroundColor","getLocationsFiltered","chartFilter","getLocationsActive","locationsFiltered","arr","obj","concat","location","active","activeMarkers","includes","assign","handleClickLocation","mobile","tablet","lng","lat","elementToScroll","window","context","refMain","current","elementOffsetTop","mapRef","offsetTop","center","zoom","mapbox","marker","maxZoom","scroll","top","left","behavior","scrollIntoView","handleChangeFilter","name","value","mergedOptions","options","scales","xAxes","scaleLabel","labelString","string","t","defaultMapOptions","handleChangePage","event","newPage","pagination","page","handleChangeRowsPerPage","rowsPerPage","target","handleChartOnload","instance","chartInstance","handleClickUpload","component","title","fullWidth","maxWidth","componentProps","headers","steps","step1","html","hint","step2","step3","step4","handlers","extract","match","submit","children","sum","number","currency","CURRENCY_USD","createRef","geocodingMap","ROOFTOP","RANGE_INTERPOLATED","GEOMETRIC_CENTER","APPROXIMATE","NOT_FOUND","country","US","label","sort","city","geocodeResult","accuracy","values","exposures","catType","hasSprinklers","hasAlarm","hasBackupPower","ui","maintainAspectRatio","yAxes","ticks","callback","format","average","totalLength","lowPrecision","toUpperCase","tooltips","callbacks","tooltipItems","tooltipItem","datasetIndex","index","amount","footer","onClick","element","getElementAtEvent","newChartFilter","_index","onHover","elems","canvas","style","cursor","generic","isFunction","destroy","prevProps","prevLocations","newLocations","classes","loading","cols","type","direction","chartOpts","placement","isPhysicalLoss","root","select","ROLE_BROKER","height","JSON","parse","stringify","chartContainer","tableContainer","tableSubtitle","by","rowsTotal","routes","marketing","markets","PlacementOverviewWithContext"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport chroma from 'chroma-js';\r\nimport get from 'lodash/get';\r\nimport throttle from 'lodash/throttle';\r\nimport merge from 'lodash/merge';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n// app\r\nimport styles from './PlacementOverview.styles';\r\nimport { Button, Chart, FormSelect, LayoutContext, SectionHeader, Restricted, TableCell, Translate, Warning } from 'components';\r\nimport { LocationsTable, PlacementMap } from 'modules';\r\nimport { withThemeListener } from 'hoc';\r\nimport {\r\n  resetLocations,\r\n  showModal,\r\n  postNewLocationGroup,\r\n  setLocationUploadWizardExcelExtract,\r\n  setLocationUploadWizardHeaderMap,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { withStyles, Box, RootRef, Table, TableRow, TableBody, Typography } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  uiLoaderQueue: get(state, 'ui.loader.queue', []),\r\n  placementSelected: get(state, 'placement.selected'),\r\n  headerMap: get(state, 'location.headerMap'),\r\n  locationsUploaded: get(state, 'location.locationsUploaded', []),\r\n  invalidLocationsUploaded: get(state, 'location.invalidLocationsUploaded', 0),\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  resetLocations,\r\n  showModal,\r\n  postNewLocationGroup,\r\n  setLocationUploadWizardExcelExtract,\r\n  setLocationUploadWizardHeaderMap,\r\n};\r\n\r\nexport class PlacementOverview extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.mapRef = React.createRef();\r\n    this.geocodingMap = {\r\n      ROOFTOP: utils.string.t('map.geocoding.accuracy.building'),\r\n      RANGE_INTERPOLATED: utils.string.t('map.geocoding.accuracy.street'),\r\n      GEOMETRIC_CENTER: utils.string.t('map.geocoding.accuracy.longRoad'),\r\n      APPROXIMATE: utils.string.t('map.geocoding.accuracy.area'),\r\n      NOT_FOUND: utils.string.t('map.geocoding.accuracy.notFound'),\r\n    };\r\n\r\n    this.defaultMapOptions = {\r\n      center: config.mapbox.location.country.center.US,\r\n      zoom: config.mapbox.zoom,\r\n    };\r\n\r\n    this.charts = [\r\n      {\r\n        id: 'country',\r\n        label: utils.string.t('placement.overview.chart.country'),\r\n        getFilterVal: (l) => {\r\n          return l.country && typeof l.country == 'string' ? l.country : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'state',\r\n        label: utils.string.t('placement.overview.chart.state'),\r\n        getFilterVal: (l) => {\r\n          return l.state && typeof l.state === 'string' ? l.state : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'city',\r\n        label: utils.string.t('placement.overview.chart.city'),\r\n        getFilterVal: (l) => {\r\n          return l.city && typeof l.city === 'string' ? l.city : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'geocodingAccuracy',\r\n        label: utils.string.t('placement.overview.chart.geocodingAccuracy'),\r\n        getFilterVal: (l) => {\r\n          return l.geocodeResult && l.geocodeResult.accuracy ? this.geocodingMap[l.geocodeResult.accuracy] : this.geocodingMap.NOT_FOUND;\r\n        },\r\n        sortFn: (labels) => {\r\n          return Object.values(this.geocodingMap);\r\n        },\r\n      },\r\n      {\r\n        id: 'catExposure',\r\n        label: utils.string.t('placement.overview.chart.catExposure'),\r\n        getFilterVal: (l) => {\r\n          return l.exposures[0] && l.exposures[0].catType ? l.exposures[0].catType : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'hasSprinklers',\r\n        label: utils.string.t('placement.overview.chart.hasSprinklers'),\r\n        getFilterVal: (l) => {\r\n          return l.hasSprinklers && typeof l.hasSprinklers === 'string' ? l.hasSprinklers : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'hasAlarm',\r\n        label: utils.string.t('placement.overview.chart.hasAlarm'),\r\n        getFilterVal: (l) => {\r\n          return l.hasAlarm && typeof l.hasAlarm === 'string' ? l.hasAlarm : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n      {\r\n        id: 'hasBackupPower',\r\n        label: utils.string.t('placement.overview.chart.hasBackupPower'),\r\n        getFilterVal: (l) => {\r\n          return l.hasBackupPower && typeof l.hasBackupPower === 'string' ? l.hasBackupPower : utils.string.t('app.na');\r\n        },\r\n        sortFn: (labels) => {\r\n          return labels.sort();\r\n        },\r\n      },\r\n    ];\r\n\r\n    this.tivCategories = [utils.string.t('app.na'), '< 100k', '100k - 1m', '1m - 10m', '10m - 100m', '100m - 1bn', ' > 1bn'];\r\n\r\n    this.tivCategory = (tiv) => {\r\n      if (!tiv || !(tiv > 0)) return this.tivCategories[0];\r\n      if (tiv < 100000) return this.tivCategories[1];\r\n      if (tiv < 1000000) return this.tivCategories[2];\r\n      if (tiv < 10000000) return this.tivCategories[3];\r\n      if (tiv < 100000000) return this.tivCategories[4];\r\n      if (tiv < 1000000000) return this.tivCategories[5];\r\n      return this.tivCategories[6];\r\n    };\r\n\r\n    this.state = {\r\n      filter: null,\r\n      maps: {\r\n        activeMarkers: [],\r\n        center: this.defaultMapOptions.center,\r\n        zoom: this.defaultMapOptions.zoom,\r\n      },\r\n      chartFilter: null,\r\n      chartInstance: null,\r\n      options: {\r\n        ...config.ui.chart.bar,\r\n        maintainAspectRatio: false,\r\n        scales: merge({}, config.ui.chart.bar.scales, {\r\n          xAxes: [\r\n            {\r\n              scaleLabel: {\r\n                labelString: utils.string.t('placement.overview.chart.state'),\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              scaleLabel: {\r\n                labelString: utils.string.t('placement.overview.chart.scaleTivTitle', { currency: config.currency }),\r\n              },\r\n              ticks: {\r\n                callback: (label) => {\r\n                  return utils.string\r\n                    .t('format.number', {\r\n                      value: {\r\n                        number: label,\r\n                        format: {\r\n                          average: true,\r\n                          totalLength: 12,\r\n                          lowPrecision: false,\r\n                        },\r\n                      },\r\n                    })\r\n                    .toUpperCase();\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        }),\r\n        tooltips: {\r\n          ...config.ui.chart.bar.tooltips,\r\n          callbacks: {\r\n            title: (tooltipItems, data) => {\r\n              const tiv = tooltipItems.reduce((sum, tooltipItem) => {\r\n                const value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || 0;\r\n                return sum + value;\r\n              }, 0);\r\n              return (tooltipItems[0].label || '') + ' ' + utils.string.t('chart.tooltip.tiv', { amount: tiv });\r\n            },\r\n            label: () => null,\r\n            footer: (tooltipItems, data) => {\r\n              return tooltipItems.map((tooltipItem) => {\r\n                const value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || 0;\r\n                return this.tivCategories[tooltipItem.datasetIndex] + ' ' + utils.string.t('chart.tooltip.tiv', { amount: value });\r\n              });\r\n            },\r\n          },\r\n        },\r\n        onClick: (event) => {\r\n          const { maps, filter, chartFilter } = this.state;\r\n          const chart = get(this, 'state.chartInstance', {});\r\n          const element = chart.getElementAtEvent(event)[0];\r\n\r\n          if (element) {\r\n            const newChartFilter = get(maps, `[${filter}].labels[${element._index}]`);\r\n\r\n            this.setState({\r\n              chartFilter: chartFilter === newChartFilter ? null : newChartFilter,\r\n            });\r\n          }\r\n        },\r\n        onHover: throttle((event, elems) => {\r\n          const canvas = get(this, 'state.chartInstance.canvas');\r\n\r\n          if (canvas) {\r\n            canvas.style.cursor = elems[0] ? 'pointer' : 'default';\r\n          }\r\n        }, 100),\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.preparePage(get(this.props, 'placementSelected.locations', []));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const chart = get(this, 'state.chartInstance') || {};\r\n\r\n    if (chart && utils.generic.isFunction(chart.destroy)) {\r\n      chart.destroy();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevLocations = get(prevProps, 'placementSelected.locations', []);\r\n    const newLocations = get(this.props, 'placementSelected.locations', []);\r\n\r\n    if (!isEqual(prevLocations, newLocations)) {\r\n      this.preparePage(newLocations);\r\n    }\r\n  }\r\n\r\n  preparePage = (locations = []) => {\r\n    const maps = this.buildChartMaps(locations);\r\n    const filter = this.findDefaultFilter(locations);\r\n    this.setState({ maps, filter });\r\n  };\r\n\r\n  findDefaultFilter = (locations = []) => {\r\n    for (let i = 0; i < locations.length; i++) {\r\n      const filter = this.charts.reduce((f, chart) => {\r\n        if (f) return f;\r\n        if (locations[i][chart.id]) return chart.id;\r\n        return f;\r\n      }, null);\r\n\r\n      if (filter) return filter;\r\n    }\r\n  };\r\n\r\n  buildChartMaps = (locations) => {\r\n    const maps = locations.reduce((maps, l) => {\r\n      const yAxisLabel = this.tivCategory(l.totalInsurableValues);\r\n\r\n      this.charts.forEach((chart) => {\r\n        const map = maps[chart.id];\r\n        const xAxisLabel = chart.getFilterVal(l);\r\n\r\n        if (!map.locationMap[yAxisLabel][xAxisLabel]) {\r\n          map.locationMap[yAxisLabel][xAxisLabel] = { tiv: 0, locations: [] };\r\n          map.labelMap[xAxisLabel] = true;\r\n        }\r\n        map.locationMap[yAxisLabel][xAxisLabel].tiv += l.totalInsurableValues;\r\n        map.locationMap[yAxisLabel][xAxisLabel].locations.push(l);\r\n      });\r\n      return maps;\r\n    }, this.blankMaps());\r\n\r\n    const colors = utils.color.scale(this.tivCategories.length).map((c) => {\r\n      return {\r\n        color: c,\r\n        colorHover: chroma(c).darken(0.5).hex(),\r\n      };\r\n    });\r\n\r\n    this.charts.forEach((chart) => {\r\n      const map = maps[chart.id];\r\n\r\n      map.id = chart.id;\r\n      map.labels = chart.sortFn(Object.keys(map.labelMap));\r\n\r\n      map.datasets = Object.keys(map.locationMap).map((y, yi) => {\r\n        const dataset = this.blankDataSetRow(colors[yi].color, colors[yi].colorHover);\r\n\r\n        map.labels.forEach((x, xi) => {\r\n          const bar = map.locationMap[y][x];\r\n\r\n          if (bar) {\r\n            dataset.data[xi] = bar.tiv;\r\n            dataset.objects[xi] = bar.locations;\r\n          }\r\n        });\r\n\r\n        return dataset;\r\n      });\r\n    });\r\n\r\n    return maps;\r\n  };\r\n\r\n  tivCategoryMap = () => {\r\n    return this.tivCategories.reduce((map, category) => {\r\n      map[category] = {};\r\n      return map;\r\n    }, {});\r\n  };\r\n\r\n  blankMaps = () => {\r\n    return this.charts.reduce(\r\n      (maps, chart) => {\r\n        maps[chart.id] = this.blankGraphData();\r\n        return maps;\r\n      },\r\n      { ...this.state.maps }\r\n    );\r\n  };\r\n\r\n  blankGraphData = () => {\r\n    return {\r\n      labelXMap: {},\r\n      labelCountMap: {},\r\n      labelMap: {},\r\n      datasets: [],\r\n      labels: [],\r\n      max: 0,\r\n      locationMap: this.tivCategoryMap(),\r\n    };\r\n  };\r\n\r\n  blankDataSetRow = (color, colorHover) => {\r\n    return { data: [], objects: [], backgroundColor: color, hoverBackgroundColor: colorHover };\r\n  };\r\n\r\n  getLocationsFiltered = (chartFilter) => {\r\n    const { filter } = this.state;\r\n\r\n    if (!chartFilter || !this.state.maps[filter] || !this.state.maps[filter].locationMap) {\r\n      return this.getLocationsActive(get(this.props, 'placementSelected.locations', []));\r\n    }\r\n\r\n    let locationsFiltered = this.tivCategories.reduce((arr, category) => {\r\n      const obj = this.state.maps[filter].locationMap[category][chartFilter];\r\n      return obj && obj.locations ? arr.concat(obj.locations) : arr;\r\n    }, []);\r\n    return this.getLocationsActive(locationsFiltered);\r\n  };\r\n\r\n  getLocationsActive = (locations) => {\r\n    return locations.map((location) => {\r\n      location.active = this.state.maps.activeMarkers.includes(location.id);\r\n      return Object.assign({}, location);\r\n    });\r\n  };\r\n\r\n  handleClickLocation = (location) => {\r\n    if (!location || !location.id) return;\r\n\r\n    const { maps } = this.state;\r\n    const { mobile, tablet } = this.props;\r\n    const lng = get(location, 'geocodeResult.lng');\r\n    const lat = get(location, 'geocodeResult.lat');\r\n    const elementToScroll = mobile || tablet ? window : this.props.context.refMain.current;\r\n    const elementOffsetTop = this.mapRef.current.offsetTop;\r\n\r\n    this.setState({\r\n      maps: {\r\n        ...maps,\r\n        activeMarkers: maps.activeMarkers.includes(location.id) ? [] : [location.id],\r\n        ...(lng && lat && { center: [lng, lat] }),\r\n        zoom: config.mapbox.marker.maxZoom,\r\n      },\r\n    });\r\n\r\n    if (mobile) {\r\n      // adding 40px to offset the breadcrumb height\r\n      elementToScroll.scroll({ top: elementOffsetTop + 40, left: 0, behavior: 'smooth' });\r\n    } else {\r\n      this.mapRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  handleChangeFilter = (name, value) => {\r\n    const mergedOptions = merge({}, this.state.options, {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            scaleLabel: {\r\n              labelString: utils.string.t(`placement.overview.chart.${value}`),\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n    this.setState({\r\n      filter: value,\r\n      chartFilter: null,\r\n      options: mergedOptions,\r\n      maps: {\r\n        ...this.state.maps,\r\n        center: this.defaultMapOptions.center,\r\n        zoom: this.defaultMapOptions.zoom,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({\r\n      pagination: {\r\n        ...this.state.pagination,\r\n        page: newPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({\r\n      pagination: {\r\n        ...this.state.pagination,\r\n        rowsPerPage: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChartOnload = (id, instance) => {\r\n    this.setState({\r\n      chartInstance: instance,\r\n    });\r\n  };\r\n\r\n  handleClickUpload = (event) => {\r\n    this.props.resetLocations();\r\n    this.props.showModal({\r\n      component: 'PASTE_FROM_EXCEL',\r\n      props: {\r\n        title: 'location.upload.title',\r\n        fullWidth: true,\r\n        maxWidth: 'lg',\r\n        componentProps: {\r\n          name: 'placement-overview',\r\n          headers: this.props.headerMap,\r\n          steps: 4,\r\n          labels: {\r\n            step1: {\r\n              title: utils.string.html('location.upload.step1.title'),\r\n              hint: utils.string.t('location.upload.step1.hint'),\r\n            },\r\n            step2: {\r\n              title: utils.string.html('location.upload.step2.title'),\r\n              hint: utils.string.t('location.upload.step2.hint'),\r\n            },\r\n            step3: {\r\n              title: utils.string.html('location.upload.step3.title'),\r\n              hint: utils.string.t('location.upload.step3.hint'),\r\n            },\r\n            step4: {\r\n              title: utils.string.html('location.upload.step4.title'),\r\n              hint: utils.string.t('location.upload.step4.hint'),\r\n            },\r\n          },\r\n          handlers: {\r\n            extract: (data) => this.props.setLocationUploadWizardExcelExtract(data),\r\n            match: (data) => this.props.setLocationUploadWizardHeaderMap(data),\r\n            submit: () => this.props.postNewLocationGroup(),\r\n          },\r\n          children: () => {\r\n            const tiv = this.props.locationsUploaded.reduce((sum, l) => sum + (l.totalInsurableValues || 0), 0);\r\n\r\n            return (\r\n              <Box mt={2} mb={2}>\r\n                <Table>\r\n                  <TableBody>\r\n                    {this.props.invalidLocationsUploaded > 0 ? (\r\n                      <TableRow>\r\n                        <TableCell>\r\n                          <Translate label=\"location.summary.invalidLocationCount\" />\r\n                          <Warning\r\n                            text={utils.string.t('location.summary.locationRequiredFields')}\r\n                            type=\"error\"\r\n                            size=\"small\"\r\n                            align=\"left\"\r\n                            icon\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{this.props.invalidLocationsUploaded}</TableCell>\r\n                      </TableRow>\r\n                    ) : null}\r\n                    <TableRow>\r\n                      <TableCell>\r\n                        <Translate label=\"location.summary.locationCount\" />\r\n                      </TableCell>\r\n                      <TableCell>{this.props.locationsUploaded.length}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>\r\n                        <Translate label=\"location.field.totalInsurableValues\" />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {utils.string.t('format.currency', {\r\n                          value: { number: tiv, currency: constants.CURRENCY_USD },\r\n                        })}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { uiLoaderQueue, classes, placementSelected } = this.props;\r\n    const { filter, maps, chartFilter, options } = this.state;\r\n\r\n    const loading = uiLoaderQueue.length || 0;\r\n\r\n    const cols = [\r\n      { id: 'streetAddress', label: <Translate label=\"app.streetAddress\" />, sort: { type: 'lexical', direction: 'asc' } },\r\n      { id: 'city', label: <Translate label=\"app.city\" />, sort: { type: 'lexical', direction: 'asc' } },\r\n      { id: 'state', label: <Translate label=\"app.state\" />, sort: { type: 'lexical', direction: 'asc' } },\r\n      { id: 'totalInsurableValues', label: <Translate label=\"app.tiv\" />, sort: { type: 'numeric', direction: 'desc' } },\r\n    ];\r\n\r\n    const locations = get(this.props, 'placementSelected.locations', []);\r\n    const locationsFiltered = this.getLocationsFiltered(chartFilter);\r\n\r\n    const chartOpts = this.charts.map((chart) => {\r\n      return { value: chart.id, label: chart.label };\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {utils.placement.isPhysicalLoss(placementSelected) ? (\r\n          <>\r\n            <SectionHeader title={<Translate label=\"placement.overview.title\" />} icon={DashboardIcon} testid=\"placement-overview\">\r\n              {locations.length > 0 && !loading && (\r\n                <FormSelect\r\n                  name=\"map_filter\"\r\n                  size=\"sm\"\r\n                  value={filter}\r\n                  options={chartOpts}\r\n                  muiComponentProps={{\r\n                    fullWidth: false,\r\n                  }}\r\n                  nestedClasses={{\r\n                    root: classes.select,\r\n                  }}\r\n                  handleUpdate={this.handleChangeFilter}\r\n                />\r\n              )}\r\n\r\n              {!loading && locations.length <= 0 && (\r\n                <Restricted include={[constants.ROLE_BROKER]}>\r\n                  <Button\r\n                    icon={CloudUploadIcon}\r\n                    iconWide={true}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    size=\"medium\"\r\n                    text={<Translate label=\"map.sov.upload\" />}\r\n                    onClick={this.handleClickUpload}\r\n                  />\r\n                </Restricted>\r\n              )}\r\n            </SectionHeader>\r\n\r\n            <div style={{ height: locationsFiltered.length > 0 ? 'auto' : 0 }}>\r\n              {filter && !!get(maps, `${filter}.datasets.length`) && !!get(maps, `${filter}.labels.length`) && (\r\n                <Chart\r\n                  id=\"placementLocations\"\r\n                  type=\"bar\"\r\n                  height={180}\r\n                  // JSON parse/stringify is not ideal but ChartJS takes reference to data/objects within\r\n                  // this allows us to keep the animation when changing filter/data\r\n                  data={JSON.parse(JSON.stringify(maps[filter]))}\r\n                  options={options}\r\n                  nestedClasses={{ root: classes.chartContainer, chart: classes.chart }}\r\n                  onload={this.handleChartOnload}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <RootRef rootRef={this.mapRef}>\r\n              <PlacementMap locations={locations} locationsFiltered={locationsFiltered} center={maps.center} zoom={maps.zoom} />\r\n            </RootRef>\r\n\r\n            {locationsFiltered.length > 0 && (\r\n              <div className={classes.tableContainer}>\r\n                <Translate label=\"placement.overview.listLocations\" variant=\"h3\" display=\"inline\" noWrap />\r\n\r\n                {(filter || chartFilter) && (\r\n                  <Typography variant=\"h6\" display=\"inline\" noWrap className={classes.tableSubtitle}>\r\n                    <span>(</span>\r\n                    {filter && <Translate label={`placement.overview.chart.${filter}`} />}\r\n\r\n                    {chartFilter && <span>&nbsp;/&nbsp;{chartFilter}</span>}\r\n                    <span>)</span>\r\n                  </Typography>\r\n                )}\r\n\r\n                <LocationsTable\r\n                  rows={locationsFiltered}\r\n                  cols={cols}\r\n                  sort={{\r\n                    by: 'totalInsurableValues',\r\n                    type: 'numeric',\r\n                    direction: 'desc',\r\n                  }}\r\n                  pagination={{\r\n                    page: 0,\r\n                    rowsPerPage: 100,\r\n                    rowsTotal: locationsFiltered.length,\r\n                  }}\r\n                  handleClickRow={this.handleClickLocation}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Redirect to={`${config.routes.placement.marketing.markets}/${placementSelected.id}`} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport class PlacementOverviewWithContext extends PureComponent {\r\n  render() {\r\n    return <LayoutContext.Consumer>{(context) => <PlacementOverview {...this.props} context={context} />}</LayoutContext.Consumer>;\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withThemeListener)(PlacementOverviewWithContext);\r\n"]},"metadata":{},"sourceType":"module"}