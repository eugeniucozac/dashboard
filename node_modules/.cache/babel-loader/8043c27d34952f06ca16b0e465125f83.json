{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, removeLoader, postQuoteResponseSuccess } from 'stores';\nimport * as utils from 'utils';\nexport var requestDismissIssues = function requestDismissIssues(quote) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var quoteId = quote.id;\n    var defaultError = {\n      file: 'stores/risk.actions.requestDismissIssues',\n      message: 'Data missing for POST request'\n    };\n    dispatch(requestDismissIssuesRequest(quoteId));\n    dispatch(addLoader('requestDismissIssues'));\n\n    if (!quoteId) {\n      dispatch(requestDismissIssuesFailure(defaultError));\n      dispatch(enqueueNotification('notification.generic.request', 'error'));\n      dispatch(removeLoader('requestDismissIssues'));\n      return;\n    }\n\n    var path = \"api/v1/quotes/\".concat(quoteId, \"/request-to-dismiss-issues\");\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json);\n    }).then(function (data) {\n      dispatch(postQuoteResponseSuccess(data));\n      return data;\n    }).then(function () {\n      dispatch(enqueueNotification('notification.requestDismissIssues.success', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (risk.requestDismissIssues)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(requestDismissIssuesFailure(err));\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('requestDismissIssues'));\n      return;\n    });\n  };\n};\nexport var requestDismissIssuesRequest = function requestDismissIssuesRequest(formData) {\n  return {\n    type: 'RISK_DISMISS_ISSUES_REQUEST',\n    payload: formData\n  };\n};\nexport var requestDismissIssuesFailure = function requestDismissIssuesFailure(error) {\n  return {\n    type: 'RISK_DISMISS_ISSUES_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.dismissIssues.js"],"names":["addLoader","authLogout","enqueueNotification","removeLoader","postQuoteResponseSuccess","utils","requestDismissIssues","quote","dispatch","getState","auth","user","endpoint","config","vars","quoteId","id","defaultError","file","message","requestDismissIssuesRequest","requestDismissIssuesFailure","path","api","put","token","accessToken","then","response","handleResponse","json","handleResponseJsonObject","data","catch","err","errorParams","handleError","handleUnauthorized","getErrorMessage","finally","formData","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, removeLoader, postQuoteResponseSuccess } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const requestDismissIssues = (quote) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n  const quoteId = quote.id;\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.requestDismissIssues',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(requestDismissIssuesRequest(quoteId));\r\n  dispatch(addLoader('requestDismissIssues'));\r\n\r\n  if (!quoteId) {\r\n    dispatch(requestDismissIssuesFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.generic.request', 'error'));\r\n    dispatch(removeLoader('requestDismissIssues'));\r\n    return;\r\n  }\r\n\r\n  const path = `api/v1/quotes/${quoteId}/request-to-dismiss-issues`;\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleResponseJsonObject(json))\r\n    .then((data) => {\r\n      dispatch(postQuoteResponseSuccess(data));\r\n      return data;\r\n    })\r\n    .then(() => {\r\n      dispatch(enqueueNotification('notification.requestDismissIssues.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (risk.requestDismissIssues)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(requestDismissIssuesFailure(err));\r\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('requestDismissIssues'));\r\n      return;\r\n    });\r\n};\r\n\r\nexport const requestDismissIssuesRequest = (formData) => {\r\n  return {\r\n    type: 'RISK_DISMISS_ISSUES_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const requestDismissIssuesFailure = (error) => {\r\n  return {\r\n    type: 'RISK_DISMISS_ISSUES_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}