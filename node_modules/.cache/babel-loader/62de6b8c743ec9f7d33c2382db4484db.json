{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Modal\\\\Modal.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport get from 'lodash/get'; // app\n\nimport styles from './Modal.styles';\nimport * as utils from 'utils';\nimport { hideModal, fullScreenModal } from 'stores';\nimport { Button, Confirm, Translate } from 'components';\nimport { AddRiskContainer, DmsVersionHistory, PasteFromExcel, PolicyDocuments, PortfolioMap, CreateAdhocTask as CreateAdhocTaskWizard } from 'modules';\nimport { AddAssignee, AddClaimTaskNote, AddComplexity, AddDepartmentMarket, AddEditClaimRefNotes, AddEditClientOffice, AddEditMarkets, AddEditUmr, AddEditUser, AddEditQuoteBind, AddInsured, AddLayer, AddManageSetting, AddMarket, AddPlacementLayer, AddPlacementLayerMarket, AddPlacementMarket, AddProductsClient, AddProductsCarrier, AddProductsFacility, AddProductsInsured, AddReferral, AddRiskQuote, AddRiskRefAdvancedSearch, AddLossNotes, BulkAssignClaims, BulkUpdateLayer, BulkUpdatePolicy, ChangePriority, ChangeComplexityPriorityAssignment, CheckListAlerts, ComplexityManagementAddPolicy, ComplexManagementInsured, ComplexityManagementDivisionReset, ConfirmClaimSubmission, ConfirmDecline, ConfirmDelete, ConfirmWithComment, CreateRFI, ClaimsCreateRFIStepper, CreateEditUser, CreateInWhitespace, DmsEditMetadata, DmsLinkToLossAndClaim, DmsUploadFiles, DocumentUpload, DownloadBordereaux, DownloadFiles, DmsUploadFilesClient, EditClaimTaskNote, EditClaimInformation, EditClaimRefNotesRow, EditDepartmentMarket, EditLossInformation, EditPlacement, EditPlacementLayer, EditPlacementMarketsLayers, EditPolicy, EditProductsFacility, EditProductsFacilityLimits, EditProductsInsured, EditProductsClient, EditQuote, EditRiskQuote, EditTripBrokers, EditLossNotesRow, ModellingTask, NewEnquiry, PlacementPDF, ProcessingInstructionsManageDocuments, PremiumTaxSignedLinesDocumentUpload, RemoveClaimsComplexityRuleValue, RfiQueryResponse, RfiQueryResponseLogs, AddEditReport, EditReportGroup, AddReportGroup, SelectInterest, SetTaskPriority, SetClaimPriority, SetClaimsTaskSelection, SignDown, SingleAssignClaim, UpdateStatus, PreBindQuote, ViewClaimInformation, PremiumProcessingCheckSigning, PremiumProcessingCheckSigningReject, ReportGroupExtendedAddEdit, ReportsExtendedAddEdit, ClaimsRegisterNewLoss, CreateAdHocTask } from 'forms'; // mui\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { withStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiModal: state.ui.modal,\n    fullScreen: state.ui.fullScreen\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  hideModal: hideModal,\n  fullScreenModal: fullScreenModal\n};\nexport var Modal = /*#__PURE__*/function (_Component) {\n  _inherits(Modal, _Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.components = {\n      ADD_ASSIGNEE: AddAssignee,\n      ADD_CLAIM_TASK_NOTE: AddClaimTaskNote,\n      ADD_COMPLEXITY: AddComplexity,\n      ADD_DEPARTMENT_MARKET: AddDepartmentMarket,\n      ADD_EDIT_CLAIM_REF_NOTES: AddEditClaimRefNotes,\n      ADD_EDIT_CLIENT_OFFICE: AddEditClientOffice,\n      ADD_EDIT_MARKETS: AddEditMarkets,\n      ADD_EDIT_UMR: AddEditUmr,\n      ADD_EDIT_USER: AddEditUser,\n      ADD_EDIT_QUOTE_BIND: AddEditQuoteBind,\n      ADD_INSURED: AddInsured,\n      ADD_LAYER: AddLayer,\n      ADD_MARKET: AddMarket,\n      ADD_PLACEMENT_LAYER: AddPlacementLayer,\n      ADD_PLACEMENT_LAYER_MARKET: AddPlacementLayerMarket,\n      ADD_PLACEMENT_MARKET: AddPlacementMarket,\n      ADD_PRODUCTS_CLIENT: AddProductsClient,\n      ADD_PRODUCTS_CARRIER: AddProductsCarrier,\n      ADD_PRODUCTS_FACILITY: AddProductsFacility,\n      ADD_PRODUCTS_INSURED: AddProductsInsured,\n      ADD_REFERRAL: AddReferral,\n      ADD_REPORT_GROUP: AddReportGroup,\n      ADD_RISK: AddRiskContainer,\n      ADD_RISK_QUOTE: AddRiskQuote,\n      ADD_RISK_REF_ADVANCED_SEARCH: AddRiskRefAdvancedSearch,\n      ADD_MANAGE_DOCUMENT_SETTING: AddManageSetting,\n      ADD_LOSS_NOTES: AddLossNotes,\n      BULK_ASSIGN_CLAIMS: BulkAssignClaims,\n      BULK_UPDATE_LAYER: BulkUpdateLayer,\n      BULK_UPDATE_POLICY: BulkUpdatePolicy,\n      CHANGE_PRIORITY: ChangePriority,\n      CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT: ChangeComplexityPriorityAssignment,\n      CHECK_LIST_ALERTS: CheckListAlerts,\n      COMPLEXITY_MANAGEMENT_ADD_POLICY: ComplexityManagementAddPolicy,\n      COMPLEXITY_MANAGEMENT_INSURED: ComplexManagementInsured,\n      COMPLEXITY_MANAGEMENT_DIVISION_RESET: ComplexityManagementDivisionReset,\n      COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE: RemoveClaimsComplexityRuleValue,\n      CONFIRM: Confirm,\n      CONFIRM_CLAIM_SUBMISSION: ConfirmClaimSubmission,\n      CONFIRM_DECLINE_RISK: ConfirmDecline,\n      CONFIRM_DELETE: ConfirmDelete,\n      CONFIRM_WITH_COMMENT: ConfirmWithComment,\n      CREATE_AD_HOC_TASK: CreateAdHocTask,\n      CREATE_AD_HOC_TASK_WIZARD: CreateAdhocTaskWizard,\n      CREATE_EDIT_USER: CreateEditUser,\n      CREATE_IN_WHITESPACE: CreateInWhitespace,\n      CREATE_RFI: CreateRFI,\n      CLAIMS_CREATE_RFI_STEPPER: ClaimsCreateRFIStepper,\n      DMS_UPLOAD_FILES: DmsUploadFiles,\n      DOCUMENT_UPLOAD: DocumentUpload,\n      DMS_VERSION_HISTORY: DmsVersionHistory,\n      DMS_EDIT_META_DATA: DmsEditMetadata,\n      DMS_LINK_TO_LOSS_AND_CLAIM: DmsLinkToLossAndClaim,\n      DMS_UPLOAD_FILES_CLIENT_SIDE: DmsUploadFilesClient,\n      DOWNLOAD_BORDEREAUX: DownloadBordereaux,\n      DOWNLOAD_FILES: DownloadFiles,\n      EDIT_CLAIM_TASK_NOTE: EditClaimTaskNote,\n      EDIT_CLAIM_INFORMATION: EditClaimInformation,\n      EDIT_CLAIMREF_NOTES_ROW: EditClaimRefNotesRow,\n      EDIT_DEPARTMENT_MARKET: EditDepartmentMarket,\n      EDIT_LOSS_INFORMATION: EditLossInformation,\n      EDIT_LOSS_NOTES_ROW: EditLossNotesRow,\n      EDIT_PLACEMENT_LAYER: EditPlacementLayer,\n      EDIT_PLACEMENT_MARKETS_LAYERS: EditPlacementMarketsLayers,\n      EDIT_POLICY: EditPolicy,\n      EDIT_PLACEMENT: EditPlacement,\n      EDIT_PRODUCTS_FACILITY: EditProductsFacility,\n      EDIT_PRODUCTS_FACILITY_LIMITS: EditProductsFacilityLimits,\n      EDIT_PRODUCTS_CLIENT: EditProductsClient,\n      EDIT_PRODUCTS_INSURED: EditProductsInsured,\n      EDIT_QUOTE: EditQuote,\n      EDIT_REPORT: AddEditReport,\n      EDIT_REPORT_GROUP: EditReportGroup,\n      EDIT_RISK_QUOTE: EditRiskQuote,\n      EDIT_TRIP_BROKERS: EditTripBrokers,\n      MODELLING_TASK: ModellingTask,\n      NEW_ENQUIRY: NewEnquiry,\n      PASTE_FROM_EXCEL: PasteFromExcel,\n      PI_MANAGE_DOCUMENTS: ProcessingInstructionsManageDocuments,\n      PLACEMENT_PDF: PlacementPDF,\n      POLICY_DOCUMENTS: PolicyDocuments,\n      PORTFOLIO_MAP: PortfolioMap,\n      PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD: PremiumTaxSignedLinesDocumentUpload,\n      RFI_QUERY_RESPONSE: RfiQueryResponse,\n      RFI_QUERY_RESPONSE_LOGS: RfiQueryResponseLogs,\n      SELECT_INTEREST: SelectInterest,\n      SET_PRIORITY: SetTaskPriority,\n      SET_CLAIM_PRIORITY: SetClaimPriority,\n      SET_CLAIM_TASK_SELECTION: SetClaimsTaskSelection,\n      SIGN_DOWN: SignDown,\n      SINGLE_ASSIGN_CLAIM: SingleAssignClaim,\n      UPDATE_STATUS: UpdateStatus,\n      VIEW_CLAIM_INFORMATION: ViewClaimInformation,\n      PRE_BIND_QUOTE: PreBindQuote,\n      PREMIUM_PROCESSING_CHECK_SIGNING: PremiumProcessingCheckSigning,\n      PREMIUM_PROCESSING_CHECK_SIGNING_REJECT: PremiumProcessingCheckSigningReject,\n      REPORT_GROUP_EXTENDED_ADD_EDIT: ReportGroupExtendedAddEdit,\n      REPORTS_EXTENDED_ADD_EDIT: ReportsExtendedAddEdit,\n      CLAIM_REGISTER_NEW_LOSS: ClaimsRegisterNewLoss\n    };\n\n    _this.handleClose = function (type) {\n      var closeModalOnClickOutside = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var cancelHandler = arguments.length > 2 ? arguments[2] : undefined;\n      var clickOutSideHandler = arguments.length > 3 ? arguments[3] : undefined;\n      return function (event, reason) {\n        if (reason === 'backdropClick' && !closeModalOnClickOutside) {\n          return;\n        } else if (utils.generic.isFunction(clickOutSideHandler)) {\n          clickOutSideHandler();\n        } else {\n          _this.props.hideModal(type);\n\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\n        }\n      };\n    };\n\n    _this.handleCloseX = function (type, cancelHandler, clickXHandler) {\n      return function (event) {\n        if (utils.generic.isFunction(clickXHandler)) {\n          clickXHandler();\n        } else {\n          _this.props.hideModal(type);\n\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\n        }\n      };\n    };\n\n    _this.handleFullScreen = function () {\n      _this.props.fullScreenModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!get(this.props, 'uiModal[0].type')) return null;\n      var _this$props = this.props,\n          uiModal = _this$props.uiModal,\n          classes = _this$props.classes,\n          fullScreen = _this$props.fullScreen;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: uiModal.map(function (modal) {\n          var ModalContent = _this2.components[modal.type];\n          var hasMaxWidth = get(modal, 'props.maxWidth');\n          var closeModalOnClickOutside = get(modal, 'props.hideCompOnBlur', true);\n          var cancelHandler = get(modal, 'props.componentProps.cancelHandler', null);\n          var enableFullScreen = get(modal, 'props.enableFullScreen', false);\n          var clickOutSideHandler = get(modal, 'props.componentProps.clickOutSideHandler', null);\n          var clickXHandler = get(modal, 'props.componentProps.clickXHandler', null);\n          return /*#__PURE__*/_jsxDEV(Dialog, {\n            \"data-testid\": \"modal-dialog\",\n            open: modal.visible,\n            onClose: _this2.handleClose(modal.type, closeModalOnClickOutside, cancelHandler, clickOutSideHandler),\n            fullWidth: modal.props.fullWidth,\n            fullScreen: fullScreen || modal.props.fullScreen,\n            maxWidth: modal.props.maxWidth,\n            disableAutoFocus: modal.props.disableAutoFocus,\n            \"aria-labelledby\": \"modal-title\",\n            classes: _objectSpread({}, !hasMaxWidth && {\n              paper: classes.paper\n            }),\n            children: [enableFullScreen ? /*#__PURE__*/_jsxDEV(Button, {\n              icon: FullscreenIcon,\n              variant: \"text\",\n              onClick: _this2.handleFullScreen,\n              nestedClasses: {\n                btn: classes.fullScreen\n              },\n              \"data-testid\": \"modal-fullscreen-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, _this2) : null, /*#__PURE__*/_jsxDEV(Button, {\n              icon: CloseIcon,\n              variant: \"text\",\n              onClick: _this2.handleCloseX(modal.type, cancelHandler, clickXHandler, clickOutSideHandler),\n              nestedClasses: {\n                btn: classes.close\n              },\n              \"data-testid\": \"modal-close-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, _this2), (modal.props.title || modal.props.titleChildren) && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                disableTypography: true,\n                id: \"modal-title\",\n                \"data-testid\": \"modal-title\",\n                className: modal.props.titleChildren ? classes.titleChildren : '',\n                children: modal.props.titleChildren ? modal.props.titleChildren : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Translate, {\n                    label: modal.props.title,\n                    variant: \"h2\",\n                    className: classes.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 25\n                  }, _this2), modal.props.subtitle && /*#__PURE__*/_jsxDEV(Translate, {\n                    label: modal.props.subtitle,\n                    variant: \"h6\",\n                    className: classes.subtitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 50\n                  }, _this2)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, _this2), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, _this2), /*#__PURE__*/_jsxDEV(DialogContent, {\n              className: classes.content,\n              children: [modal.props.hint && /*#__PURE__*/_jsxDEV(DialogContentText, {\n                className: classes.hint,\n                \"data-testid\": \"modal-hint\",\n                children: utils.string.t(modal.props.hint)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, _this2), get(modal, 'props.children') ? get(modal, 'props.children') : /*#__PURE__*/_jsxDEV(ModalContent, _objectSpread(_objectSpread({\n                fullScreen: fullScreen\n              }, modal.props.componentProps), {}, {\n                handleClose: _this2.handleClose(modal.type)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, _this2), get(modal, 'actions', []).length > 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, _this2), /*#__PURE__*/_jsxDEV(DialogActions, {\n                \"data-testid\": \"modal-actions\",\n                children: modal.actions.map(function (action, idx) {\n                  var btnAction = null;\n\n                  if (action.type === 'ok' || action.type === 'cancel') {\n                    btnAction = _this2.handleClose(modal.type, true, action.callback);\n                  } else {\n                    btnAction = action.callback;\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, btnAction && {\n                    onClick: btnAction\n                  }), action.variant && {\n                    variant: action.variant\n                  }), action.color && {\n                    color: action.color\n                  }), {}, {\n                    text: /*#__PURE__*/_jsxDEV(Translate, {\n                      label: action.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 33\n                    }, _this2),\n                    \"data-testid\": \"modal-btn-\".concat(action.type)\n                  }), idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 25\n                  }, _this2);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, _this2)]\n          }, modal.type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false);\n    }\n  }]);\n\n  return Modal;\n}(Component);\nModal.propTypes = {\n  uiModal: PropTypes.arrayOf(PropTypes.shape({\n    visible: PropTypes.bool,\n    type: PropTypes.string,\n    props: PropTypes.shape({\n      title: PropTypes.string,\n      subtitle: PropTypes.string,\n      fullWidth: PropTypes.bool,\n      hideCompOnBlur: PropTypes.bool,\n      fullScreen: PropTypes.bool,\n      maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n      componentProps: PropTypes.shape({\n        buttonColors: PropTypes.shape({\n          cancel: PropTypes.string,\n          confirm: PropTypes.string\n        }),\n        cancelLabel: PropTypes.string,\n        confirmLabel: PropTypes.string,\n        confirmMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        hideCancelButton: PropTypes.bool,\n        cancelHandler: PropTypes.func,\n        submitHandler: PropTypes.func\n      })\n    }),\n    actions: PropTypes.arrayOf(PropTypes.shape({\n      type: PropTypes.string,\n      label: PropTypes.string,\n      variant: PropTypes.string,\n      color: PropTypes.string,\n      callback: PropTypes.func\n    }))\n  })).isRequired,\n  hideModal: PropTypes.func.isRequired\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Modal);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Modal/Modal.js"],"names":["React","Component","Fragment","PropTypes","connect","compose","get","styles","utils","hideModal","fullScreenModal","Button","Confirm","Translate","AddRiskContainer","DmsVersionHistory","PasteFromExcel","PolicyDocuments","PortfolioMap","CreateAdhocTask","CreateAdhocTaskWizard","AddAssignee","AddClaimTaskNote","AddComplexity","AddDepartmentMarket","AddEditClaimRefNotes","AddEditClientOffice","AddEditMarkets","AddEditUmr","AddEditUser","AddEditQuoteBind","AddInsured","AddLayer","AddManageSetting","AddMarket","AddPlacementLayer","AddPlacementLayerMarket","AddPlacementMarket","AddProductsClient","AddProductsCarrier","AddProductsFacility","AddProductsInsured","AddReferral","AddRiskQuote","AddRiskRefAdvancedSearch","AddLossNotes","BulkAssignClaims","BulkUpdateLayer","BulkUpdatePolicy","ChangePriority","ChangeComplexityPriorityAssignment","CheckListAlerts","ComplexityManagementAddPolicy","ComplexManagementInsured","ComplexityManagementDivisionReset","ConfirmClaimSubmission","ConfirmDecline","ConfirmDelete","ConfirmWithComment","CreateRFI","ClaimsCreateRFIStepper","CreateEditUser","CreateInWhitespace","DmsEditMetadata","DmsLinkToLossAndClaim","DmsUploadFiles","DocumentUpload","DownloadBordereaux","DownloadFiles","DmsUploadFilesClient","EditClaimTaskNote","EditClaimInformation","EditClaimRefNotesRow","EditDepartmentMarket","EditLossInformation","EditPlacement","EditPlacementLayer","EditPlacementMarketsLayers","EditPolicy","EditProductsFacility","EditProductsFacilityLimits","EditProductsInsured","EditProductsClient","EditQuote","EditRiskQuote","EditTripBrokers","EditLossNotesRow","ModellingTask","NewEnquiry","PlacementPDF","ProcessingInstructionsManageDocuments","PremiumTaxSignedLinesDocumentUpload","RemoveClaimsComplexityRuleValue","RfiQueryResponse","RfiQueryResponseLogs","AddEditReport","EditReportGroup","AddReportGroup","SelectInterest","SetTaskPriority","SetClaimPriority","SetClaimsTaskSelection","SignDown","SingleAssignClaim","UpdateStatus","PreBindQuote","ViewClaimInformation","PremiumProcessingCheckSigning","PremiumProcessingCheckSigningReject","ReportGroupExtendedAddEdit","ReportsExtendedAddEdit","ClaimsRegisterNewLoss","CreateAdHocTask","CloseIcon","FullscreenIcon","withStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","mapStateToProps","state","uiModal","ui","modal","fullScreen","mapDispatchToProps","Modal","components","ADD_ASSIGNEE","ADD_CLAIM_TASK_NOTE","ADD_COMPLEXITY","ADD_DEPARTMENT_MARKET","ADD_EDIT_CLAIM_REF_NOTES","ADD_EDIT_CLIENT_OFFICE","ADD_EDIT_MARKETS","ADD_EDIT_UMR","ADD_EDIT_USER","ADD_EDIT_QUOTE_BIND","ADD_INSURED","ADD_LAYER","ADD_MARKET","ADD_PLACEMENT_LAYER","ADD_PLACEMENT_LAYER_MARKET","ADD_PLACEMENT_MARKET","ADD_PRODUCTS_CLIENT","ADD_PRODUCTS_CARRIER","ADD_PRODUCTS_FACILITY","ADD_PRODUCTS_INSURED","ADD_REFERRAL","ADD_REPORT_GROUP","ADD_RISK","ADD_RISK_QUOTE","ADD_RISK_REF_ADVANCED_SEARCH","ADD_MANAGE_DOCUMENT_SETTING","ADD_LOSS_NOTES","BULK_ASSIGN_CLAIMS","BULK_UPDATE_LAYER","BULK_UPDATE_POLICY","CHANGE_PRIORITY","CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT","CHECK_LIST_ALERTS","COMPLEXITY_MANAGEMENT_ADD_POLICY","COMPLEXITY_MANAGEMENT_INSURED","COMPLEXITY_MANAGEMENT_DIVISION_RESET","COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE","CONFIRM","CONFIRM_CLAIM_SUBMISSION","CONFIRM_DECLINE_RISK","CONFIRM_DELETE","CONFIRM_WITH_COMMENT","CREATE_AD_HOC_TASK","CREATE_AD_HOC_TASK_WIZARD","CREATE_EDIT_USER","CREATE_IN_WHITESPACE","CREATE_RFI","CLAIMS_CREATE_RFI_STEPPER","DMS_UPLOAD_FILES","DOCUMENT_UPLOAD","DMS_VERSION_HISTORY","DMS_EDIT_META_DATA","DMS_LINK_TO_LOSS_AND_CLAIM","DMS_UPLOAD_FILES_CLIENT_SIDE","DOWNLOAD_BORDEREAUX","DOWNLOAD_FILES","EDIT_CLAIM_TASK_NOTE","EDIT_CLAIM_INFORMATION","EDIT_CLAIMREF_NOTES_ROW","EDIT_DEPARTMENT_MARKET","EDIT_LOSS_INFORMATION","EDIT_LOSS_NOTES_ROW","EDIT_PLACEMENT_LAYER","EDIT_PLACEMENT_MARKETS_LAYERS","EDIT_POLICY","EDIT_PLACEMENT","EDIT_PRODUCTS_FACILITY","EDIT_PRODUCTS_FACILITY_LIMITS","EDIT_PRODUCTS_CLIENT","EDIT_PRODUCTS_INSURED","EDIT_QUOTE","EDIT_REPORT","EDIT_REPORT_GROUP","EDIT_RISK_QUOTE","EDIT_TRIP_BROKERS","MODELLING_TASK","NEW_ENQUIRY","PASTE_FROM_EXCEL","PI_MANAGE_DOCUMENTS","PLACEMENT_PDF","POLICY_DOCUMENTS","PORTFOLIO_MAP","PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD","RFI_QUERY_RESPONSE","RFI_QUERY_RESPONSE_LOGS","SELECT_INTEREST","SET_PRIORITY","SET_CLAIM_PRIORITY","SET_CLAIM_TASK_SELECTION","SIGN_DOWN","SINGLE_ASSIGN_CLAIM","UPDATE_STATUS","VIEW_CLAIM_INFORMATION","PRE_BIND_QUOTE","PREMIUM_PROCESSING_CHECK_SIGNING","PREMIUM_PROCESSING_CHECK_SIGNING_REJECT","REPORT_GROUP_EXTENDED_ADD_EDIT","REPORTS_EXTENDED_ADD_EDIT","CLAIM_REGISTER_NEW_LOSS","handleClose","type","closeModalOnClickOutside","cancelHandler","clickOutSideHandler","event","reason","generic","isFunction","props","handleCloseX","clickXHandler","handleFullScreen","classes","map","ModalContent","hasMaxWidth","enableFullScreen","visible","fullWidth","maxWidth","disableAutoFocus","paper","btn","close","title","titleChildren","subtitle","content","hint","string","t","componentProps","length","actions","action","idx","btnAction","callback","onClick","variant","color","label","propTypes","arrayOf","shape","bool","hideCompOnBlur","oneOf","buttonColors","cancel","confirm","cancelLabel","confirmLabel","confirmMessage","oneOfType","object","hideCancelButton","func","submitHandler","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './Modal.styles';\r\nimport * as utils from 'utils';\r\nimport { hideModal, fullScreenModal } from 'stores';\r\nimport { Button, Confirm, Translate } from 'components';\r\nimport {\r\n  AddRiskContainer,\r\n  DmsVersionHistory,\r\n  PasteFromExcel,\r\n  PolicyDocuments,\r\n  PortfolioMap,\r\n  CreateAdhocTask as CreateAdhocTaskWizard,\r\n} from 'modules';\r\nimport {\r\n  AddAssignee,\r\n  AddClaimTaskNote,\r\n  AddComplexity,\r\n  AddDepartmentMarket,\r\n  AddEditClaimRefNotes,\r\n  AddEditClientOffice,\r\n  AddEditMarkets,\r\n  AddEditUmr,\r\n  AddEditUser,\r\n  AddEditQuoteBind,\r\n  AddInsured,\r\n  AddLayer,\r\n  AddManageSetting,\r\n  AddMarket,\r\n  AddPlacementLayer,\r\n  AddPlacementLayerMarket,\r\n  AddPlacementMarket,\r\n  AddProductsClient,\r\n  AddProductsCarrier,\r\n  AddProductsFacility,\r\n  AddProductsInsured,\r\n  AddReferral,\r\n  AddRiskQuote,\r\n  AddRiskRefAdvancedSearch,\r\n  AddLossNotes,\r\n  BulkAssignClaims,\r\n  BulkUpdateLayer,\r\n  BulkUpdatePolicy,\r\n  ChangePriority,\r\n  ChangeComplexityPriorityAssignment,\r\n  CheckListAlerts,\r\n  ComplexityManagementAddPolicy,\r\n  ComplexManagementInsured,\r\n  ComplexityManagementDivisionReset,\r\n  ConfirmClaimSubmission,\r\n  ConfirmDecline,\r\n  ConfirmDelete,\r\n  ConfirmWithComment,\r\n  CreateRFI,\r\n  ClaimsCreateRFIStepper,\r\n  CreateEditUser,\r\n  CreateInWhitespace,\r\n  DmsEditMetadata,\r\n  DmsLinkToLossAndClaim,\r\n  DmsUploadFiles,\r\n  DocumentUpload,\r\n  DownloadBordereaux,\r\n  DownloadFiles,\r\n  DmsUploadFilesClient,\r\n  EditClaimTaskNote,\r\n  EditClaimInformation,\r\n  EditClaimRefNotesRow,\r\n  EditDepartmentMarket,\r\n  EditLossInformation,\r\n  EditPlacement,\r\n  EditPlacementLayer,\r\n  EditPlacementMarketsLayers,\r\n  EditPolicy,\r\n  EditProductsFacility,\r\n  EditProductsFacilityLimits,\r\n  EditProductsInsured,\r\n  EditProductsClient,\r\n  EditQuote,\r\n  EditRiskQuote,\r\n  EditTripBrokers,\r\n  EditLossNotesRow,\r\n  ModellingTask,\r\n  NewEnquiry,\r\n  PlacementPDF,\r\n  ProcessingInstructionsManageDocuments,\r\n  PremiumTaxSignedLinesDocumentUpload,\r\n  RemoveClaimsComplexityRuleValue,\r\n  RfiQueryResponse,\r\n  RfiQueryResponseLogs,\r\n  AddEditReport,\r\n  EditReportGroup,\r\n  AddReportGroup,\r\n  SelectInterest,\r\n  SetTaskPriority,\r\n  SetClaimPriority,\r\n  SetClaimsTaskSelection,\r\n  SignDown,\r\n  SingleAssignClaim,\r\n  UpdateStatus,\r\n  PreBindQuote,\r\n  ViewClaimInformation,\r\n  PremiumProcessingCheckSigning,\r\n  PremiumProcessingCheckSigningReject,\r\n  ReportGroupExtendedAddEdit,\r\n  ReportsExtendedAddEdit,\r\n  ClaimsRegisterNewLoss,\r\n  CreateAdHocTask,\r\n} from 'forms';\r\n\r\n// mui\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { withStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  uiModal: state.ui.modal,\r\n  fullScreen: state.ui.fullScreen,\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  hideModal,\r\n  fullScreenModal,\r\n};\r\n\r\nexport class Modal extends Component {\r\n  static propTypes = {\r\n    uiModal: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        visible: PropTypes.bool,\r\n        type: PropTypes.string,\r\n        props: PropTypes.shape({\r\n          title: PropTypes.string,\r\n          subtitle: PropTypes.string,\r\n          fullWidth: PropTypes.bool,\r\n          hideCompOnBlur: PropTypes.bool,\r\n          fullScreen: PropTypes.bool,\r\n          maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n          componentProps: PropTypes.shape({\r\n            buttonColors: PropTypes.shape({\r\n              cancel: PropTypes.string,\r\n              confirm: PropTypes.string,\r\n            }),\r\n            cancelLabel: PropTypes.string,\r\n            confirmLabel: PropTypes.string,\r\n            confirmMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n            hideCancelButton: PropTypes.bool,\r\n            cancelHandler: PropTypes.func,\r\n            submitHandler: PropTypes.func,\r\n          }),\r\n        }),\r\n        actions: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            type: PropTypes.string,\r\n            label: PropTypes.string,\r\n            variant: PropTypes.string,\r\n            color: PropTypes.string,\r\n            callback: PropTypes.func,\r\n          })\r\n        ),\r\n      })\r\n    ).isRequired,\r\n    hideModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  // we're mapping modal type(s) to the component to use for each\r\n  components = {\r\n    ADD_ASSIGNEE: AddAssignee,\r\n    ADD_CLAIM_TASK_NOTE: AddClaimTaskNote,\r\n    ADD_COMPLEXITY: AddComplexity,\r\n    ADD_DEPARTMENT_MARKET: AddDepartmentMarket,\r\n    ADD_EDIT_CLAIM_REF_NOTES: AddEditClaimRefNotes,\r\n    ADD_EDIT_CLIENT_OFFICE: AddEditClientOffice,\r\n    ADD_EDIT_MARKETS: AddEditMarkets,\r\n    ADD_EDIT_UMR: AddEditUmr,\r\n    ADD_EDIT_USER: AddEditUser,\r\n    ADD_EDIT_QUOTE_BIND: AddEditQuoteBind,\r\n    ADD_INSURED: AddInsured,\r\n    ADD_LAYER: AddLayer,\r\n    ADD_MARKET: AddMarket,\r\n    ADD_PLACEMENT_LAYER: AddPlacementLayer,\r\n    ADD_PLACEMENT_LAYER_MARKET: AddPlacementLayerMarket,\r\n    ADD_PLACEMENT_MARKET: AddPlacementMarket,\r\n    ADD_PRODUCTS_CLIENT: AddProductsClient,\r\n    ADD_PRODUCTS_CARRIER: AddProductsCarrier,\r\n    ADD_PRODUCTS_FACILITY: AddProductsFacility,\r\n    ADD_PRODUCTS_INSURED: AddProductsInsured,\r\n    ADD_REFERRAL: AddReferral,\r\n    ADD_REPORT_GROUP: AddReportGroup,\r\n    ADD_RISK: AddRiskContainer,\r\n    ADD_RISK_QUOTE: AddRiskQuote,\r\n    ADD_RISK_REF_ADVANCED_SEARCH: AddRiskRefAdvancedSearch,\r\n    ADD_MANAGE_DOCUMENT_SETTING: AddManageSetting,\r\n    ADD_LOSS_NOTES: AddLossNotes,\r\n    BULK_ASSIGN_CLAIMS: BulkAssignClaims,\r\n    BULK_UPDATE_LAYER: BulkUpdateLayer,\r\n    BULK_UPDATE_POLICY: BulkUpdatePolicy,\r\n    CHANGE_PRIORITY: ChangePriority,\r\n    CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT: ChangeComplexityPriorityAssignment,\r\n    CHECK_LIST_ALERTS: CheckListAlerts,\r\n    COMPLEXITY_MANAGEMENT_ADD_POLICY: ComplexityManagementAddPolicy,\r\n    COMPLEXITY_MANAGEMENT_INSURED: ComplexManagementInsured,\r\n    COMPLEXITY_MANAGEMENT_DIVISION_RESET: ComplexityManagementDivisionReset,\r\n    COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE: RemoveClaimsComplexityRuleValue,\r\n    CONFIRM: Confirm,\r\n    CONFIRM_CLAIM_SUBMISSION: ConfirmClaimSubmission,\r\n    CONFIRM_DECLINE_RISK: ConfirmDecline,\r\n    CONFIRM_DELETE: ConfirmDelete,\r\n    CONFIRM_WITH_COMMENT: ConfirmWithComment,\r\n    CREATE_AD_HOC_TASK: CreateAdHocTask,\r\n    CREATE_AD_HOC_TASK_WIZARD: CreateAdhocTaskWizard,\r\n    CREATE_EDIT_USER: CreateEditUser,\r\n    CREATE_IN_WHITESPACE: CreateInWhitespace,\r\n    CREATE_RFI: CreateRFI,\r\n    CLAIMS_CREATE_RFI_STEPPER: ClaimsCreateRFIStepper,\r\n    DMS_UPLOAD_FILES: DmsUploadFiles,\r\n    DOCUMENT_UPLOAD: DocumentUpload,\r\n    DMS_VERSION_HISTORY: DmsVersionHistory,\r\n    DMS_EDIT_META_DATA: DmsEditMetadata,\r\n    DMS_LINK_TO_LOSS_AND_CLAIM: DmsLinkToLossAndClaim,\r\n    DMS_UPLOAD_FILES_CLIENT_SIDE: DmsUploadFilesClient,\r\n    DOWNLOAD_BORDEREAUX: DownloadBordereaux,\r\n    DOWNLOAD_FILES: DownloadFiles,\r\n    EDIT_CLAIM_TASK_NOTE: EditClaimTaskNote,\r\n    EDIT_CLAIM_INFORMATION: EditClaimInformation,\r\n    EDIT_CLAIMREF_NOTES_ROW: EditClaimRefNotesRow,\r\n    EDIT_DEPARTMENT_MARKET: EditDepartmentMarket,\r\n    EDIT_LOSS_INFORMATION: EditLossInformation,\r\n    EDIT_LOSS_NOTES_ROW: EditLossNotesRow,\r\n    EDIT_PLACEMENT_LAYER: EditPlacementLayer,\r\n    EDIT_PLACEMENT_MARKETS_LAYERS: EditPlacementMarketsLayers,\r\n    EDIT_POLICY: EditPolicy,\r\n    EDIT_PLACEMENT: EditPlacement,\r\n    EDIT_PRODUCTS_FACILITY: EditProductsFacility,\r\n    EDIT_PRODUCTS_FACILITY_LIMITS: EditProductsFacilityLimits,\r\n    EDIT_PRODUCTS_CLIENT: EditProductsClient,\r\n    EDIT_PRODUCTS_INSURED: EditProductsInsured,\r\n    EDIT_QUOTE: EditQuote,\r\n    EDIT_REPORT: AddEditReport,\r\n    EDIT_REPORT_GROUP: EditReportGroup,\r\n    EDIT_RISK_QUOTE: EditRiskQuote,\r\n    EDIT_TRIP_BROKERS: EditTripBrokers,\r\n    MODELLING_TASK: ModellingTask,\r\n    NEW_ENQUIRY: NewEnquiry,\r\n    PASTE_FROM_EXCEL: PasteFromExcel,\r\n    PI_MANAGE_DOCUMENTS: ProcessingInstructionsManageDocuments,\r\n    PLACEMENT_PDF: PlacementPDF,\r\n    POLICY_DOCUMENTS: PolicyDocuments,\r\n    PORTFOLIO_MAP: PortfolioMap,\r\n    PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD: PremiumTaxSignedLinesDocumentUpload,\r\n    RFI_QUERY_RESPONSE: RfiQueryResponse,\r\n    RFI_QUERY_RESPONSE_LOGS: RfiQueryResponseLogs,\r\n    SELECT_INTEREST: SelectInterest,\r\n    SET_PRIORITY: SetTaskPriority,\r\n    SET_CLAIM_PRIORITY: SetClaimPriority,\r\n    SET_CLAIM_TASK_SELECTION: SetClaimsTaskSelection,\r\n    SIGN_DOWN: SignDown,\r\n    SINGLE_ASSIGN_CLAIM: SingleAssignClaim,\r\n    UPDATE_STATUS: UpdateStatus,\r\n    VIEW_CLAIM_INFORMATION: ViewClaimInformation,\r\n    PRE_BIND_QUOTE: PreBindQuote,\r\n    PREMIUM_PROCESSING_CHECK_SIGNING: PremiumProcessingCheckSigning,\r\n    PREMIUM_PROCESSING_CHECK_SIGNING_REJECT: PremiumProcessingCheckSigningReject,\r\n    REPORT_GROUP_EXTENDED_ADD_EDIT: ReportGroupExtendedAddEdit,\r\n    REPORTS_EXTENDED_ADD_EDIT: ReportsExtendedAddEdit,\r\n    CLAIM_REGISTER_NEW_LOSS: ClaimsRegisterNewLoss,\r\n  };\r\n\r\n  handleClose =\r\n    (type, closeModalOnClickOutside = true, cancelHandler, clickOutSideHandler) =>\r\n      (event, reason) => {\r\n        if (reason === 'backdropClick' && !closeModalOnClickOutside) {\r\n          return;\r\n        } else if (utils.generic.isFunction(clickOutSideHandler)) {\r\n          clickOutSideHandler();\r\n        } else {\r\n          this.props.hideModal(type);\r\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\r\n        }\r\n      };\r\n\r\n  handleCloseX = (type, cancelHandler, clickXHandler) => (event) => {\r\n    if (utils.generic.isFunction(clickXHandler)) {\r\n      clickXHandler();\r\n    } else {\r\n      this.props.hideModal(type);\r\n      utils.generic.isFunction(cancelHandler) && cancelHandler();\r\n    }\r\n  };\r\n\r\n  handleFullScreen = () => {\r\n    this.props.fullScreenModal();\r\n  };\r\n\r\n  render() {\r\n    if (!get(this.props, 'uiModal[0].type')) return null;\r\n\r\n    const { uiModal, classes, fullScreen } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {uiModal.map((modal) => {\r\n          const ModalContent = this.components[modal.type];\r\n          const hasMaxWidth = get(modal, 'props.maxWidth');\r\n          const closeModalOnClickOutside = get(modal, 'props.hideCompOnBlur', true);\r\n          const cancelHandler = get(modal, 'props.componentProps.cancelHandler', null);\r\n          const enableFullScreen = get(modal, 'props.enableFullScreen', false);\r\n\r\n          const clickOutSideHandler = get(modal, 'props.componentProps.clickOutSideHandler', null);\r\n          const clickXHandler = get(modal, 'props.componentProps.clickXHandler', null);\r\n\r\n          return (\r\n            <Dialog\r\n              data-testid=\"modal-dialog\"\r\n              key={modal.type}\r\n              open={modal.visible}\r\n              onClose={this.handleClose(modal.type, closeModalOnClickOutside, cancelHandler, clickOutSideHandler)}\r\n              fullWidth={modal.props.fullWidth}\r\n              fullScreen={fullScreen || modal.props.fullScreen}\r\n              maxWidth={modal.props.maxWidth}\r\n              disableAutoFocus={modal.props.disableAutoFocus}\r\n              aria-labelledby=\"modal-title\"\r\n              classes={{\r\n                ...(!hasMaxWidth && { paper: classes.paper }),\r\n              }}\r\n            >\r\n              {enableFullScreen ? (\r\n                <Button\r\n                  icon={FullscreenIcon}\r\n                  variant=\"text\"\r\n                  onClick={this.handleFullScreen}\r\n                  nestedClasses={{ btn: classes.fullScreen }}\r\n                  data-testid=\"modal-fullscreen-button\"\r\n                />\r\n              ) : null}\r\n\r\n              <Button\r\n                icon={CloseIcon}\r\n                variant=\"text\"\r\n                onClick={this.handleCloseX(modal.type, cancelHandler, clickXHandler, clickOutSideHandler)}\r\n                nestedClasses={{ btn: classes.close }}\r\n                data-testid=\"modal-close-button\"\r\n              />\r\n\r\n              {(modal.props.title || modal.props.titleChildren) && (\r\n                <Fragment>\r\n                  <DialogTitle disableTypography id=\"modal-title\" data-testid=\"modal-title\" className={modal.props.titleChildren ? classes.titleChildren : ''}>\r\n                    {modal.props.titleChildren ? (\r\n                      modal.props.titleChildren\r\n                    ) : (\r\n                      <>\r\n                        <Translate label={modal.props.title} variant=\"h2\" className={classes.title} />\r\n                        {modal.props.subtitle && <Translate label={modal.props.subtitle} variant=\"h6\" className={classes.subtitle} />}\r\n                      </>\r\n                    )}\r\n                  </DialogTitle>\r\n                  <Divider />\r\n                </Fragment>\r\n              )}\r\n\r\n              <DialogContent className={classes.content}>\r\n                {modal.props.hint && (\r\n                  <DialogContentText className={classes.hint} data-testid=\"modal-hint\">\r\n                    {utils.string.t(modal.props.hint)}\r\n                  </DialogContentText>\r\n                )}\r\n\r\n                {get(modal, 'props.children') ? (\r\n                  get(modal, 'props.children')\r\n                ) : (\r\n                  <ModalContent fullScreen={fullScreen} {...modal.props.componentProps} handleClose={this.handleClose(modal.type)} />\r\n                )}\r\n              </DialogContent>\r\n\r\n              {get(modal, 'actions', []).length > 0 && (\r\n                <Fragment>\r\n                  <Divider />\r\n                  <DialogActions data-testid=\"modal-actions\">\r\n                    {modal.actions.map((action, idx) => {\r\n                      let btnAction = null;\r\n\r\n                      if (action.type === 'ok' || action.type === 'cancel') {\r\n                        btnAction = this.handleClose(modal.type, true, action.callback);\r\n                      } else {\r\n                        btnAction = action.callback;\r\n                      }\r\n\r\n                      return (\r\n                        <Button\r\n                          key={idx}\r\n                          {...(btnAction && { onClick: btnAction })}\r\n                          {...(action.variant && { variant: action.variant })}\r\n                          {...(action.color && { color: action.color })}\r\n                          text={<Translate label={action.label} />}\r\n                          data-testid={`modal-btn-${action.type}`}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </DialogActions>\r\n                </Fragment>\r\n              )}\r\n            </Dialog>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Modal);\r\n"]},"metadata":{},"sourceType":"module"}