{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TasksTab\\\\TasksTab.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './TasksTab.style';\nimport * as utils from 'utils';\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormAutocompleteMui } from 'components';\nimport { ClaimsTasksTabProcessing } from 'modules';\nimport { useMedia } from 'hooks'; //mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTasksTabView.propTypes = {\n  isTaskTeam: PropTypes.bool.isRequired,\n  fields: PropTypes.array.isRequired,\n  control: PropTypes.object.isRequired,\n  taskTypeValue: PropTypes.string.isRequired,\n  tasks: PropTypes.object.isRequired,\n  sort: PropTypes.object.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool.isRequired,\n  resetKey: PropTypes.number,\n  multiSelectField: PropTypes.array.isRequired,\n  isMultiSelect: PropTypes.bool,\n  handlers: PropTypes.shape({\n    toggleColumn: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    handleSearchFilter: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    handleSort: PropTypes.func.isRequired,\n    setTaskType: PropTypes.func.isRequired,\n    refreshTasksGrid: PropTypes.func.isRequired,\n    handleBulkAssign: PropTypes.func.isRequired,\n    handleUpdateTaskPriority: PropTypes.func,\n    resetNotificationFilters: PropTypes.func,\n    toggleCheckSigning: PropTypes.func\n  }).isRequired\n};\nexport default function TasksTabView(_ref) {\n  _s();\n\n  var isTaskTeam = _ref.isTaskTeam,\n      fields = _ref.fields,\n      control = _ref.control,\n      taskTypeValue = _ref.taskTypeValue,\n      tasks = _ref.tasks,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      resetKey = _ref.resetKey,\n      multiSelectField = _ref.multiSelectField,\n      isMultiSelect = _ref.isMultiSelect,\n      handlers = _ref.handlers;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'TasksTab'\n  })({\n    isMobile: media.mobile\n  });\n  useEffect(function () {\n    if (taskTypeValue) {\n      handlers.setTaskType(taskTypeValue);\n    }\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"tasks-management\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'taskType')), {}, {\n              control: control\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchBy: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.filterBox,\n          children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'searchType')), {}, {\n            control: control,\n            nestedClasses: {\n              root: classes.selectAutocomplete\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this),\n        searchPlaceholder: utils.string.t('claims.TasksTabsearch'),\n        searchMinChars: 3,\n        nestedClasses: {\n          searchMaxWidth: classes.searchMaxWidth,\n          searchLeft: classes.searchLeft\n        },\n        columns: true,\n        filters: true,\n        isFetchingFilters: isFetchingFilters,\n        filtersArray: tableFilterFields,\n        clearFilterKey: resetKey,\n        handlers: {\n          onSearch: handlers.handleSearch,\n          onResetFilter: handlers.resetFilter,\n          onResetSearch: handlers.resetSearch,\n          onFilter: function onFilter(values) {\n            return handlers.handleSearchFilter(values);\n          },\n          onToggleColumn: handlers.toggleColumn\n        },\n        searchTerm: tasks === null || tasks === void 0 ? void 0 : tasks.query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimsTasksTabProcessing, {\n      isTaskTeam: isTaskTeam,\n      tasks: tasks,\n      cols: columnsArray,\n      columnProps: columnProps,\n      handleUpdateTaskPriority: handlers.handleUpdateTaskPriority,\n      sort: sort,\n      handleSort: handlers.handleSort,\n      handleChangePage: handlers.handleChangePage,\n      handleChangeRowsPerPage: handlers.handleChangeRowsPerPage,\n      refreshTasksGrid: handlers.refreshTasksGrid,\n      isMultiSelect: isMultiSelect,\n      control: control,\n      multiSelectField: multiSelectField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksTabView, \"rTKsHdUmCB64sTLJxtpZgYCrA/w=\", false, function () {\n  return [useMedia];\n});\n\n_c = TasksTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TasksTab/TasksTab.view.js"],"names":["React","useEffect","PropTypes","styles","utils","TableActions","TableFilters","TableToolbar","FormRadio","FormAutocompleteMui","ClaimsTasksTabProcessing","useMedia","makeStyles","Box","Grid","TasksTabView","propTypes","isTaskTeam","bool","isRequired","fields","array","control","object","taskTypeValue","string","tasks","sort","columnsArray","columnProps","func","tableFilterFields","isFetchingFilters","resetKey","number","multiSelectField","isMultiSelect","handlers","shape","toggleColumn","resetFilter","resetSearch","handleSearch","handleSearchFilter","handleChangePage","handleChangeRowsPerPage","handleSort","setTaskType","refreshTasksGrid","handleBulkAssign","handleUpdateTaskPriority","resetNotificationFilters","toggleCheckSigning","media","classes","name","isMobile","mobile","form","getFieldProps","filterBox","root","selectAutocomplete","t","searchMaxWidth","searchLeft","onSearch","onResetFilter","onResetSearch","onFilter","values","onToggleColumn","query"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './TasksTab.style';\r\nimport * as utils from 'utils';\r\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormAutocompleteMui } from 'components';\r\nimport { ClaimsTasksTabProcessing } from 'modules';\r\nimport { useMedia } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\n\r\nTasksTabView.propTypes = {\r\n  isTaskTeam: PropTypes.bool.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  taskTypeValue: PropTypes.string.isRequired,\r\n  tasks: PropTypes.object.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool.isRequired,\r\n  resetKey: PropTypes.number,\r\n  multiSelectField: PropTypes.array.isRequired,\r\n  isMultiSelect: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    handleSearch: PropTypes.func.isRequired,\r\n    handleSearchFilter: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    handleSort: PropTypes.func.isRequired,\r\n    setTaskType: PropTypes.func.isRequired,\r\n    refreshTasksGrid: PropTypes.func.isRequired,\r\n    handleBulkAssign: PropTypes.func.isRequired,\r\n    handleUpdateTaskPriority: PropTypes.func,\r\n    resetNotificationFilters: PropTypes.func,\r\n    toggleCheckSigning: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function TasksTabView({\r\n  isTaskTeam,\r\n  fields,\r\n  control,\r\n  taskTypeValue,\r\n  tasks,\r\n  sort,\r\n  columnsArray,\r\n  columnProps,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  resetKey,\r\n  multiSelectField,\r\n  isMultiSelect,\r\n  handlers,\r\n}) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'TasksTab' })({ isMobile: media.mobile });\r\n\r\n  useEffect(() => {\r\n    if (taskTypeValue) {\r\n      handlers.setTaskType(taskTypeValue);\r\n    }\r\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Box mt={3} data-testid=\"tasks-management\">\r\n      <TableToolbar>\r\n        <TableActions>\r\n          <Grid container>\r\n            <Grid item>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'taskType')} control={control} />\r\n            </Grid>\r\n          </Grid>\r\n        </TableActions>\r\n        <TableFilters\r\n          search\r\n          searchBy={\r\n            <Box className={classes.filterBox}>\r\n              <FormAutocompleteMui\r\n                {...utils.form.getFieldProps(fields, 'searchType')}\r\n                control={control}\r\n                nestedClasses={{ root: classes.selectAutocomplete }}\r\n              />\r\n            </Box>\r\n          }\r\n          searchPlaceholder={utils.string.t('claims.TasksTabsearch')}\r\n          searchMinChars={3}\r\n          nestedClasses={{ searchMaxWidth: classes.searchMaxWidth, searchLeft: classes.searchLeft }}\r\n          columns\r\n          filters\r\n          isFetchingFilters={isFetchingFilters}\r\n          filtersArray={tableFilterFields}\r\n          clearFilterKey={resetKey}\r\n          handlers={{\r\n            onSearch: handlers.handleSearch,\r\n            onResetFilter: handlers.resetFilter,\r\n            onResetSearch: handlers.resetSearch,\r\n            onFilter: (values) => handlers.handleSearchFilter(values),\r\n            onToggleColumn: handlers.toggleColumn,\r\n          }}\r\n          searchTerm={tasks?.query}\r\n        />\r\n      </TableToolbar>\r\n      <ClaimsTasksTabProcessing\r\n        isTaskTeam={isTaskTeam}\r\n        tasks={tasks}\r\n        cols={columnsArray}\r\n        columnProps={columnProps}\r\n        handleUpdateTaskPriority={handlers.handleUpdateTaskPriority}\r\n        sort={sort}\r\n        handleSort={handlers.handleSort}\r\n        handleChangePage={handlers.handleChangePage}\r\n        handleChangeRowsPerPage={handlers.handleChangeRowsPerPage}\r\n        refreshTasksGrid={handlers.refreshTasksGrid}\r\n        isMultiSelect={isMultiSelect}\r\n        control={control}\r\n        multiSelectField={multiSelectField}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}