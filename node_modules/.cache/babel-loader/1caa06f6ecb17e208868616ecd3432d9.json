{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nexport var addReportGroupUser = function addReportGroupUser(reportGroupId, newUser) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var userId = [newUser === null || newUser === void 0 ? void 0 : newUser.id];\n    var defaultError = {\n      file: 'stores/reporting.actions.addReportGroupUser'\n    };\n\n    if (!userId || !reportGroupId) {\n      dispatch(createReportAdminFailure(defaultError));\n      dispatch(enqueueNotification('notification.reporting.userPostFail', 'error'));\n      dispatch(removeLoader('addReportGroupUser'));\n      return;\n    }\n\n    dispatch(createReportAdminRequest(userId));\n    dispatch(addLoader('addReportGroupUser'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/reportgroup/\".concat(reportGroupId, \"/user\"),\n      data: userId\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(createReportAdminSuccess(data === null || data === void 0 ? void 0 : data.users));\n      dispatch(enqueueNotification('notification.reporting.userPostSuccess', 'success'));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(createReportAdminFailure(err));\n      dispatch(enqueueNotification('notification.reporting.userPostFail', 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('addReportGroupUser'));\n    });\n  };\n};\nexport var createReportAdminRequest = function createReportAdminRequest(payload) {\n  return {\n    type: 'REPORT_USER_CREATE_REQUEST',\n    payload: payload\n  };\n};\nexport var createReportAdminSuccess = function createReportAdminSuccess(payload) {\n  return {\n    type: 'REPORT_USER_CREATE_SUCCESS',\n    payload: payload\n  };\n};\nexport var createReportAdminFailure = function createReportAdminFailure(error) {\n  return {\n    type: 'REPORT_USER_CREATE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.addReportUser.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","utils","addReportGroupUser","reportGroupId","newUser","dispatch","getState","auth","user","endpoint","config","vars","userId","id","defaultError","file","createReportAdminFailure","createReportAdminRequest","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","createReportAdminSuccess","users","err","handleError","handleUnauthorized","payload","type","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const addReportGroupUser = (reportGroupId, newUser) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n  const userId = [newUser?.id];\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.addReportGroupUser',\r\n  };\r\n  if (!userId || !reportGroupId) {\r\n    dispatch(createReportAdminFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.reporting.userPostFail', 'error'));\r\n    dispatch(removeLoader('addReportGroupUser'));\r\n    return;\r\n  }\r\n\r\n  dispatch(createReportAdminRequest(userId));\r\n  dispatch(addLoader('addReportGroupUser'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/reportgroup/${reportGroupId}/user`,\r\n      data: userId,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(createReportAdminSuccess(data?.users));\r\n      dispatch(enqueueNotification('notification.reporting.userPostSuccess', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(createReportAdminFailure(err));\r\n      dispatch(enqueueNotification('notification.reporting.userPostFail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('addReportGroupUser'));\r\n    });\r\n};\r\n\r\nexport const createReportAdminRequest = (payload) => {\r\n  return {\r\n    type: 'REPORT_USER_CREATE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createReportAdminSuccess = (payload) => {\r\n  return {\r\n    type: 'REPORT_USER_CREATE_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createReportAdminFailure = (error) => {\r\n  return {\r\n    type: 'REPORT_USER_CREATE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}