{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkSearchPolicy\\\\LinkSearchPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router'; //app\n\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\nimport { showModal, hideModal, selectLossInformation, selectLossQualifiers, selectCatCodes, selectClaimsPolicyData, selectClaimsPolicyInformation, getClaimantNames, getPolicyInformation, selectorDmsViewFiles, selectDmsDocDetails, selectLinkPoliciesData, resetClaimDocDetails } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinkSearchPolicy(props) {\n  _s();\n\n  var _location$state;\n\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var claimData = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.linkPolicy;\n  var lossInformation = useSelector(selectLossInformation);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var policyData = useSelector(selectClaimsPolicyData);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validation = _useState2[0],\n      setValidation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirm = _useState4[0],\n      setConfirm = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sectionEnabledValidationFlag = _useState6[0],\n      setSectionEnabledValidationFlag = _useState6[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var linkPoliciesData = useSelector(selectLinkPoliciesData);\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      oldPolicyData = _useState8[0],\n      setOldPolicyData = _useState8[1];\n\n  var handleAddClaim = function handleAddClaim() {\n    dispatch(getClaimantNames());\n  };\n\n  var onSaveHandle = function onSaveHandle() {\n    setSectionEnabledValidationFlag(false);\n    props.handleSave(props.index);\n  };\n\n  var backStepperHandler = function backStepperHandler() {\n    props.setActiveStep(props.activeStep - 1);\n  };\n\n  var nextStepActions = function nextStepActions() {\n    setSectionEnabledValidationFlag(true);\n    props.setSaveStatus(new Date().getTime());\n    props.handleNext();\n  };\n\n  var nextStepperhandler = function nextStepperhandler() {\n    if (oldPolicyData && oldPolicyData !== (policyData === null || policyData === void 0 ? void 0 : policyData.policyNumber)) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('app.confirm'),\n          hint: utils.string.t('claims.searchPolicy.alertTitle'),\n          fullWidth: true,\n          maxWidth: 'xs',\n          componentProps: {\n            cancelLabel: utils.string.t('app.cancel'),\n            confirmLabel: utils.string.t('app.okProceed'),\n            submitHandler: function () {\n              var _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return nextStepActions();\n\n                      case 2:\n                        !utils.generic.isInvalidOrEmptyArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.resetClaimDocDetails) && resetClaimDocDetails();\n                        dispatch(hideModal('CONFIRM'));\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              function submitHandler() {\n                return _submitHandler.apply(this, arguments);\n              }\n\n              return submitHandler;\n            }()\n          }\n        }\n      }));\n    } else {\n      nextStepActions();\n    }\n  };\n\n  useEffect(function () {\n    if ((policyData === null || policyData === void 0 ? void 0 : policyData.xbInstanceID) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.loader)) {\n      dispatch(getPolicyInformation({\n        viewLoader: false\n      }));\n      setConfirm(true);\n    }\n  }, [policyData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {// func need to call apis for edit claims\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setOldPolicyData(policyData === null || policyData === void 0 ? void 0 : policyData.policyNumber);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(LinkSearchPolicyView, _objectSpread(_objectSpread({}, props), {}, {\n    policyInformation: policyInformation,\n    handleAddClaim: handleAddClaim,\n    lossInformation: lossInformation,\n    policyData: policyData,\n    catCodes: catCodes,\n    lossQualifiers: lossQualifiers,\n    confirm: confirm,\n    setConfirm: setConfirm,\n    sectionEnabledValidationFlag: sectionEnabledValidationFlag,\n    validation: validation,\n    setValidation: setValidation,\n    onSaveHandle: onSaveHandle,\n    backStepperHandler: backStepperHandler,\n    nextStepperhandler: nextStepperhandler,\n    linkPolicyDocList: (viewDocumentList === null || viewDocumentList === void 0 ? void 0 : viewDocumentList.length) > 0 ? viewDocumentList : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinkSearchPolicy, \"maXzjbCvjz7AzTyc5WbZ3kNmArI=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LinkSearchPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkSearchPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkSearchPolicy/LinkSearchPolicy.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useLocation","LinkSearchPolicyView","showModal","hideModal","selectLossInformation","selectLossQualifiers","selectCatCodes","selectClaimsPolicyData","selectClaimsPolicyInformation","getClaimantNames","getPolicyInformation","selectorDmsViewFiles","selectDmsDocDetails","selectLinkPoliciesData","resetClaimDocDetails","utils","LinkSearchPolicy","props","dispatch","location","claimData","state","linkPolicy","lossInformation","catCodes","lossQualifiers","policyInformation","policyData","validation","setValidation","confirm","setConfirm","sectionEnabledValidationFlag","setSectionEnabledValidationFlag","viewDocumentList","savedDmsDocList","linkPoliciesData","oldPolicyData","setOldPolicyData","handleAddClaim","onSaveHandle","handleSave","index","backStepperHandler","setActiveStep","activeStep","nextStepActions","setSaveStatus","Date","getTime","handleNext","nextStepperhandler","policyNumber","component","title","string","t","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","generic","isInvalidOrEmptyArray","xbInstanceID","loader","viewLoader","length","linkPolicyDocDetails"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\n\r\n//app\r\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\r\nimport {\r\n  showModal,\r\n  hideModal,\r\n  selectLossInformation,\r\n  selectLossQualifiers,\r\n  selectCatCodes,\r\n  selectClaimsPolicyData,\r\n  selectClaimsPolicyInformation,\r\n  getClaimantNames,\r\n  getPolicyInformation,\r\n  selectorDmsViewFiles,\r\n  selectDmsDocDetails,\r\n  selectLinkPoliciesData,\r\n  resetClaimDocDetails,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport default function LinkSearchPolicy(props) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const claimData = location?.state?.linkPolicy;\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const policyData = useSelector(selectClaimsPolicyData);\r\n  const [validation, setValidation] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [sectionEnabledValidationFlag, setSectionEnabledValidationFlag] = useState(true);\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const linkPoliciesData = useSelector(selectLinkPoliciesData);\r\n  const [oldPolicyData, setOldPolicyData] = useState('');\r\n\r\n  const handleAddClaim = () => {\r\n    dispatch(getClaimantNames());\r\n  };\r\n\r\n  const onSaveHandle = () => {\r\n    setSectionEnabledValidationFlag(false);\r\n    props.handleSave(props.index);\r\n  };\r\n\r\n  const backStepperHandler = () => {\r\n    props.setActiveStep(props.activeStep - 1);\r\n  };\r\n\r\n  const nextStepActions = () => {\r\n    setSectionEnabledValidationFlag(true);\r\n    props.setSaveStatus(new Date().getTime());\r\n    props.handleNext();\r\n  };\r\n\r\n  const nextStepperhandler = () => {\r\n    if (oldPolicyData && oldPolicyData !== policyData?.policyNumber) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            title: utils.string.t('app.confirm'),\r\n            hint: utils.string.t('claims.searchPolicy.alertTitle'),\r\n            fullWidth: true,\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              cancelLabel: utils.string.t('app.cancel'),\r\n              confirmLabel: utils.string.t('app.okProceed'),\r\n              submitHandler: async () => {\r\n                await nextStepActions();\r\n                !utils.generic.isInvalidOrEmptyArray(savedDmsDocList?.resetClaimDocDetails) && resetClaimDocDetails();\r\n                dispatch(hideModal('CONFIRM'));\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      nextStepActions();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (policyData?.xbInstanceID && !linkPoliciesData?.loader) {\r\n      dispatch(getPolicyInformation({ viewLoader: false }));\r\n      setConfirm(true);\r\n    }\r\n  }, [policyData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    // func need to call apis for edit claims\r\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setOldPolicyData(policyData?.policyNumber);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <LinkSearchPolicyView\r\n      {...props}\r\n      policyInformation={policyInformation}\r\n      handleAddClaim={handleAddClaim}\r\n      lossInformation={lossInformation}\r\n      policyData={policyData}\r\n      catCodes={catCodes}\r\n      lossQualifiers={lossQualifiers}\r\n      confirm={confirm}\r\n      setConfirm={setConfirm}\r\n      sectionEnabledValidationFlag={sectionEnabledValidationFlag}\r\n      validation={validation}\r\n      setValidation={setValidation}\r\n      onSaveHandle={onSaveHandle}\r\n      backStepperHandler={backStepperHandler}\r\n      nextStepperhandler={nextStepperhandler}\r\n      linkPolicyDocList={viewDocumentList?.length > 0 ? viewDocumentList : savedDmsDocList?.linkPolicyDocDetails}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}