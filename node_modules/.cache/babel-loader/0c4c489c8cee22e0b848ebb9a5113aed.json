{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Button\\\\Button.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport omit from 'lodash/omit'; // app\n\nimport styles from './Button.styles';\nimport { Tooltip } from 'components'; // mui\n\nimport { withStyles, Button as MuiButton, Badge } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Button = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _iconClasses, _btnClasses;\n\n      var _this$props = this.props,\n          refProp = _this$props.refProp,\n          icon = _this$props.icon,\n          badgeContent = _this$props.badgeContent,\n          text = _this$props.text,\n          size = _this$props.size,\n          variant = _this$props.variant,\n          color = _this$props.color,\n          to = _this$props.to,\n          tooltip = _this$props.tooltip,\n          light = _this$props.light,\n          danger = _this$props.danger,\n          iconWide = _this$props.iconWide,\n          iconPosition = _this$props.iconPosition,\n          nestedClasses = _this$props.nestedClasses,\n          classes = _this$props.classes,\n          badgeColor = _this$props.badgeColor,\n          badgeVariant = _this$props.badgeVariant;\n      var IconComponent = icon; // remove unwanted props for MUI component\n\n      var defaultProps = _objectSpread(_objectSpread(_objectSpread({}, omit(this.props, ['refProp', 'icon', 'badgeContent', 'text', 'tooltip', 'light', 'danger', 'iconWide', 'iconPosition', 'nestedClasses', 'classes', 'badgeColor', 'badgeVariant'])), to && {\n        component: Link\n      }), {}, {\n        size: size === 'xsmall' ? 'small' : size,\n        color: danger ? 'primary' : color\n      });\n\n      var iconClasses = (_iconClasses = {}, _defineProperty(_iconClasses, classes.iconXs, size === 'xsmall'), _defineProperty(_iconClasses, classes.iconSm, size === 'small'), _defineProperty(_iconClasses, classes.iconMd, size === 'medium'), _defineProperty(_iconClasses, classes.iconLg, size === 'large'), _defineProperty(_iconClasses, classes.iconOnly, icon && !text), _iconClasses);\n      var btnClasses = (_btnClasses = {}, _defineProperty(_btnClasses, classes.btn, true), _defineProperty(_btnClasses, classes.btnXs, size === 'xsmall'), _defineProperty(_btnClasses, classes.btnSm, size === 'small'), _defineProperty(_btnClasses, classes.btnMd, size === 'medium'), _defineProperty(_btnClasses, classes.btnLg, size === 'large'), _defineProperty(_btnClasses, classes.btnOutlined, variant === 'outlined'), _defineProperty(_btnClasses, classes.btnIconOnly, icon && !text), _defineProperty(_btnClasses, classes.btnIconWide, iconWide), _defineProperty(_btnClasses, classes.btnLightPrimary, light && icon && !text && color === 'primary'), _defineProperty(_btnClasses, classes.btnLightSecondary, light && icon && !text && color === 'secondary'), _defineProperty(_btnClasses, classes.btnLightDefault, light && icon && !text && color === 'default'), _defineProperty(_btnClasses, classes.btnDanger, danger && variant === 'contained'), _defineProperty(_btnClasses, classes.btnDangerText, danger && variant === 'text'), _defineProperty(_btnClasses, classes.btnDangerOutline, danger && variant === 'outlined'), _defineProperty(_btnClasses, nestedClasses.btn, Boolean(nestedClasses.btn)), _btnClasses);\n      var button; // icon AND text\n\n      if (icon && text) {\n        button = /*#__PURE__*/_jsxDEV(MuiButton, _objectSpread(_objectSpread({\n          ref: refProp\n        }, defaultProps), {}, {\n          className: classnames(btnClasses),\n          classes: {\n            label: nestedClasses.label\n          },\n          children: [iconPosition === 'right' && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(IconComponent, {\n            fontSize: \"inherit\",\n            className: classnames(iconClasses, nestedClasses.icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), iconPosition === 'left' && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 39\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this); // text ONLY\n      } else if (!icon && text) {\n        button = /*#__PURE__*/_jsxDEV(MuiButton, _objectSpread(_objectSpread({\n          ref: refProp\n        }, defaultProps), {}, {\n          className: classnames(btnClasses),\n          classes: {\n            label: nestedClasses.label\n          },\n          children: text\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this); // icon ONLY\n      } else if (icon && !text) {\n        button = /*#__PURE__*/_jsxDEV(MuiButton, _objectSpread(_objectSpread({\n          ref: refProp\n        }, defaultProps), {}, {\n          className: classnames(btnClasses),\n          classes: {\n            label: nestedClasses.label\n          },\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: badgeContent !== null && badgeContent !== void 0 ? badgeContent : 0,\n            variant: badgeVariant,\n            color: badgeColor,\n            children: /*#__PURE__*/_jsxDEV(IconComponent, {\n              fontSize: \"inherit\",\n              className: classnames(iconClasses, nestedClasses.icon)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this);\n      } else {\n        return null;\n      } // with tooltip\n\n\n      if (tooltip.title && !this.props.disabled) {\n        return /*#__PURE__*/_jsxDEV(Tooltip, _objectSpread(_objectSpread({\n          inlineBlock: true\n        }, tooltip), {}, {\n          children: button\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this);\n      } // without tooltip\n\n\n      return button;\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\nButton.propTypes = {\n  refProp: PropTypes.object,\n  icon: PropTypes.object,\n  badgeContent: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  iconWide: PropTypes.bool,\n  iconPosition: PropTypes.oneOf(['left', 'right']),\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']),\n  text: PropTypes.node,\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  badgeColor: PropTypes.oneOf(['default', 'primary', 'secondary', 'error']),\n  badgeVariant: PropTypes.oneOf(['dot', 'standard', PropTypes.string]),\n  light: PropTypes.bool,\n  danger: PropTypes.bool,\n  to: PropTypes.string,\n  tooltip: PropTypes.object,\n  nestedClasses: PropTypes.shape({\n    btn: PropTypes.string,\n    icon: PropTypes.string,\n    label: PropTypes.string\n  })\n};\nButton.defaultProps = {\n  size: 'medium',\n  iconPosition: 'left',\n  color: 'default',\n  variant: 'contained',\n  tooltip: {},\n  nestedClasses: {},\n  badgeColor: 'primary',\n  badgeVariant: 'standard'\n};\nexport default compose(withStyles(styles))(Button);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Button/Button.js"],"names":["React","PureComponent","PropTypes","compose","Link","classnames","omit","styles","Tooltip","withStyles","Button","MuiButton","Badge","props","refProp","icon","badgeContent","text","size","variant","color","to","tooltip","light","danger","iconWide","iconPosition","nestedClasses","classes","badgeColor","badgeVariant","IconComponent","defaultProps","component","iconClasses","iconXs","iconSm","iconMd","iconLg","iconOnly","btnClasses","btn","btnXs","btnSm","btnMd","btnLg","btnOutlined","btnIconOnly","btnIconWide","btnLightPrimary","btnLightSecondary","btnLightDefault","btnDanger","btnDangerText","btnDangerOutline","Boolean","button","label","title","disabled","propTypes","object","oneOfType","string","number","bool","oneOf","node","shape"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport omit from 'lodash/omit';\r\n\r\n// app\r\nimport styles from './Button.styles';\r\nimport { Tooltip } from 'components';\r\n\r\n// mui\r\nimport { withStyles, Button as MuiButton, Badge } from '@material-ui/core';\r\n\r\nexport class Button extends PureComponent {\r\n  static propTypes = {\r\n    refProp: PropTypes.object,\r\n    icon: PropTypes.object,\r\n    badgeContent: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    iconWide: PropTypes.bool,\r\n    iconPosition: PropTypes.oneOf(['left', 'right']),\r\n    size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']),\r\n    text: PropTypes.node,\r\n    variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\r\n    color: PropTypes.oneOf(['default', 'primary', 'secondary']),\r\n    badgeColor: PropTypes.oneOf(['default', 'primary', 'secondary', 'error']),\r\n    badgeVariant: PropTypes.oneOf(['dot', 'standard', PropTypes.string]),\r\n    light: PropTypes.bool,\r\n    danger: PropTypes.bool,\r\n    to: PropTypes.string,\r\n    tooltip: PropTypes.object,\r\n    nestedClasses: PropTypes.shape({\r\n      btn: PropTypes.string,\r\n      icon: PropTypes.string,\r\n      label: PropTypes.string,\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    size: 'medium',\r\n    iconPosition: 'left',\r\n    color: 'default',\r\n    variant: 'contained',\r\n    tooltip: {},\r\n    nestedClasses: {},\r\n    badgeColor: 'primary',\r\n    badgeVariant: 'standard',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      refProp,\r\n      icon,\r\n      badgeContent,\r\n      text,\r\n      size,\r\n      variant,\r\n      color,\r\n      to,\r\n      tooltip,\r\n      light,\r\n      danger,\r\n      iconWide,\r\n      iconPosition,\r\n      nestedClasses,\r\n      classes,\r\n      badgeColor,\r\n      badgeVariant,\r\n    } = this.props;\r\n    const IconComponent = icon;\r\n\r\n    // remove unwanted props for MUI component\r\n    const defaultProps = {\r\n      ...omit(this.props, [\r\n        'refProp',\r\n        'icon',\r\n        'badgeContent',\r\n        'text',\r\n        'tooltip',\r\n        'light',\r\n        'danger',\r\n        'iconWide',\r\n        'iconPosition',\r\n        'nestedClasses',\r\n        'classes',\r\n        'badgeColor',\r\n        'badgeVariant',\r\n      ]),\r\n      ...(to && { component: Link }),\r\n      size: size === 'xsmall' ? 'small' : size,\r\n      color: danger ? 'primary' : color,\r\n    };\r\n\r\n    const iconClasses = {\r\n      [classes.iconXs]: size === 'xsmall',\r\n      [classes.iconSm]: size === 'small',\r\n      [classes.iconMd]: size === 'medium',\r\n      [classes.iconLg]: size === 'large',\r\n      [classes.iconOnly]: icon && !text,\r\n    };\r\n\r\n    const btnClasses = {\r\n      [classes.btn]: true,\r\n      [classes.btnXs]: size === 'xsmall',\r\n      [classes.btnSm]: size === 'small',\r\n      [classes.btnMd]: size === 'medium',\r\n      [classes.btnLg]: size === 'large',\r\n      [classes.btnOutlined]: variant === 'outlined',\r\n      [classes.btnIconOnly]: icon && !text,\r\n      [classes.btnIconWide]: iconWide,\r\n      [classes.btnLightPrimary]: light && icon && !text && color === 'primary',\r\n      [classes.btnLightSecondary]: light && icon && !text && color === 'secondary',\r\n      [classes.btnLightDefault]: light && icon && !text && color === 'default',\r\n      [classes.btnDanger]: danger && variant === 'contained',\r\n      [classes.btnDangerText]: danger && variant === 'text',\r\n      [classes.btnDangerOutline]: danger && variant === 'outlined',\r\n      [nestedClasses.btn]: Boolean(nestedClasses.btn),\r\n    };\r\n\r\n    let button;\r\n\r\n    // icon AND text\r\n    if (icon && text) {\r\n      button = (\r\n        <MuiButton ref={refProp} {...defaultProps} className={classnames(btnClasses)} classes={{ label: nestedClasses.label }}>\r\n          {iconPosition === 'right' && <span>{text}</span>}\r\n          <IconComponent fontSize=\"inherit\" className={classnames(iconClasses, nestedClasses.icon)} />\r\n          {iconPosition === 'left' && <span>{text}</span>}\r\n        </MuiButton>\r\n      );\r\n\r\n      // text ONLY\r\n    } else if (!icon && text) {\r\n      button = (\r\n        <MuiButton ref={refProp} {...defaultProps} className={classnames(btnClasses)} classes={{ label: nestedClasses.label }}>\r\n          {text}\r\n        </MuiButton>\r\n      );\r\n\r\n      // icon ONLY\r\n    } else if (icon && !text) {\r\n      button = (\r\n        <MuiButton ref={refProp} {...defaultProps} className={classnames(btnClasses)} classes={{ label: nestedClasses.label }}>\r\n          <Badge badgeContent={badgeContent ?? 0} variant={badgeVariant} color={badgeColor}>\r\n            <IconComponent fontSize=\"inherit\" className={classnames(iconClasses, nestedClasses.icon)} />\r\n          </Badge>\r\n        </MuiButton>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    // with tooltip\r\n    if (tooltip.title && !this.props.disabled) {\r\n      return (\r\n        <Tooltip inlineBlock {...tooltip}>\r\n          {button}\r\n        </Tooltip>\r\n      );\r\n    }\r\n\r\n    // without tooltip\r\n    return button;\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(Button);\r\n"]},"metadata":{},"sourceType":"module"}