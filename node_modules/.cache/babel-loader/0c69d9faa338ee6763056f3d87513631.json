{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ConfirmRFISubmission\\\\ConfirmRFISubmission.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DetailsCard } from 'modules';\nimport * as utils from 'utils';\nimport styles from './ConfirmRFISubmission.styles';\nimport { CreateTaskStepperActions } from 'forms'; //mui\n\nimport { Grid, Typography, makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nConfirmRFISubmissionView.propTypes = {\n  rfiInfo: PropTypes.array.isRequired,\n  diariseInfo: PropTypes.array.isRequired,\n  activeStep: PropTypes.bool.isRequired,\n  isAllStepsCompleted: PropTypes.bool,\n  handleBack: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired\n};\nexport function ConfirmRFISubmissionView(_ref) {\n  var _this = this;\n\n  var rfiInfo = _ref.rfiInfo,\n      diariseInfo = _ref.diariseInfo,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleBack = _ref.handleBack,\n      handleCancel = _ref.handleCancel,\n      handleFinish = _ref.handleFinish,\n      props = _objectWithoutProperties(_ref, [\"rfiInfo\", \"diariseInfo\", \"activeStep\", \"isAllStepsCompleted\", \"handleBack\", \"handleCancel\", \"handleFinish\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'ConfirmRFISubmission'\n  })();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.root,\n      flex: \"1 1 auto\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: classes.sectionheader,\n        children: utils.string.t('claims.processing.taskFunction.RfiDetails')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: rfiInfo === null || rfiInfo === void 0 ? void 0 : rfiInfo.map(function (info) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            md: (info === null || info === void 0 ? void 0 : info.fullWidth) ? 12 : 4,\n            children: /*#__PURE__*/_jsxDEV(DetailsCard, {\n              title: info === null || info === void 0 ? void 0 : info.title,\n              details: info === null || info === void 0 ? void 0 : info.value,\n              isLoading: info === null || info === void 0 ? void 0 : info.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this)\n          }, info === null || info === void 0 ? void 0 : info.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: classes.sectionheader,\n        children: utils.string.t('claims.processing.taskFunction.diarise')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: diariseInfo === null || diariseInfo === void 0 ? void 0 : diariseInfo.map(function (dInfo) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(DetailsCard, {\n              title: dInfo === null || dInfo === void 0 ? void 0 : dInfo.title,\n              details: dInfo === null || dInfo === void 0 ? void 0 : dInfo.value,\n              isLoading: dInfo === null || dInfo === void 0 ? void 0 : dInfo.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, _this)\n          }, dInfo === null || dInfo === void 0 ? void 0 : dInfo.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(CreateTaskStepperActions, _objectSpread(_objectSpread({}, props), {}, {\n        activeStep: activeStep,\n        onSave: function onSave() {},\n        isAllStepsCompleted: isAllStepsCompleted,\n        handleBack: function handleBack() {\n          _handleBack(0);\n        },\n        handleCancel: handleCancel,\n        handleFinish: handleFinish,\n        save: true\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = ConfirmRFISubmissionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmRFISubmissionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ConfirmRFISubmission/ConfirmRFISubmission.view.js"],"names":["React","PropTypes","DetailsCard","utils","styles","CreateTaskStepperActions","Grid","Typography","makeStyles","Box","ConfirmRFISubmissionView","propTypes","rfiInfo","array","isRequired","diariseInfo","activeStep","bool","isAllStepsCompleted","handleBack","func","handleCancel","handleFinish","props","classes","name","root","sectionheader","string","t","map","info","fullWidth","title","value","isLoading","dInfo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DetailsCard } from 'modules';\r\nimport * as utils from 'utils';\r\nimport styles from './ConfirmRFISubmission.styles';\r\nimport { CreateTaskStepperActions } from 'forms';\r\n\r\n//mui\r\nimport { Grid, Typography, makeStyles, Box } from '@material-ui/core';\r\n\r\nConfirmRFISubmissionView.propTypes = {\r\n  rfiInfo: PropTypes.array.isRequired,\r\n  diariseInfo: PropTypes.array.isRequired,\r\n  activeStep: PropTypes.bool.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n}\r\nexport function ConfirmRFISubmissionView({ rfiInfo, diariseInfo, activeStep, isAllStepsCompleted, handleBack, handleCancel, handleFinish, ...props }) {\r\n\r\n  const classes = makeStyles(styles, { name: 'ConfirmRFISubmission' })();\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box className={classes.root} flex=\"1 1 auto\">\r\n        <Typography variant=\"h5\" className={classes.sectionheader}>\r\n          {utils.string.t('claims.processing.taskFunction.RfiDetails')}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          {rfiInfo?.map((info) => {\r\n            return (\r\n              <Grid item xs={6} sm={4} md={info?.fullWidth ? 12 : 4} key={info?.title}>\r\n                <DetailsCard title={info?.title} details={info?.value} isLoading={info?.isLoading} />\r\n              </Grid>\r\n            )\r\n          }\r\n          )}\r\n        </Grid>\r\n        <Typography variant=\"h5\" className={classes.sectionheader}>\r\n          {utils.string.t('claims.processing.taskFunction.diarise')}\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          {\r\n            diariseInfo?.map((dInfo) => {\r\n              return (<Grid item xs={6} sm={4} md={4} key={dInfo?.title}>\r\n                <DetailsCard title={dInfo?.title} details={dInfo?.value} isLoading={dInfo?.isLoading} />\r\n              </Grid>)\r\n            })\r\n          }\r\n        </Grid>\r\n      </Box>\r\n      <Box flex=\"0 1 auto\">\r\n        <CreateTaskStepperActions\r\n          {...props}\r\n          activeStep={activeStep}\r\n          onSave={() => { }}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => {\r\n            handleBack(0);\r\n          }}\r\n          handleCancel={handleCancel}\r\n          handleFinish={handleFinish}\r\n          save={true}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}