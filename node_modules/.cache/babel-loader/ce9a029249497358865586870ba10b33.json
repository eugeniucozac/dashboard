{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; // app\n\nimport { DmsUploadMetaDataView } from './DmsUploadMetaData.view';\nimport { selectDmsMetaData, selectRefDataXbInstances } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsUploadMetaData.propTypes = {\n  dmsContext: PropTypes.string,\n  filesSubmitted: PropTypes.bool,\n  postUploadMetaData: PropTypes.array\n};\nexport default function DmsUploadMetaData(_ref) {\n  _s();\n\n  var dmsContext = _ref.dmsContext,\n      filesSubmitted = _ref.filesSubmitted,\n      postUploadMetaData = _ref.postUploadMetaData;\n  // redux\n  var documentMetaData = useSelector(selectDmsMetaData);\n  var refDataXbInstances = useSelector(selectRefDataXbInstances); // state\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _utils$dmsFormatter$f = utils.dmsFormatter.formatDocumentMetaData(documentMetaData, dmsContext, refDataXbInstances),\n      commonInfo = _utils$dmsFormatter$f.commonInfo,\n      lossInfo = _utils$dmsFormatter$f.lossInfo,\n      claimInfo = _utils$dmsFormatter$f.claimInfo,\n      policyInfo = _utils$dmsFormatter$f.policyInfo;\n\n  useEffect(function () {\n    if (Object.keys(documentMetaData).length > 0) {\n      setIsLoading(false);\n    }\n  }, [documentMetaData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(DmsUploadMetaDataView, {\n    isLoading: isLoading,\n    dmsContext: dmsContext,\n    preUploadMetaData: {\n      commonInfo: commonInfo,\n      lossInfo: lossInfo,\n      claimInfo: claimInfo,\n      policyInfo: policyInfo\n    },\n    postUploadMetaData: postUploadMetaData,\n    filesSubmitted: filesSubmitted\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsUploadMetaData, \"Z5jnrrzHEKTKsIMN9JTiidGLNvc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = DmsUploadMetaData;\nDmsUploadMetaData.displayName = \"DmsUploadMetaData\";\nDmsUploadMetaData.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DmsUploadMetaData\",\n  \"props\": {\n    \"dmsContext\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"filesSubmitted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"postUploadMetaData\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.js\"] = {\n    name: \"DmsUploadMetaData\",\n    docgenInfo: DmsUploadMetaData.__docgenInfo,\n    path: \"src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsUploadMetaData\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DmsUploadMetaData/DmsUploadMetaData.js"],"names":["React","useEffect","useState","useSelector","PropTypes","DmsUploadMetaDataView","selectDmsMetaData","selectRefDataXbInstances","utils","DmsUploadMetaData","propTypes","dmsContext","string","filesSubmitted","bool","postUploadMetaData","array","documentMetaData","refDataXbInstances","isLoading","setIsLoading","dmsFormatter","formatDocumentMetaData","commonInfo","lossInfo","claimInfo","policyInfo","Object","keys","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,iBAAT,EAA4BC,wBAA5B,QAA4D,QAA5D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;AAC5BC,EAAAA,UAAU,EAAEP,SAAS,CAACQ,MADM;AAE5BC,EAAAA,cAAc,EAAET,SAAS,CAACU,IAFE;AAG5BC,EAAAA,kBAAkB,EAAEX,SAAS,CAACY;AAHF,CAA9B;AAMA,eAAe,SAASP,iBAAT,OAA+E;AAAA;;AAAA,MAAlDE,UAAkD,QAAlDA,UAAkD;AAAA,MAAtCE,cAAsC,QAAtCA,cAAsC;AAAA,MAAtBE,kBAAsB,QAAtBA,kBAAsB;AAC5F;AACA,MAAME,gBAAgB,GAAGd,WAAW,CAACG,iBAAD,CAApC;AACA,MAAMY,kBAAkB,GAAGf,WAAW,CAACI,wBAAD,CAAtC,CAH4F,CAK5F;;AAL4F,kBAM1DL,QAAQ,CAAC,IAAD,CANkD;AAAA;AAAA,MAMrFiB,SANqF;AAAA,MAM1EC,YAN0E;;AAAA,8BAQpCZ,KAAK,CAACa,YAAN,CAAmBC,sBAAnB,CACtDL,gBADsD,EAEtDN,UAFsD,EAGtDO,kBAHsD,CARoC;AAAA,MAQpFK,UARoF,yBAQpFA,UARoF;AAAA,MAQxEC,QARwE,yBAQxEA,QARwE;AAAA,MAQ9DC,SAR8D,yBAQ9DA,SAR8D;AAAA,MAQnDC,UARmD,yBAQnDA,UARmD;;AAc5FzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0B,MAAM,CAACC,IAAP,CAAYX,gBAAZ,EAA8BY,MAA9B,GAAuC,CAA3C,EAA8C;AAC5CT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACH,gBAAD,CAJM,CAAT,CAd4F,CAkBpE;;AAExB,sBACE,QAAC,qBAAD;AACE,IAAA,SAAS,EAAEE,SADb;AAEE,IAAA,UAAU,EAAER,UAFd;AAGE,IAAA,iBAAiB,EAAE;AAAEY,MAAAA,UAAU,EAAVA,UAAF;AAAcC,MAAAA,QAAQ,EAARA,QAAd;AAAwBC,MAAAA,SAAS,EAATA,SAAxB;AAAmCC,MAAAA,UAAU,EAAVA;AAAnC,KAHrB;AAIE,IAAA,kBAAkB,EAAEX,kBAJtB;AAKE,IAAA,cAAc,EAAEF;AALlB;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA7BuBJ,iB;UAEGN,W,EACEA,W;;;KAHLM,iB;AAAAA,iB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { DmsUploadMetaDataView } from './DmsUploadMetaData.view';\r\nimport { selectDmsMetaData, selectRefDataXbInstances } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nDmsUploadMetaData.propTypes = {\r\n  dmsContext: PropTypes.string,\r\n  filesSubmitted: PropTypes.bool,\r\n  postUploadMetaData: PropTypes.array,\r\n};\r\n\r\nexport default function DmsUploadMetaData({ dmsContext, filesSubmitted, postUploadMetaData }) {\r\n  // redux\r\n  const documentMetaData = useSelector(selectDmsMetaData);\r\n  const refDataXbInstances = useSelector(selectRefDataXbInstances);\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { commonInfo, lossInfo, claimInfo, policyInfo } = utils.dmsFormatter.formatDocumentMetaData(\r\n    documentMetaData,\r\n    dmsContext,\r\n    refDataXbInstances\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(documentMetaData).length > 0) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [documentMetaData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <DmsUploadMetaDataView\r\n      isLoading={isLoading}\r\n      dmsContext={dmsContext}\r\n      preUploadMetaData={{ commonInfo, lossInfo, claimInfo, policyInfo }}\r\n      postUploadMetaData={postUploadMetaData}\r\n      filesSubmitted={filesSubmitted}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}