{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DmsUploadFiles\\\\DmsUploadFilesRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './DmsUploadFilesRow.styles';\nimport { TableCell, PopoverMenu, Button, FormText, Warning, Loader, FormGrid, FormDate, FormSelect } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, TableRow, Box, Collapse } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nDmsUploadFilesRowView.propTypes = {\n  index: PropTypes.number,\n  file: PropTypes.any,\n  getFileKey: PropTypes.func,\n  docTypesActions: PropTypes.array,\n  docClassificationTypesActions: PropTypes.array,\n  currencies: PropTypes.array,\n  fileRowForm: PropTypes.any,\n  errors: PropTypes.shape({\n    isDuplicateFileName: PropTypes.bool,\n    isInvalidFileName: PropTypes.bool\n  }),\n  filesSubmitted: PropTypes.bool,\n  showDocTypeRequired: PropTypes.bool,\n  isUploading: PropTypes.bool,\n  uploadStatus: PropTypes.bool,\n  handlers: PropTypes.shape({\n    removeFiles: PropTypes.func,\n    fileNameChange: PropTypes.func,\n    retrySingleFile: PropTypes.func,\n    paymentDateInput: PropTypes.func,\n    paymentRefInput: PropTypes.func,\n    lossPayeeInput: PropTypes.func,\n    paymentAmountInput: PropTypes.func,\n    paymentCurrencyInput: PropTypes.func\n  })\n};\nexport function DmsUploadFilesRowView(_ref) {\n  var _fileRowForm$formDocT, _fileRowForm$formDocT2, _fileRowForm$formDocT3, _fileRowForm$formDocC, _docClassificationTyp, _fileRowForm$paymentF;\n\n  var index = _ref.index,\n      file = _ref.file,\n      getFileKey = _ref.getFileKey,\n      docTypesActions = _ref.docTypesActions,\n      docClassificationTypesActions = _ref.docClassificationTypesActions,\n      currencies = _ref.currencies,\n      fileRowForm = _ref.fileRowForm,\n      errors = _ref.errors,\n      filesSubmitted = _ref.filesSubmitted,\n      showDocTypeRequired = _ref.showDocTypeRequired,\n      isUploading = _ref.isUploading,\n      uploadStatus = _ref.uploadStatus,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'DmsUploadFilesRow'\n  })();\n  var fileNameChange = handlers.fileNameChange,\n      paymentDateInput = handlers.paymentDateInput,\n      paymentRefInput = handlers.paymentRefInput,\n      lossPayeeInput = handlers.lossPayeeInput,\n      paymentAmountInput = handlers.paymentAmountInput,\n      paymentCurrencyInput = handlers.paymentCurrencyInput;\n  var isDuplicateFileName = errors.isDuplicateFileName,\n      isInvalidFileName = errors.isInvalidFileName;\n  var isPaymentType = (fileRowForm === null || fileRowForm === void 0 ? void 0 : (_fileRowForm$formDocT = fileRowForm.formDocType) === null || _fileRowForm$formDocT === void 0 ? void 0 : _fileRowForm$formDocT.label) === constants.DMS_DOCUMENT_TYPE_PAYMENT;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cellWidth,\n        children: [/*#__PURE__*/_jsxDEV(FormText, {\n          type: \"textarea\",\n          name: \"files\".concat(index, \"name\"),\n          value: fileRowForm === null || fileRowForm === void 0 ? void 0 : fileRowForm.formFileName,\n          muiComponentProps: {\n            onChange: fileNameChange(),\n            size: 'small',\n            multiline: true,\n            rows: 1,\n            rowsMax: 6\n          },\n          compact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), isDuplicateFileName && /*#__PURE__*/_jsxDEV(Warning, {\n          type: \"alert\",\n          size: \"small\",\n          align: \"left\",\n          icon: ErrorOutlineIcon,\n          text: utils.string.t('dms.upload.warning.duplicateDocumentWarning')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), isInvalidFileName && /*#__PURE__*/_jsxDEV(Warning, {\n          type: \"error\",\n          size: \"small\",\n          align: \"left\",\n          icon: ErrorOutlineIcon,\n          text: utils.string.t('dms.upload.warning.invalidInputWarning')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cellWidth,\n        children: [/*#__PURE__*/_jsxDEV(PopoverMenu, {\n          text: (fileRowForm === null || fileRowForm === void 0 ? void 0 : (_fileRowForm$formDocT2 = fileRowForm.formDocType) === null || _fileRowForm$formDocT2 === void 0 ? void 0 : _fileRowForm$formDocT2.label) || utils.string.t('dms.upload.modalItems.selectDocumentType'),\n          size: \"small\",\n          id: \"files\".concat(index),\n          icon: ArrowDropDownIcon,\n          iconPosition: \"right\",\n          disabled: false,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          items: docTypesActions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), showDocTypeRequired && !(fileRowForm === null || fileRowForm === void 0 ? void 0 : (_fileRowForm$formDocT3 = fileRowForm.formDocType) === null || _fileRowForm$formDocT3 === void 0 ? void 0 : _fileRowForm$formDocT3.label) && /*#__PURE__*/_jsxDEV(Warning, {\n          type: \"error\",\n          size: \"small\",\n          align: \"left\",\n          icon: ErrorOutlineIcon,\n          text: utils.string.t('dms.upload.warning.emptyDocumentType')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cellWidth,\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          id: \"files\".concat(index),\n          text: (fileRowForm === null || fileRowForm === void 0 ? void 0 : (_fileRowForm$formDocC = fileRowForm.formDocClassificationType) === null || _fileRowForm$formDocC === void 0 ? void 0 : _fileRowForm$formDocC.label) || ((_docClassificationTyp = docClassificationTypesActions[2]) === null || _docClassificationTyp === void 0 ? void 0 : _docClassificationTyp.label),\n          icon: ArrowDropDownIcon,\n          iconPosition: \"right\",\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          items: docClassificationTypesActions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cellWidth,\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          text: utils.string.t('dms.upload.modalItems.addTag'),\n          size: \"small\",\n          id: \"document-tags\",\n          icon: ArrowDropDownIcon,\n          iconPosition: \"right\",\n          disabled: false,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          items: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cellWidth,\n        children: [isUploading && !filesSubmitted && /*#__PURE__*/_jsxDEV(Loader, {\n          visible: isUploading,\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), !isUploading && !filesSubmitted && /*#__PURE__*/_jsxDEV(Button, {\n          icon: HighlightOffIcon,\n          variant: \"text\",\n          danger: false,\n          size: \"small\",\n          onClick: function onClick() {\n            return handlers.removeFiles(index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), !isUploading && uploadStatus && filesSubmitted && /*#__PURE__*/_jsxDEV(Button, {\n          icon: CheckCircleIcon,\n          variant: \"text\",\n          danger: false,\n          size: \"small\",\n          nestedClasses: {\n            btn: classes.iconSuccess\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), !uploadStatus && filesSubmitted && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            icon: ErrorOutlineIcon,\n            variant: \"text\",\n            danger: true,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('dms.upload.modalItems.retryUpload'),\n            onClick: function onClick() {\n              return handlers.retrySingleFile(index);\n            },\n            variant: \"text\",\n            size: \"small\",\n            color: \"secondary\",\n            nestedClasses: {\n              btn: classes.btnRetry\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, getFileKey(file), true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isPaymentType && /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isPaymentType,\n          timeout: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            my: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormDate, {\n                  label: utils.string.t('dms.upload.paymentDetails.paymentDate'),\n                  name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"[\").concat(index, \"].paymentDate\"),\n                  type: \"date\",\n                  outputFormat: \"iso\",\n                  muiComponentProps: {\n                    classes: {\n                      root: classes.datepicker\n                    },\n                    onChange: paymentDateInput()\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormText, {\n                  label: utils.string.t('dms.upload.paymentDetails.enterReference'),\n                  name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"[\").concat(index, \"].paymentReference\"),\n                  defaultValue: \"\",\n                  muiComponentProps: {\n                    onChange: paymentRefInput()\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormText, {\n                  name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"[\").concat(index, \"].lossPayee\"),\n                  label: utils.string.t('dms.upload.paymentDetails.enterName'),\n                  defaultValue: \"\",\n                  muiComponentProps: {\n                    onChange: lossPayeeInput()\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormText, {\n                  type: \"number\",\n                  name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"[\").concat(index, \"].amount\"),\n                  label: utils.string.t('dms.upload.paymentDetails.enterAmount'),\n                  defaultValue: \"\",\n                  muiComponentProps: {\n                    onChange: paymentAmountInput()\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, {\n                  label: utils.string.t('dms.upload.paymentDetails.selectCurrency'),\n                  name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"[\").concat(index, \"].currency\"),\n                  options: currencies,\n                  optionKey: \"id\",\n                  optionLabel: \"name\",\n                  value: (fileRowForm === null || fileRowForm === void 0 ? void 0 : (_fileRowForm$paymentF = fileRowForm.paymentFields) === null || _fileRowForm$paymentF === void 0 ? void 0 : _fileRowForm$paymentF.currency) || \"\",\n                  handleUpdate: function handleUpdate(name, value) {\n                    return paymentCurrencyInput(name, value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = DmsUploadFilesRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsUploadFilesRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DmsUploadFiles/DmsUploadFilesRow.view.js"],"names":["React","PropTypes","styles","TableCell","PopoverMenu","Button","FormText","Warning","Loader","FormGrid","FormDate","FormSelect","utils","constants","makeStyles","TableRow","Box","Collapse","ArrowDropDownIcon","CheckCircleIcon","ErrorOutlineIcon","HighlightOffIcon","DmsUploadFilesRowView","propTypes","index","number","file","any","getFileKey","func","docTypesActions","array","docClassificationTypesActions","currencies","fileRowForm","errors","shape","isDuplicateFileName","bool","isInvalidFileName","filesSubmitted","showDocTypeRequired","isUploading","uploadStatus","handlers","removeFiles","fileNameChange","retrySingleFile","paymentDateInput","paymentRefInput","lossPayeeInput","paymentAmountInput","paymentCurrencyInput","classes","name","isPaymentType","formDocType","label","DMS_DOCUMENT_TYPE_PAYMENT","root","cellWidth","formFileName","onChange","size","multiline","rows","rowsMax","string","t","vertical","horizontal","formDocClassificationType","btn","iconSuccess","btnRetry","paddingBottom","paddingTop","datepicker","paymentFields","currency","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './DmsUploadFilesRow.styles';\r\nimport { TableCell, PopoverMenu, Button, FormText, Warning, Loader, FormGrid, FormDate, FormSelect } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, TableRow, Box, Collapse } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nDmsUploadFilesRowView.propTypes = {\r\n  index: PropTypes.number,\r\n  file: PropTypes.any,\r\n  getFileKey: PropTypes.func,\r\n  docTypesActions: PropTypes.array,\r\n  docClassificationTypesActions: PropTypes.array,\r\n  currencies: PropTypes.array,\r\n  fileRowForm: PropTypes.any,\r\n  errors: PropTypes.shape({\r\n    isDuplicateFileName: PropTypes.bool,\r\n    isInvalidFileName: PropTypes.bool,\r\n  }),\r\n  filesSubmitted: PropTypes.bool,\r\n  showDocTypeRequired: PropTypes.bool,\r\n  isUploading: PropTypes.bool,\r\n  uploadStatus: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    removeFiles: PropTypes.func,\r\n    fileNameChange: PropTypes.func,\r\n    retrySingleFile: PropTypes.func,\r\n    paymentDateInput: PropTypes.func,\r\n    paymentRefInput: PropTypes.func,\r\n    lossPayeeInput: PropTypes.func,\r\n    paymentAmountInput: PropTypes.func,\r\n    paymentCurrencyInput: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function DmsUploadFilesRowView({\r\n  index,\r\n  file,\r\n  getFileKey,\r\n  docTypesActions,\r\n  docClassificationTypesActions,\r\n  currencies,\r\n  fileRowForm,\r\n  errors,\r\n  filesSubmitted,\r\n  showDocTypeRequired,\r\n  isUploading,\r\n  uploadStatus,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'DmsUploadFilesRow' })();\r\n\r\n  const { fileNameChange,\r\n    paymentDateInput, paymentRefInput, lossPayeeInput, paymentAmountInput, paymentCurrencyInput } = handlers;\r\n  const { isDuplicateFileName, isInvalidFileName } = errors;\r\n\r\n  const isPaymentType = fileRowForm?.formDocType?.label === constants.DMS_DOCUMENT_TYPE_PAYMENT;\r\n\r\n  return (\r\n    <>\r\n      <TableRow key={getFileKey(file)} className={classes.root}>\r\n        <TableCell className={classes.cellWidth}>\r\n\r\n          <FormText\r\n            type=\"textarea\"\r\n            name={`files${index}name`}\r\n            value={fileRowForm?.formFileName}\r\n            muiComponentProps={{\r\n              onChange: fileNameChange(),\r\n              size: 'small',\r\n              multiline: true,\r\n              rows: 1,\r\n              rowsMax: 6,\r\n            }}\r\n            compact={true}\r\n          />\r\n\r\n          {isDuplicateFileName && (\r\n            <Warning type=\"alert\" size=\"small\" align=\"left\" icon={ErrorOutlineIcon}\r\n              text={utils.string.t('dms.upload.warning.duplicateDocumentWarning')}\r\n            />\r\n          )}\r\n          {isInvalidFileName && (\r\n            <Warning type=\"error\" size=\"small\" align=\"left\" icon={ErrorOutlineIcon}\r\n              text={utils.string.t('dms.upload.warning.invalidInputWarning')}\r\n            />\r\n          )}\r\n\r\n        </TableCell>\r\n\r\n        <TableCell className={classes.cellWidth}>\r\n          <PopoverMenu\r\n            text={fileRowForm?.formDocType?.label || utils.string.t('dms.upload.modalItems.selectDocumentType')}\r\n            size=\"small\"\r\n            id={`files${index}`}\r\n            icon={ArrowDropDownIcon}\r\n            iconPosition=\"right\"\r\n            disabled={false}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            items={docTypesActions}\r\n          />\r\n\r\n          {showDocTypeRequired && !fileRowForm?.formDocType?.label && (\r\n            <Warning type=\"error\" size=\"small\" align=\"left\" icon={ErrorOutlineIcon}\r\n              text={utils.string.t('dms.upload.warning.emptyDocumentType')}\r\n            />\r\n          )}\r\n        </TableCell>\r\n\r\n        <TableCell className={classes.cellWidth}>\r\n          <PopoverMenu\r\n            id={`files${index}`}\r\n            text={fileRowForm?.formDocClassificationType?.label || docClassificationTypesActions[2]?.label}\r\n            icon={ArrowDropDownIcon}\r\n            iconPosition=\"right\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            items={docClassificationTypesActions}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell className={classes.cellWidth}>\r\n          <PopoverMenu\r\n            text={utils.string.t('dms.upload.modalItems.addTag')}\r\n            size=\"small\"\r\n            id=\"document-tags\"\r\n            icon={ArrowDropDownIcon}\r\n            iconPosition=\"right\"\r\n            disabled={false}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n            items={[]}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell className={classes.cellWidth}>\r\n\r\n          {isUploading && !filesSubmitted && (\r\n            <Loader visible={isUploading} inline />\r\n          )}\r\n\r\n          {!isUploading && !filesSubmitted && (\r\n            <Button icon={HighlightOffIcon} variant=\"text\" danger={false} size=\"small\"\r\n              onClick={() => handlers.removeFiles(index)} />\r\n          )}\r\n\r\n          {!isUploading && uploadStatus && filesSubmitted && (\r\n            <Button icon={CheckCircleIcon} variant=\"text\" danger={false} size=\"small\"\r\n              nestedClasses={{ btn: classes.iconSuccess }}\r\n            />\r\n          )}\r\n\r\n          {!uploadStatus && filesSubmitted && (\r\n            <>\r\n              <Button icon={ErrorOutlineIcon} variant=\"text\" danger={true} size=\"small\" />\r\n              <Button text={utils.string.t('dms.upload.modalItems.retryUpload')} onClick={() => handlers.retrySingleFile(index)}\r\n                variant=\"text\" size=\"small\" color=\"secondary\" nestedClasses={{ btn: classes.btnRetry }}\r\n              />\r\n            </>\r\n          )}\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      {/* PAYMENT ROW */}\r\n\r\n      {isPaymentType && (\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse\r\n              in={isPaymentType}\r\n              timeout=\"auto\"\r\n            >\r\n              <Box my={2}>\r\n                <FormGrid container spacing={2}>\r\n                  <FormGrid item xs={12} sm={2} md={2}>\r\n                    <FormDate\r\n                      label={utils.string.t('dms.upload.paymentDetails.paymentDate')}\r\n                      name={`${constants.DMS_DOCUMENT_TYPE_PAYMENT}[${index}].paymentDate`}\r\n                      type=\"date\"\r\n                      outputFormat=\"iso\"\r\n                      muiComponentProps={{\r\n                        classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                        onChange: paymentDateInput()\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={2} md={2}>\r\n                    <FormText\r\n                      label={utils.string.t('dms.upload.paymentDetails.enterReference')}\r\n                      name={`${constants.DMS_DOCUMENT_TYPE_PAYMENT}[${index}].paymentReference`}\r\n                      defaultValue=\"\"\r\n                      muiComponentProps={{\r\n                        onChange: paymentRefInput()\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={2} md={2}>\r\n                    <FormText\r\n                      name={`${constants.DMS_DOCUMENT_TYPE_PAYMENT}[${index}].lossPayee`}\r\n                      label={utils.string.t('dms.upload.paymentDetails.enterName')}\r\n                      defaultValue=\"\"\r\n                      muiComponentProps={{\r\n                        onChange: lossPayeeInput()\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={2} md={2}>\r\n                    <FormText\r\n                      type=\"number\"\r\n                      name={`${constants.DMS_DOCUMENT_TYPE_PAYMENT}[${index}].amount`}\r\n                      label={utils.string.t('dms.upload.paymentDetails.enterAmount')}\r\n                      defaultValue=\"\"\r\n                      muiComponentProps={{\r\n                        onChange: paymentAmountInput()\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={2} md={2}>\r\n                    <FormSelect\r\n                      label={utils.string.t('dms.upload.paymentDetails.selectCurrency')}\r\n                      name={`${constants.DMS_DOCUMENT_TYPE_PAYMENT}[${index}].currency`}\r\n                      options={currencies}\r\n                      optionKey=\"id\"\r\n                      optionLabel=\"name\"\r\n                      value={fileRowForm?.paymentFields?.currency || \"\"}\r\n                      handleUpdate={(name, value) => paymentCurrencyInput(name, value)}\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      )}\r\n    </>\r\n\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}