{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nimport get from 'lodash/get';\nexport var submitClaimDetailsInformation = function submitClaimDetailsInformation(_ref) {\n  var _ref$successCallback = _ref.successCallback,\n      successCallback = _ref$successCallback === void 0 ? function () {} : _ref$successCallback;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.submitClaimDetailsInformation'\n    };\n    var claimId = get(claims, 'claimsInformation.claimID');\n    dispatch(submitClaimDetailsInformationRequest(claimId));\n    dispatch(addLoader('submitClaimDetailsInformation'));\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/\".concat(claimId, \"/submit\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(submitClaimDetailsInformationSuccess(data.data));\n      dispatch(enqueueNotification('notification.submitClaimInformation.success', 'success', {\n        keepAfterUrlChange: true\n      }));\n      dispatch(removeLoader('submitClaimDetailsInformation'));\n      successCallback(data.data);\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(submitClaimDetailsInformationFailure(err));\n      dispatch(enqueueNotification('notification.submitClaimInformation.fail', 'error'));\n      dispatch(removeLoader('submitClaimDetailsInformation'));\n      return err;\n    });\n  };\n};\nexport var submitClaimDetailsInformationRequest = function submitClaimDetailsInformationRequest(data) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_REQUEST',\n    payload: data\n  };\n};\nexport var submitClaimDetailsInformationSuccess = function submitClaimDetailsInformationSuccess(responseData) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_SUCCESS',\n    payload: {\n      responseData: responseData,\n      claimStatus: 'Submitted'\n    }\n  };\n};\nexport var submitClaimDetailsInformationFailure = function submitClaimDetailsInformationFailure(error) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.submitClaimDetailsInformation.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","get","submitClaimDetailsInformation","successCallback","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","claimId","submitClaimDetailsInformationRequest","api","patch","token","accessToken","claimService","path","then","response","handleResponse","data","submitClaimDetailsInformationSuccess","keepAfterUrlChange","err","errorParams","message","handleError","handleUnauthorized","submitClaimDetailsInformationFailure","type","payload","responseData","claimStatus","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\nimport get from 'lodash/get';\r\n\r\nexport const submitClaimDetailsInformation = ({successCallback=()=>{}}) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.submitClaimDetailsInformation',\r\n  };\r\n\r\n  const claimId = get(claims, 'claimsInformation.claimID');\r\n\r\n  dispatch(submitClaimDetailsInformationRequest(claimId));\r\n  dispatch(addLoader('submitClaimDetailsInformation'));\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/${claimId}/submit`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(submitClaimDetailsInformationSuccess(data.data));\r\n      dispatch(enqueueNotification('notification.submitClaimInformation.success', 'success', {\r\n        keepAfterUrlChange: true\r\n      }));\r\n      dispatch(removeLoader('submitClaimDetailsInformation'));\r\n      successCallback(data.data);\r\n    }).catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(submitClaimDetailsInformationFailure(err));\r\n      dispatch(enqueueNotification('notification.submitClaimInformation.fail', 'error'));\r\n      dispatch(removeLoader('submitClaimDetailsInformation'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const submitClaimDetailsInformationRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const submitClaimDetailsInformationSuccess = (responseData) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_SUCCESS',\r\n    payload: { responseData, claimStatus: 'Submitted' },\r\n  };\r\n};\r\n\r\nexport const submitClaimDetailsInformationFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_SUBMIT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}