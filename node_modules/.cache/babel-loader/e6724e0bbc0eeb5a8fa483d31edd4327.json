{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var deletePlacementMarket = function deletePlacementMarket(placementMarketId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.deletePlacementMarket',\n      message: 'Data missing for DELETE request'\n    };\n    dispatch(deletePlacementMarketRequest(placementMarketId));\n    dispatch(addLoader('deletePlacementMarket'));\n\n    if (!placementMarketId) {\n      dispatch(deletePlacementMarketFailure(defaultError));\n      dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementMarket'));\n      return;\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placementMarket/\".concat(placementMarketId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json, true);\n    }).then(function () {\n      dispatch(deletePlacementMarketSuccess(placementMarketId));\n      dispatch(enqueueNotification('notification.deletePlacementMarket.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementMarket'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API delete error (placement.deletePlacementMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(deletePlacementMarketFailure(err));\n      dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementMarket'));\n      return err;\n    });\n  };\n};\nexport var deletePlacementMarketRequest = function deletePlacementMarketRequest(placementMarketId) {\n  return {\n    type: 'PLACEMENT_MARKET_DELETE_REQUEST',\n    payload: placementMarketId\n  };\n};\nexport var deletePlacementMarketSuccess = function deletePlacementMarketSuccess(placementMarketId) {\n  return {\n    type: 'PLACEMENT_MARKET_DELETE_SUCCESS',\n    payload: placementMarketId\n  };\n};\nexport var deletePlacementMarketFailure = function deletePlacementMarketFailure(error) {\n  return {\n    type: 'PLACEMENT_MARKET_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.deletePlacementMarket.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","deletePlacementMarket","placementMarketId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","deletePlacementMarketRequest","deletePlacementMarketFailure","api","token","accessToken","edge","path","then","response","handleResponse","json","handleData","deletePlacementMarketSuccess","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deletePlacementMarket = (placementMarketId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.deletePlacementMarket',\r\n    message: 'Data missing for DELETE request',\r\n  };\r\n\r\n  dispatch(deletePlacementMarketRequest(placementMarketId));\r\n  dispatch(addLoader('deletePlacementMarket'));\r\n\r\n  if (!placementMarketId) {\r\n    dispatch(deletePlacementMarketFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('deletePlacementMarket'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placementMarket/${placementMarketId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json, true))\r\n    .then(() => {\r\n      dispatch(deletePlacementMarketSuccess(placementMarketId));\r\n      dispatch(enqueueNotification('notification.deletePlacementMarket.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementMarket'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API delete error (placement.deletePlacementMarket)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(deletePlacementMarketFailure(err));\r\n      dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementMarket'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const deletePlacementMarketRequest = (placementMarketId) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_DELETE_REQUEST',\r\n    payload: placementMarketId,\r\n  };\r\n};\r\n\r\nexport const deletePlacementMarketSuccess = (placementMarketId) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_DELETE_SUCCESS',\r\n    payload: placementMarketId,\r\n  };\r\n};\r\n\r\nexport const deletePlacementMarketFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}