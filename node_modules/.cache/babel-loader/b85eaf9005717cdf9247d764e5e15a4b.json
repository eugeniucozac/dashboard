{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DepartmentMarkets\\\\DepartmentMarkets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport toNumber from 'lodash/toNumber';\nimport get from 'lodash/get'; // app\n\nimport { DepartmentMarketsView } from './DepartmentMarkets.view';\nimport { getDepartmentMarkets, deleteDepartmentMarket, showModal, selectDepartmentMarketsItems, selectRefDataCapacityTypes, selectFormattedAccountStatusList } from 'stores';\nimport { Translate } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DepartmentMarkets() {\n  _s();\n\n  var dispatch = useDispatch();\n  var params = useParams();\n  var departmentMarketsItems = useSelector(selectDepartmentMarketsItems);\n  var refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\n  var refDataAccountStatuses = useSelector(selectFormattedAccountStatusList);\n  var urlDepartmentId = toNumber(get(params, 'id'));\n  var modalProps = {\n    fullWidth: true,\n    maxWidth: 'md'\n  };\n  var marketGroups = [].concat(_toConsumableArray(refDataCapacityTypes), [{\n    name: utils.string.t('market.noCapacityMarkets')\n  }]).map(function (type) {\n    type.markets = departmentMarketsItems.filter(function (market) {\n      return type.id ? get(market, 'market.capacityTypeId') === type.id : !Boolean(get(market, 'market.capacityTypeId'));\n    });\n    return type;\n  }).filter(function (type) {\n    return utils.generic.isValidArray(type.markets, true);\n  });\n  useEffect(function () {\n    dispatch(getDepartmentMarkets(urlDepartmentId));\n  }, [urlDepartmentId] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleAddDepartmentMarket = function handleAddDepartmentMarket(data) {\n    return function (event) {\n      dispatch(showModal({\n        component: 'ADD_DEPARTMENT_MARKET',\n        props: _objectSpread(_objectSpread({}, modalProps), {}, {\n          title: 'market.addMarket',\n          componentProps: data\n        })\n      }));\n    };\n  };\n\n  var handleEditDepartmentMarket = function handleEditDepartmentMarket(popoverData) {\n    dispatch(showModal({\n      component: 'EDIT_DEPARTMENT_MARKET',\n      props: _objectSpread(_objectSpread({}, modalProps), {}, {\n        title: 'market.editMarket',\n        componentProps: popoverData\n      })\n    }));\n  };\n\n  var handleDeleteDepartmentMarket = function handleDeleteDepartmentMarket(popoverData) {\n    dispatch(showModal({\n      component: 'CONFIRM_DELETE',\n      props: _objectSpread(_objectSpread({}, modalProps), {}, {\n        title: 'market.deleteMarket',\n        maxWidth: 'xs',\n        componentProps: {\n          submitHandler: function submitHandler() {\n            dispatch(deleteDepartmentMarket(get(popoverData, 'market.id')));\n          }\n        }\n      })\n    }));\n  };\n\n  var cols = [{\n    id: 'name',\n    title: true,\n    style: {\n      width: '50%'\n    }\n  }, {\n    id: 'underwriter',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"market.cols.underwriterName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }, this),\n    style: {\n      width: '25%'\n    }\n  }, {\n    id: 'email',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"market.cols.underwriterEmail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }, this),\n    style: {\n      width: '25%'\n    }\n  }, {\n    id: 'actions',\n    empty: true\n  }];\n  var popoverActions = [{\n    id: 'edit-department-market',\n    label: 'market.actions.edit',\n    callback: function callback(popoverData) {\n      return handleEditDepartmentMarket(popoverData);\n    }\n  }, {\n    id: 'delete-department-market',\n    label: 'market.actions.delete',\n    callback: function callback(popoverData) {\n      return handleDeleteDepartmentMarket(popoverData);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(DepartmentMarketsView, {\n    items: departmentMarketsItems,\n    groups: marketGroups,\n    cols: cols,\n    deptId: urlDepartmentId,\n    marketAccountStatuses: refDataAccountStatuses,\n    popoverActions: popoverActions,\n    handlers: {\n      addDepartmentMarket: handleAddDepartmentMarket\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartmentMarkets, \"uQF83fNoTwpKu7My3mE6DfNKU/g=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useSelector];\n});\n\n_c = DepartmentMarkets;\nDepartmentMarkets.displayName = \"DepartmentMarkets\";\nDepartmentMarkets.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DepartmentMarkets\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\DepartmentMarkets\\\\DepartmentMarkets.js\"] = {\n    name: \"DepartmentMarkets\",\n    docgenInfo: DepartmentMarkets.__docgenInfo,\n    path: \"src\\\\modules\\\\DepartmentMarkets\\\\DepartmentMarkets.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentMarkets\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DepartmentMarkets/DepartmentMarkets.js"],"names":["React","useEffect","useSelector","useDispatch","useParams","toNumber","get","DepartmentMarketsView","getDepartmentMarkets","deleteDepartmentMarket","showModal","selectDepartmentMarketsItems","selectRefDataCapacityTypes","selectFormattedAccountStatusList","Translate","utils","DepartmentMarkets","dispatch","params","departmentMarketsItems","refDataCapacityTypes","refDataAccountStatuses","urlDepartmentId","modalProps","fullWidth","maxWidth","marketGroups","name","string","t","map","type","markets","filter","market","id","Boolean","generic","isValidArray","handleAddDepartmentMarket","data","event","component","props","title","componentProps","handleEditDepartmentMarket","popoverData","handleDeleteDepartmentMarket","submitHandler","cols","style","width","label","empty","popoverActions","callback","addDepartmentMarket"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport toNumber from 'lodash/toNumber';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { DepartmentMarketsView } from './DepartmentMarkets.view';\r\nimport {\r\n  getDepartmentMarkets,\r\n  deleteDepartmentMarket,\r\n  showModal,\r\n  selectDepartmentMarketsItems,\r\n  selectRefDataCapacityTypes,\r\n  selectFormattedAccountStatusList,\r\n} from 'stores';\r\nimport { Translate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nexport default function DepartmentMarkets() {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const departmentMarketsItems = useSelector(selectDepartmentMarketsItems);\r\n  const refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\r\n  const refDataAccountStatuses = useSelector(selectFormattedAccountStatusList);\r\n\r\n  const urlDepartmentId = toNumber(get(params, 'id'));\r\n  const modalProps = {\r\n    fullWidth: true,\r\n    maxWidth: 'md',\r\n  };\r\n\r\n  const marketGroups = [...refDataCapacityTypes, { name: utils.string.t('market.noCapacityMarkets') }]\r\n    .map((type) => {\r\n      type.markets = departmentMarketsItems.filter((market) => {\r\n        return type.id ? get(market, 'market.capacityTypeId') === type.id : !Boolean(get(market, 'market.capacityTypeId'));\r\n      });\r\n\r\n      return type;\r\n    })\r\n    .filter((type) => utils.generic.isValidArray(type.markets, true));\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getDepartmentMarkets(urlDepartmentId));\r\n    },\r\n    [urlDepartmentId] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleAddDepartmentMarket = (data) => (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_DEPARTMENT_MARKET',\r\n        props: {\r\n          ...modalProps,\r\n          title: 'market.addMarket',\r\n          componentProps: data,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditDepartmentMarket = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_DEPARTMENT_MARKET',\r\n        props: {\r\n          ...modalProps,\r\n          title: 'market.editMarket',\r\n          componentProps: popoverData,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteDepartmentMarket = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM_DELETE',\r\n        props: {\r\n          ...modalProps,\r\n          title: 'market.deleteMarket',\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            submitHandler: () => {\r\n              dispatch(deleteDepartmentMarket(get(popoverData, 'market.id')));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const cols = [\r\n    { id: 'name', title: true, style: { width: '50%' } },\r\n    { id: 'underwriter', label: <Translate label=\"market.cols.underwriterName\" />, style: { width: '25%' } },\r\n    { id: 'email', label: <Translate label=\"market.cols.underwriterEmail\" />, style: { width: '25%' } },\r\n    { id: 'actions', empty: true },\r\n  ];\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'edit-department-market',\r\n      label: 'market.actions.edit',\r\n      callback: (popoverData) => handleEditDepartmentMarket(popoverData),\r\n    },\r\n    {\r\n      id: 'delete-department-market',\r\n      label: 'market.actions.delete',\r\n      callback: (popoverData) => handleDeleteDepartmentMarket(popoverData),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <DepartmentMarketsView\r\n      items={departmentMarketsItems}\r\n      groups={marketGroups}\r\n      cols={cols}\r\n      deptId={urlDepartmentId}\r\n      marketAccountStatuses={refDataAccountStatuses}\r\n      popoverActions={popoverActions}\r\n      handlers={{\r\n        addDepartmentMarket: handleAddDepartmentMarket,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}