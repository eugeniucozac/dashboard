{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, enqueueNotification } from 'stores';\nexport var getCaseTeamDetails = function getCaseTeamDetails(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var queryParam = {\n      bpmTaskID: params === null || params === void 0 ? void 0 : params.taskId,\n      taskView: params.taskView\n    };\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.getCaseTeamDetails'\n    };\n    dispatch(getCaseTeamDetailsRequest(params));\n    dispatch(getCaseTeamLoading(true));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/task/details',\n      params: queryParam\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var _data$data;\n\n      // check that response is valid\n      // sometimes API fails and return an empty array instead of object\n      if (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.bpmTaskId) {\n        return data;\n      } else {\n        return Promise.reject({\n          message: 'Invalid task object returned by API'\n        });\n      }\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (getCaseTeamDetails)'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      dispatch(getCaseTeamDetailsFailure(error));\n      dispatch(enqueueNotification('premiumProcessing.caseDetailsResponseError', 'error'));\n      return error;\n    }).finally(function () {\n      dispatch(getCaseTeamLoading(false));\n    });\n  };\n};\nexport var getCaseTeamDetailsRequest = function getCaseTeamDetailsRequest(params) {\n  return {\n    type: 'CASE_TEAM_DETAILS_REQUEST',\n    payload: params\n  };\n};\nexport var getCaseTeamDetailsSuccess = function getCaseTeamDetailsSuccess(caseTeamList, caseId) {\n  return {\n    type: 'CASE_TEAM_DETAILS_SUCCESS',\n    payload: caseTeamList\n  };\n};\nexport var getCaseTeamDetailsFailure = function getCaseTeamDetailsFailure(error) {\n  return {\n    type: 'CASE_TEAM_DETAILS_FAILURE',\n    payload: error\n  };\n};\nexport var getCaseTeamLoading = function getCaseTeamLoading(loading) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_LOADING',\n    payload: loading\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getCaseTeamDetails.js"],"names":["utils","authLogout","enqueueNotification","getCaseTeamDetails","params","dispatch","getState","auth","user","endpoint","config","vars","queryParam","bpmTaskID","taskId","taskView","defaultError","file","getCaseTeamDetailsRequest","getCaseTeamLoading","api","get","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","data","bpmTaskId","Promise","reject","message","catch","error","handleError","handleUnauthorized","getCaseTeamDetailsFailure","finally","type","payload","getCaseTeamDetailsSuccess","caseTeamList","caseId","loading"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, enqueueNotification } from 'stores';\r\n\r\nexport const getCaseTeamDetails = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const queryParam = {\r\n    bpmTaskID: params?.taskId,\r\n    taskView: params.taskView,\r\n  };\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.getCaseTeamDetails',\r\n  };\r\n\r\n  dispatch(getCaseTeamDetailsRequest(params));\r\n  dispatch(getCaseTeamLoading(true));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/task/details',\r\n      params: queryParam,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      // check that response is valid\r\n      // sometimes API fails and return an empty array instead of object\r\n      if (data?.data?.bpmTaskId) {\r\n        return data;\r\n      } else {\r\n        return Promise.reject({ message: 'Invalid task object returned by API' });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (getCaseTeamDetails)' });\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      dispatch(getCaseTeamDetailsFailure(error));\r\n      dispatch(enqueueNotification('premiumProcessing.caseDetailsResponseError', 'error'));\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(getCaseTeamLoading(false));\r\n    });\r\n};\r\n\r\nexport const getCaseTeamDetailsRequest = (params) => {\r\n  return {\r\n    type: 'CASE_TEAM_DETAILS_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getCaseTeamDetailsSuccess = (caseTeamList, caseId) => {\r\n  return {\r\n    type: 'CASE_TEAM_DETAILS_SUCCESS',\r\n    payload: caseTeamList,\r\n  };\r\n};\r\n\r\nexport const getCaseTeamDetailsFailure = (error) => {\r\n  return {\r\n    type: 'CASE_TEAM_DETAILS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\nexport const getCaseTeamLoading = (loading) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_LOADING',\r\n    payload: loading,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}