{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsFacility\\\\EditFacilityLimits.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup'; // app\n\nimport styles from './EditProductsFacility.styles';\nimport { Button, FormActions, FormFields, FormGrid, Tabs, FormContainer } from 'components';\nimport { AddLimitsRow } from 'modules';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditFacilityLimitsView.propTypes = {\n  actions: PropTypes.array.isRequired,\n  facilityLimitFields: PropTypes.array,\n  defaultFacilityLimits: PropTypes.object\n};\nexport function EditFacilityLimitsView(_ref) {\n  _s();\n\n  var _facilityLimitFields$,\n      _this = this;\n\n  var actions = _ref.actions,\n      facilityLimitFields = _ref.facilityLimitFields,\n      defaultFacilityLimits = _ref.defaultFacilityLimits;\n  var classes = makeStyles(styles, {\n    name: 'EditProductsFacility'\n  })();\n\n  var _useState = useState(((_facilityLimitFields$ = facilityLimitFields[0]) === null || _facilityLimitFields$ === void 0 ? void 0 : _facilityLimitFields$.label) || ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var tabs = facilityLimitFields === null || facilityLimitFields === void 0 ? void 0 : facilityLimitFields.map(function (item, index) {\n    return {\n      value: item.name,\n      label: item.label\n    };\n  });\n  var validationLimit = Yup.number().nullable().transform(function (value) {\n    return Number.isNaN(value) ? null : value;\n  }).required(utils.string.t('validation.required'));\n  var validationAlert = Yup.number().nullable().min(10).max(99).transform(function (value) {\n    return Number.isNaN(value) ? null : value;\n  }).required(utils.string.t('validation.required'));\n  var limitsFields = utils.risk.parseFacilityLimits(defaultFacilityLimits === null || defaultFacilityLimits === void 0 ? void 0 : defaultFacilityLimits.fieldLimits, facilityLimitFields) || [];\n  var fields = [{\n    name: 'limits',\n    type: 'array',\n    arrayDefaultValues: limitsFields,\n    arrayItemDef: [{\n      name: 'fieldName',\n      type: 'hidden'\n    }, {\n      name: 'label',\n      type: 'hidden'\n    }, {\n      name: 'qualifier',\n      type: 'hidden'\n    }, {\n      name: 'limitFieldOptions',\n      type: 'autocompletemui',\n      label: selectedTab,\n      value: null,\n      width: 30\n    }, {\n      name: 'limit',\n      type: 'number',\n      label: utils.string.t('products.admin.facilities.limit'),\n      value: 0,\n      defaultValue: 0\n    }, {\n      name: 'alert',\n      type: 'number',\n      label: utils.string.t('products.admin.facilities.alert'),\n      value: 0,\n      defaultValue: 0\n    }],\n    validation: Yup.array().of(Yup.object().shape({\n      limitFieldOptions: Yup.object().typeError(utils.string.t('validation.required')).required(utils.string.t('validation.required')),\n      limit: validationLimit,\n      alert: validationAlert\n    }))\n  }];\n  var defaultValues = {\n    limits: _toConsumableArray(limitsFields)\n  };\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  }), {}, {\n    shouldUnregister: false\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      formState = _useForm.formState,\n      handleSubmit = _useForm.handleSubmit,\n      trigger = _useForm.trigger;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var handleChange = function handleChange(val) {\n    var _facilityLimitFields$2;\n\n    var currentTabLabel = facilityLimitFields === null || facilityLimitFields === void 0 ? void 0 : (_facilityLimitFields$2 = facilityLimitFields.find(function (item, index) {\n      return item.name === val;\n    })) === null || _facilityLimitFields$2 === void 0 ? void 0 : _facilityLimitFields$2.label;\n    setSelectedTab(currentTabLabel);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: (facilityLimitFields === null || facilityLimitFields === void 0 ? void 0 : facilityLimitFields.length) > 0 ? /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                tabs: tabs,\n                light: false,\n                compact: false,\n                swipeable: false,\n                onChange: handleChange,\n                children: tabs.map(function (tab, index) {\n                  var field = JSON.parse(JSON.stringify(utils.form.getFieldProps(fields, 'limits')));\n                  var facilityLimits = facilityLimitFields === null || facilityLimitFields === void 0 ? void 0 : facilityLimitFields.find(function (obj) {\n                    return obj.name === tab.value;\n                  });\n                  field.arrayItemDef[3].options = _toConsumableArray(facilityLimits === null || facilityLimits === void 0 ? void 0 : facilityLimits.options);\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    value: tab.value,\n                    children: /*#__PURE__*/_jsxDEV(AddLimitsRow, {\n                      field: field,\n                      formProps: {\n                        control: control,\n                        register: register,\n                        watch: watch,\n                        errors: errors,\n                        setValue: setValue,\n                        trigger: trigger\n                      },\n                      limitFieldOptions: facilityLimits === null || facilityLimits === void 0 ? void 0 : facilityLimits.options,\n                      fieldName: tab.value,\n                      label: tab.label,\n                      qualifier: facilityLimits === null || facilityLimits === void 0 ? void 0 : facilityLimits.qualifier,\n                      overflow: false,\n                      removeLastField: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, _this)\n                  }, \"\".concat(tab.value, \"-\").concat(index), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 24\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        style: {\n          fontWeight: 500,\n          color: 'darkgray',\n          marginLeft: '25%',\n          marginTop: '20px',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: utils.string.t('products.admin.facilities.noLimitsFields')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditFacilityLimitsView, \"t+zmIYVv5ExT7AXkdHLDSji+cR8=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = EditFacilityLimitsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFacilityLimitsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsFacility/EditFacilityLimits.view.js"],"names":["React","useState","PropTypes","useForm","yupResolver","Yup","styles","Button","FormActions","FormFields","FormGrid","Tabs","FormContainer","AddLimitsRow","useFormActions","utils","makeStyles","Box","Typography","EditFacilityLimitsView","propTypes","actions","array","isRequired","facilityLimitFields","defaultFacilityLimits","object","classes","name","label","selectedTab","setSelectedTab","tabs","map","item","index","value","validationLimit","number","nullable","transform","Number","isNaN","required","string","t","validationAlert","min","max","limitsFields","risk","parseFacilityLimits","fieldLimits","fields","type","arrayDefaultValues","arrayItemDef","width","defaultValue","validation","of","shape","limitFieldOptions","typeError","limit","alert","defaultValues","limits","validationSchema","form","getValidationSchema","resolver","shouldUnregister","control","register","reset","watch","errors","setValue","formState","handleSubmit","trigger","cancel","submit","handleChange","val","currentTabLabel","find","root","length","tab","field","JSON","parse","stringify","getFieldProps","facilityLimits","obj","options","qualifier","isSubmitting","handler","fontWeight","color","marginLeft","marginTop","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport styles from './EditProductsFacility.styles';\r\nimport { Button, FormActions, FormFields, FormGrid, Tabs, FormContainer } from 'components';\r\nimport { AddLimitsRow } from 'modules';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Typography } from '@material-ui/core';\r\n\r\nEditFacilityLimitsView.propTypes = {\r\n  actions: PropTypes.array.isRequired,\r\n  facilityLimitFields: PropTypes.array,\r\n  defaultFacilityLimits: PropTypes.object,\r\n};\r\n\r\nexport function EditFacilityLimitsView({ actions, facilityLimitFields, defaultFacilityLimits }) {\r\n  const classes = makeStyles(styles, { name: 'EditProductsFacility' })();\r\n  const [selectedTab, setSelectedTab] = useState(facilityLimitFields[0]?.label || '');\r\n  const tabs = facilityLimitFields?.map((item, index) => {\r\n    return {\r\n      value: item.name,\r\n      label: item.label,\r\n    };\r\n  });\r\n\r\n  const validationLimit = Yup.number()\r\n    .nullable()\r\n    .transform((value) => (Number.isNaN(value) ? null : value))\r\n    .required(utils.string.t('validation.required'));\r\n\r\n  const validationAlert = Yup.number()\r\n    .nullable()\r\n    .min(10)\r\n    .max(99)\r\n    .transform((value) => (Number.isNaN(value) ? null : value))\r\n    .required(utils.string.t('validation.required'));\r\n\r\n  const limitsFields = utils.risk.parseFacilityLimits(defaultFacilityLimits?.fieldLimits, facilityLimitFields) || [];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'limits',\r\n      type: 'array',\r\n      arrayDefaultValues: limitsFields,\r\n      arrayItemDef: [\r\n        {\r\n          name: 'fieldName',\r\n          type: 'hidden',\r\n        },\r\n        {\r\n          name: 'label',\r\n          type: 'hidden',\r\n        },\r\n        {\r\n          name: 'qualifier',\r\n          type: 'hidden',\r\n        },\r\n        {\r\n          name: 'limitFieldOptions',\r\n          type: 'autocompletemui',\r\n          label: selectedTab,\r\n          value: null,\r\n          width: 30,\r\n        },\r\n        {\r\n          name: 'limit',\r\n          type: 'number',\r\n          label: utils.string.t('products.admin.facilities.limit'),\r\n          value: 0,\r\n          defaultValue: 0,\r\n        },\r\n        {\r\n          name: 'alert',\r\n          type: 'number',\r\n          label: utils.string.t('products.admin.facilities.alert'),\r\n          value: 0,\r\n          defaultValue: 0,\r\n        },\r\n      ],\r\n      validation: Yup.array().of(\r\n        Yup.object().shape({\r\n          limitFieldOptions: Yup.object().typeError(utils.string.t('validation.required')).required(utils.string.t('validation.required')),\r\n          limit: validationLimit,\r\n          alert: validationAlert,\r\n        })\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const defaultValues = {\r\n    limits: [...limitsFields],\r\n  };\r\n\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, register, reset, watch, errors, setValue, formState, handleSubmit, trigger } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n    shouldUnregister: false,\r\n  });\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  const handleChange = (val) => {\r\n    const currentTabLabel = facilityLimitFields?.find((item, index) => item.name === val)?.label;\r\n    setSelectedTab(currentTabLabel);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {facilityLimitFields?.length > 0 ? (\r\n        <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit)} autoComplete=\"off\">\r\n          <FormFields type=\"dialog\">\r\n            <FormGrid container>\r\n              <FormGrid item xs={12}>\r\n                <Box>\r\n                  <Tabs tabs={tabs} light={false} compact={false} swipeable={false} onChange={handleChange}>\r\n                    {tabs.map((tab, index) => {\r\n                      const field = JSON.parse(JSON.stringify(utils.form.getFieldProps(fields, 'limits')));\r\n                      const facilityLimits = facilityLimitFields?.find((obj) => obj.name === tab.value);\r\n                      field.arrayItemDef[3].options = [...facilityLimits?.options];\r\n\r\n                      return (\r\n                        <Box value={tab.value} key={`${tab.value}-${index}`}>\r\n                          <AddLimitsRow\r\n                            field={field}\r\n                            formProps={{ control, register, watch, errors, setValue, trigger }}\r\n                            limitFieldOptions={facilityLimits?.options}\r\n                            fieldName={tab.value}\r\n                            label={tab.label}\r\n                            qualifier={facilityLimits?.qualifier}\r\n                            overflow={false}\r\n                            removeLastField={true}\r\n                          />\r\n                        </Box>\r\n                      );\r\n                    })}\r\n                  </Tabs>\r\n                </Box>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormFields>\r\n          <FormActions type=\"dialog\">\r\n            {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n            {submit && (\r\n              <Button\r\n                text={submit.label}\r\n                type=\"submit\"\r\n                disabled={formState.isSubmitting}\r\n                onClick={handleSubmit(submit.handler)}\r\n                color=\"primary\"\r\n              />\r\n            )}\r\n          </FormActions>\r\n        </FormContainer>\r\n      ) : (\r\n        <FormGrid item xs={12}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            style={{\r\n              fontWeight: 500,\r\n              color: 'darkgray',\r\n              marginLeft: '25%',\r\n              marginTop: '20px',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {utils.string.t('products.admin.facilities.noLimitsFields')}\r\n          </Typography>\r\n        </FormGrid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}