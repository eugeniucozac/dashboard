{"ast":null,"code":"import \"core-js/modules/es.array.map\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddPlacementLayerMarket\\\\AddPlacementLayerMarket.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport get from 'lodash/get'; // app\n\nimport { AddPlacementLayerMarketView } from './AddPlacementLayerMarket.view';\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\nimport { postPlacementAddLayerMarket, selectFormattedAccountStatusList, showModal, duplicateLine } from 'stores';\nimport { ROLE_BROKER } from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAddPlacementLayerMarket.propTypes = {\n  layer: PropTypes.object.isRequired,\n  placementMarkets: PropTypes.array.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  isDuplicateMarket: PropTypes.bool,\n  line: PropTypes.object\n};\nexport default function AddPlacementLayerMarket(_ref) {\n  _s();\n\n  var _this = this;\n\n  var layer = _ref.layer,\n      _ref$placementMarkets = _ref.placementMarkets,\n      placementMarkets = _ref$placementMarkets === void 0 ? [] : _ref$placementMarkets,\n      handleClose = _ref.handleClose,\n      _ref$isDuplicateMarke = _ref.isDuplicateMarket,\n      isDuplicateMarket = _ref$isDuplicateMarke === void 0 ? false : _ref$isDuplicateMarke,\n      _ref$line = _ref.line,\n      line = _ref$line === void 0 ? {} : _ref$line;\n  var dispatch = useDispatch();\n  var formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\n\n  var filterMarketsInUse = function filterMarketsInUse(markets) {\n    var marketsAlreadyUsed = get(layer, 'markets', []).map(function (m) {\n      return get(m, 'market.id');\n    });\n    var filteredMarkets = markets.filter(function (item) {\n      return !marketsAlreadyUsed.includes(get(item, 'market.id'));\n    });\n    return utils.sort.arrayNestedPropertyValue(filteredMarkets, 'market.edgeName', 'asc');\n  };\n\n  var lineId = line === null || line === void 0 ? void 0 : line.id;\n\n  var getMarketDetail = function getMarketDetail(_ref2) {\n    var gxbBeReference = _ref2.gxbBeReference,\n        address = _ref2.address;\n    var addressStr = utils.market.getAddress(address);\n    if (!gxbBeReference && !addressStr) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [gxbBeReference && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('placement.generic.gxbBeReference'), \": \", gxbBeReference, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, _this), addressStr && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('app.address'), \": \", addressStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var getOptionLabel = function getOptionLabel(option) {\n    return utils.market.getName(option);\n  };\n\n  var renderOption = function renderOption(_ref3) {\n    var market = _ref3.market;\n    var marketDetail = getMarketDetail(market);\n    return /*#__PURE__*/_jsxDEV(OptionDetail, {\n      label: market.edgeName,\n      detail: marketDetail,\n      children: /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [ROLE_BROKER],\n        children: /*#__PURE__*/_jsxDEV(StatusIcon, {\n          translationPath: \"statusMarket\",\n          list: formattedAccountStatusList,\n          id: market.statusId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var sortOptions = function sortOptions(options) {\n    var orderBy = formattedAccountStatusList.map(function (status) {\n      return status.id;\n    });\n    return options.sort(function (a, b) {\n      return orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId);\n    });\n  };\n\n  var handleEditPlacementMarketsLayers = function handleEditPlacementMarketsLayers(props) {\n    dispatch(showModal({\n      component: 'EDIT_PLACEMENT_MARKETS_LAYERS',\n      props: {\n        fullWidth: false,\n        maxWidth: 'lg',\n        title: 'placement.marketing.manageMarket',\n        componentProps: {\n          placementLayer: props.placementLayer,\n          placementMarket: props.placementMarket\n        }\n      }\n    }));\n  };\n\n  var findPlacementMarket = function findPlacementMarket(marketId) {\n    return placementMarkets.find(function (m) {\n      var _m$market;\n\n      return ((_m$market = m.market) === null || _m$market === void 0 ? void 0 : _m$market.id) === marketId;\n    });\n  };\n\n  var fields = [{\n    name: 'placementlayerId',\n    type: 'hidden',\n    value: layer.id\n  }, {\n    name: 'market',\n    type: 'autocompletemui',\n    label: utils.string.t('market.fields.market') || '',\n    hint: isDuplicateMarket ? utils.string.t('placement.marketing.fields.markets.hint') : null,\n    value: null,\n    options: sortOptions(filterMarketsInUse(placementMarkets)),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      autoFocus: true,\n      getOptionLabel: getOptionLabel,\n      renderOption: renderOption\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'secondary',\n    label: utils.string.t('app.saveEdit'),\n    handler: function handler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return isDuplicateMarket ? dispatch(duplicateLine.apply(void 0, [lineId].concat(args))).then(function (res) {\n        var _res$market;\n\n        var marketId = res === null || res === void 0 ? void 0 : (_res$market = res.market) === null || _res$market === void 0 ? void 0 : _res$market.id;\n        var placementMarket = findPlacementMarket(marketId);\n\n        if (marketId) {\n          handleEditPlacementMarketsLayers({\n            placementLayer: layer,\n            placementMarket: placementMarket\n          });\n        }\n      }) : dispatch(postPlacementAddLayerMarket.apply(void 0, args)).then(function (res) {\n        var _res$market2;\n\n        var marketId = res === null || res === void 0 ? void 0 : (_res$market2 = res.market) === null || _res$market2 === void 0 ? void 0 : _res$market2.id;\n        var placementMarket = findPlacementMarket(marketId);\n        handleEditPlacementMarketsLayers({\n          placementLayer: layer,\n          placementMarket: placementMarket\n        });\n      });\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.saveClose'),\n    handler: function handler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (isDuplicateMarket) {\n        return dispatch(duplicateLine.apply(void 0, [lineId].concat(args)));\n      }\n\n      return dispatch(postPlacementAddLayerMarket.apply(void 0, args));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(AddPlacementLayerMarketView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddPlacementLayerMarket, \"iK8Bi2ns65MdLxnFtDqEIZ7XCRI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddPlacementLayerMarket;\nAddPlacementLayerMarket.displayName = \"AddPlacementLayerMarket\";\nAddPlacementLayerMarket.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddPlacementLayerMarket\",\n  \"props\": {\n    \"placementMarkets\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDuplicateMarket\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"line\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"layer\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddPlacementLayerMarket\\\\AddPlacementLayerMarket.js\"] = {\n    name: \"AddPlacementLayerMarket\",\n    docgenInfo: AddPlacementLayerMarket.__docgenInfo,\n    path: \"src\\\\forms\\\\AddPlacementLayerMarket\\\\AddPlacementLayerMarket.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacementLayerMarket\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddPlacementLayerMarket/AddPlacementLayerMarket.js"],"names":["React","PropTypes","useDispatch","useSelector","Yup","get","AddPlacementLayerMarketView","StatusIcon","Restricted","OptionDetail","postPlacementAddLayerMarket","selectFormattedAccountStatusList","showModal","duplicateLine","ROLE_BROKER","utils","AddPlacementLayerMarket","propTypes","layer","object","isRequired","placementMarkets","array","handleClose","func","isDuplicateMarket","bool","line","dispatch","formattedAccountStatusList","filterMarketsInUse","markets","marketsAlreadyUsed","map","m","filteredMarkets","filter","item","includes","sort","arrayNestedPropertyValue","lineId","id","getMarketDetail","gxbBeReference","address","addressStr","market","getAddress","string","t","getOptionLabel","option","getName","renderOption","marketDetail","edgeName","statusId","sortOptions","options","orderBy","status","a","b","indexOf","handleEditPlacementMarketsLayers","props","component","fullWidth","maxWidth","title","componentProps","placementLayer","placementMarket","findPlacementMarket","marketId","find","fields","name","type","value","label","hint","validation","nullable","required","muiComponentProps","autoFocus","actions","handler","args","then","res"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { AddPlacementLayerMarketView } from './AddPlacementLayerMarket.view';\r\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\r\nimport { postPlacementAddLayerMarket, selectFormattedAccountStatusList, showModal, duplicateLine } from 'stores';\r\nimport { ROLE_BROKER } from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nAddPlacementLayerMarket.propTypes = {\r\n  layer: PropTypes.object.isRequired,\r\n  placementMarkets: PropTypes.array.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  isDuplicateMarket: PropTypes.bool,\r\n  line: PropTypes.object,\r\n};\r\n\r\nexport default function AddPlacementLayerMarket({ layer, placementMarkets = [], handleClose, isDuplicateMarket = false, line = {} }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\r\n\r\n  const filterMarketsInUse = (markets) => {\r\n    const marketsAlreadyUsed = get(layer, 'markets', []).map((m) => get(m, 'market.id'));\r\n\r\n    const filteredMarkets = markets.filter((item) => {\r\n      return !marketsAlreadyUsed.includes(get(item, 'market.id'));\r\n    });\r\n\r\n    return utils.sort.arrayNestedPropertyValue(filteredMarkets, 'market.edgeName', 'asc');\r\n  };\r\n  const lineId = line?.id;\r\n\r\n  const getMarketDetail = ({ gxbBeReference, address }) => {\r\n    const addressStr = utils.market.getAddress(address);\r\n    if (!gxbBeReference && !addressStr) return;\r\n\r\n    return (\r\n      <>\r\n        {gxbBeReference && (\r\n          <span>\r\n            {utils.string.t('placement.generic.gxbBeReference')}: {gxbBeReference}\r\n            <br />\r\n          </span>\r\n        )}\r\n        {addressStr && (\r\n          <span>\r\n            {utils.string.t('app.address')}: {addressStr}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getOptionLabel = (option) => {\r\n    return utils.market.getName(option);\r\n  };\r\n\r\n  const renderOption = ({ market }) => {\r\n    const marketDetail = getMarketDetail(market);\r\n\r\n    return (\r\n      <OptionDetail label={market.edgeName} detail={marketDetail}>\r\n        <Restricted include={[ROLE_BROKER]}>\r\n          <StatusIcon translationPath=\"statusMarket\" list={formattedAccountStatusList} id={market.statusId} />\r\n        </Restricted>\r\n      </OptionDetail>\r\n    );\r\n  };\r\n\r\n  const sortOptions = (options) => {\r\n    const orderBy = formattedAccountStatusList.map((status) => status.id);\r\n\r\n    return options.sort((a, b) => orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId));\r\n  };\r\n\r\n  const handleEditPlacementMarketsLayers = (props) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_PLACEMENT_MARKETS_LAYERS',\r\n        props: {\r\n          fullWidth: false,\r\n          maxWidth: 'lg',\r\n          title: 'placement.marketing.manageMarket',\r\n          componentProps: {\r\n            placementLayer: props.placementLayer,\r\n            placementMarket: props.placementMarket,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const findPlacementMarket = (marketId) =>\r\n    placementMarkets.find((m) => {\r\n      return m.market?.id === marketId;\r\n    });\r\n\r\n  const fields = [\r\n    {\r\n      name: 'placementlayerId',\r\n      type: 'hidden',\r\n      value: layer.id,\r\n    },\r\n    {\r\n      name: 'market',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('market.fields.market') || '',\r\n      hint: isDuplicateMarket ? utils.string.t('placement.marketing.fields.markets.hint') : null,\r\n      value: null,\r\n      options: sortOptions(filterMarketsInUse(placementMarkets)),\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        autoFocus: true,\r\n        getOptionLabel,\r\n        renderOption,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.saveEdit'),\r\n      handler: (...args) =>\r\n        isDuplicateMarket\r\n          ? dispatch(duplicateLine(lineId, ...args)).then((res) => {\r\n              const marketId = res?.market?.id;\r\n              const placementMarket = findPlacementMarket(marketId);\r\n              if (marketId) {\r\n                handleEditPlacementMarketsLayers({\r\n                  placementLayer: layer,\r\n                  placementMarket,\r\n                });\r\n              }\r\n            })\r\n          : dispatch(postPlacementAddLayerMarket(...args)).then((res) => {\r\n              const marketId = res?.market?.id;\r\n              const placementMarket = findPlacementMarket(marketId);\r\n\r\n              handleEditPlacementMarketsLayers({\r\n                placementLayer: layer,\r\n                placementMarket,\r\n              });\r\n            }),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.saveClose'),\r\n      handler: (...args) => {\r\n        if (isDuplicateMarket) {\r\n          return dispatch(duplicateLine(lineId, ...args));\r\n        }\r\n        return dispatch(postPlacementAddLayerMarket(...args));\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <AddPlacementLayerMarketView fields={fields} actions={actions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}