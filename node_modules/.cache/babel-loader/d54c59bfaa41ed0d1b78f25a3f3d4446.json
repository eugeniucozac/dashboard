{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\n// app\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var updateNotifications = function updateNotifications(userNotificationId, userId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/notification.actions.updateNotifications'\n    };\n    dispatch(updateNotificationsRequest(userId));\n    dispatch(addLoader('updateNotifications'));\n\n    if (!userNotificationId || !userId) {\n      dispatch(updateNotificationsFailure(defaultError));\n      dispatch(removeLoader('updateNotifications'));\n    }\n\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.notificationService,\n      path: \"user?userNotificationId=\".concat(userNotificationId, \"&userId=\").concat(userId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(updateNotificationsSuccess(data));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(updateNotificationsFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('updateNotifications'));\n    });\n  };\n};\nexport var updateNotificationsRequest = function updateNotificationsRequest(payload) {\n  return {\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_REQUEST',\n    payload: payload\n  };\n};\nexport var updateNotificationsSuccess = function updateNotificationsSuccess(payload) {\n  return {\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_SUCCESS',\n    payload: payload\n  };\n};\nexport var updateNotificationsFailure = function updateNotificationsFailure(error) {\n  return {\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/notification/notification.actions.updateNotifications.js"],"names":["authLogout","addLoader","removeLoader","utils","updateNotifications","userNotificationId","userId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","updateNotificationsRequest","updateNotificationsFailure","api","put","token","accessToken","notificationService","path","then","response","handleResponse","json","handleNewData","data","updateNotificationsSuccess","err","handleError","handleUnauthorized","payload","type","error"],"mappings":";AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,kBAAD,EAAqBC,MAArB;AAAA,SAAgC,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzF;AADyF,oBAEhCA,QAAQ,EAFwB;AAAA,QAEzEC,IAFyE,aAEjFC,IAFiF,CAEzED,IAFyE;AAAA,QAE/CE,QAF+C,aAEjEC,MAFiE,CAEvDC,IAFuD,CAE/CF,QAF+C;;AAIzF,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,0BAA0B,CAACV,MAAD,CAA3B,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,qBAAD,CAAV,CAAR;;AAEA,QAAI,CAACI,kBAAD,IAAuB,CAACC,MAA5B,EAAoC;AAClCC,MAAAA,QAAQ,CAACU,0BAA0B,CAACH,YAAD,CAA3B,CAAR;AACAP,MAAAA,QAAQ,CAACL,YAAY,CAAC,qBAAD,CAAb,CAAR;AACD;;AAED,WAAOC,KAAK,CAACe,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,mBAFhB;AAGHC,MAAAA,IAAI,oCAA6BlB,kBAA7B,qBAA0DC,MAA1D;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACe,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUxB,KAAK,CAACe,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdtB,MAAAA,QAAQ,CAACuB,0BAA0B,CAACD,IAAD,CAA3B,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACd5B,MAAAA,KAAK,CAACe,GAAN,CAAUc,WAAV,CAAsBD,GAAtB,EAA2BjB,YAA3B;AACAX,MAAAA,KAAK,CAACe,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACU,0BAA0B,CAACc,GAAD,CAA3B,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,aAkBI,YAAM;AACbxB,MAAAA,QAAQ,CAACL,YAAY,CAAC,qBAAD,CAAb,CAAR;AACD,KApBI,CAAP;AAqBD,GArCkC;AAAA,CAA5B;AAuCP,OAAO,IAAMc,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACkB,OAAD,EAAa;AACrD,SAAO;AACLC,IAAAA,IAAI,EAAE,2CADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMJ,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACI,OAAD,EAAa;AACrD,SAAO;AACLC,IAAAA,IAAI,EAAE,2CADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMjB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACmB,KAAD,EAAW;AACnD,SAAO;AACLD,IAAAA,IAAI,EAAE,2CADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const updateNotifications = (userNotificationId, userId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/notification.actions.updateNotifications',\r\n  };\r\n\r\n  dispatch(updateNotificationsRequest(userId));\r\n  dispatch(addLoader('updateNotifications'));\r\n\r\n  if (!userNotificationId || !userId) {\r\n    dispatch(updateNotificationsFailure(defaultError));\r\n    dispatch(removeLoader('updateNotifications'));\r\n  }\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.notificationService,\r\n      path: `user?userNotificationId=${userNotificationId}&userId=${userId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(updateNotificationsSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(updateNotificationsFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('updateNotifications'));\r\n    });\r\n};\r\n\r\nexport const updateNotificationsRequest = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateNotificationsSuccess = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateNotificationsFailure = (error) => {\r\n  return {\r\n    type: 'NOTIFICATION_UPDATE_NOTIFICATIONS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}