{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\LayerComment\\\\LayerComment.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as utils from 'utils';\nimport styles from './LayerComment.styles';\nimport { Popover, Box, Typography, IconButton, makeStyles } from '@material-ui/core';\nimport { Comments } from 'components';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar LayerComments = function LayerComments(_ref) {\n  _s();\n\n  var hasComments = _ref.hasComments,\n      newComments = _ref.newComments,\n      commentsOptions = _ref.commentsOptions,\n      handleAddCommentClose = _ref.handleAddCommentClose,\n      _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen;\n\n  var _useState = useState(isOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentsOpen = _useState2[0],\n      setCommentsOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateHasComments = _useState4[0],\n      setHasComments = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stateNewComments = _useState6[0],\n      setNewComments = _useState6[1];\n\n  var classes = makeStyles(styles, {\n    name: 'LayerMarketComment'\n  })();\n  var inputEl = useRef(null);\n  useEffect(function () {\n    setHasComments(hasComments ? true : false);\n  }, [hasComments]);\n  useEffect(function () {\n    setNewComments(newComments ? true : false);\n  }, [newComments]);\n  useEffect(function () {\n    setCommentsOpen(isOpen);\n  }, [isOpen]);\n\n  var handleClick = function handleClick() {\n    setCommentsOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    utils.generic.isFunction(handleAddCommentClose) && handleAddCommentClose();\n    setCommentsOpen(false);\n  };\n\n  var handleUpdateComments = function handleUpdateComments() {\n    setHasComments(true);\n    setNewComments(true);\n  };\n\n  var id = commentsOpen ? 'comments-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: inputEl,\n    children: [stateHasComments ? /*#__PURE__*/_jsxDEV(IconButton, {\n      size: 'small',\n      \"aria-owns\": commentsOpen ? 'comments-popover' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-label\": \"Comments\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(CommentIcon, {\n        className: stateNewComments ? classes.newCommentIcon : classes.commentIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, _this) : null, /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      classes: {\n        paper: classes.paper\n      },\n      open: commentsOpen,\n      anchorEl: inputEl.current,\n      disableScrollLock: true,\n      disableRestoreFocus: true,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.commentsBox,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            className: classes.commentsTitle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              \"aria-label\": \"close\",\n              onClick: handleClose,\n              className: classes.closeIcon,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Comments, {\n            id: commentsOptions.id,\n            title: commentsOptions.title,\n            divider: commentsOptions.divider,\n            placeholder: commentsOptions.placeholder,\n            updateHasComments: handleUpdateComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LayerComments, \"y8eD20e4DRJyBnOSnG3jCRhB0DU=\");\n\n_c = LayerComments;\nexport default LayerComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayerComments\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/LayerComment/LayerComment.js"],"names":["React","useState","useEffect","useRef","utils","styles","Popover","Box","Typography","IconButton","makeStyles","Comments","CommentIcon","CloseIcon","LayerComments","hasComments","newComments","commentsOptions","handleAddCommentClose","isOpen","commentsOpen","setCommentsOpen","stateHasComments","setHasComments","stateNewComments","setNewComments","classes","name","inputEl","handleClick","handleClose","generic","isFunction","handleUpdateComments","id","undefined","newCommentIcon","commentIcon","paper","current","commentsBox","commentsTitle","closeIcon","title","divider","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport * as utils from 'utils';\r\n\r\nimport styles from './LayerComment.styles';\r\nimport { Popover, Box, Typography, IconButton, makeStyles } from '@material-ui/core';\r\nimport { Comments } from 'components';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst LayerComments = ({ hasComments, newComments, commentsOptions, handleAddCommentClose, isOpen = false }) => {\r\n  const [commentsOpen, setCommentsOpen] = useState(isOpen);\r\n  const [stateHasComments, setHasComments] = useState(false);\r\n  const [stateNewComments, setNewComments] = useState(false);\r\n\r\n  const classes = makeStyles(styles, { name: 'LayerMarketComment' })();\r\n  const inputEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setHasComments(hasComments ? true : false);\r\n  }, [hasComments]);\r\n\r\n  useEffect(() => {\r\n    setNewComments(newComments ? true : false);\r\n  }, [newComments]);\r\n\r\n  useEffect(() => {\r\n    setCommentsOpen(isOpen);\r\n  }, [isOpen]);\r\n\r\n  const handleClick = () => {\r\n    setCommentsOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    utils.generic.isFunction(handleAddCommentClose) && handleAddCommentClose();\r\n    setCommentsOpen(false);\r\n  };\r\n\r\n  const handleUpdateComments = () => {\r\n    setHasComments(true);\r\n    setNewComments(true);\r\n  };\r\n\r\n  const id = commentsOpen ? 'comments-popover' : undefined;\r\n\r\n  return (\r\n    <div ref={inputEl}>\r\n      {stateHasComments ? (\r\n        <IconButton\r\n          size={'small'}\r\n          aria-owns={commentsOpen ? 'comments-popover' : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-label=\"Comments\"\r\n          onClick={handleClick}\r\n        >\r\n          <CommentIcon className={stateNewComments ? classes.newCommentIcon : classes.commentIcon} />\r\n        </IconButton>\r\n      ) : null}\r\n\r\n      <Popover\r\n        id={id}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={commentsOpen}\r\n        anchorEl={inputEl.current}\r\n        disableScrollLock={true}\r\n        disableRestoreFocus\r\n        onClose={handleClose}\r\n      >\r\n        <>\r\n          <Box className={classes.commentsBox}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" className={classes.commentsTitle}>\r\n              <Typography>Comments</Typography>\r\n              <IconButton size=\"small\" aria-label=\"close\" onClick={handleClose} className={classes.closeIcon}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Box>\r\n\r\n            <Comments\r\n              id={commentsOptions.id}\r\n              title={commentsOptions.title}\r\n              divider={commentsOptions.divider}\r\n              placeholder={commentsOptions.placeholder}\r\n              updateHasComments={handleUpdateComments}\r\n            />\r\n          </Box>\r\n        </>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayerComments;\r\n"]},"metadata":{},"sourceType":"module"}