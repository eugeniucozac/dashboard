{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getReportGroupList = function getReportGroupList(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reporting.actions.getReportGroupList'\n    };\n    var reporting = getState().reporting;\n    var endpointParams = {\n      page: params && params.page || 1,\n      size: params && params.size || reporting.reportGroupList.pageSize,\n      orderBy: reporting.reportGroupList.sortBy,\n      direction: reporting.reportGroupList.sortDirection\n    };\n    dispatch(getReportGroupListRequest({\n      endpointParams: endpointParams\n    }));\n    dispatch(addLoader('getReportGroupList'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/reportgroup',\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getReportGroupListSuccess(data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getReportGroupListFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getReportGroupList'));\n    });\n  };\n};\nexport var getReportGroupListRequest = function getReportGroupListRequest(payload) {\n  return {\n    type: 'REPORTING_GROUP_LIST_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getReportGroupListSuccess = function getReportGroupListSuccess(data) {\n  return {\n    type: 'REPORTING_GROUP_LIST_GET_SUCCESS',\n    payload: {\n      content: data.content,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getReportGroupListFailure = function getReportGroupListFailure(error) {\n  return {\n    type: 'REPORTING_GROUP_LIST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.reportGroup.get.js"],"names":["addLoader","authLogout","removeLoader","utils","getReportGroupList","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","reporting","endpointParams","page","size","reportGroupList","pageSize","orderBy","sortBy","direction","sortDirection","getReportGroupListRequest","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getReportGroupListSuccess","err","handleError","handleUnauthorized","getReportGroupListFailure","payload","type","content","pagination","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getReportGroupList = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.getReportGroupList',\r\n  };\r\n\r\n  const reporting = getState().reporting;\r\n\r\n  const endpointParams = {\r\n    page: (params && params.page) || 1,\r\n    size: (params && params.size) || reporting.reportGroupList.pageSize,\r\n    orderBy: reporting.reportGroupList.sortBy,\r\n    direction: reporting.reportGroupList.sortDirection,\r\n  };\r\n\r\n  dispatch(getReportGroupListRequest({ endpointParams }));\r\n  dispatch(addLoader('getReportGroupList'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/reportgroup',\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getReportGroupListSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getReportGroupListFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReportGroupList'));\r\n    });\r\n};\r\n\r\nexport const getReportGroupListRequest = (payload) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_LIST_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportGroupListSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_LIST_GET_SUCCESS',\r\n    payload: {\r\n      content: data.content,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getReportGroupListFailure = (error) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_LIST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}