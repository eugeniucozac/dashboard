{"ast":null,"code":"import \"core-js/modules/es.array.reduce\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossAction\\\\LossAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport compact from 'lodash/compact';\nimport uniq from 'lodash/uniq'; // app\n\nimport { LossActionView } from './LossAction.view';\nimport { selectPriorities, getPriorityLevels } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport { useFlexiColumns } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossAction() {\n  _s();\n\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities); //const lossActionsItems = useSelector(selectLossActionsItems);\n\n  useEffect(function () {\n    dispatch(getPriorityLevels());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var lossActionsItems = {\n    pagination: {\n      page: 0,\n      size: 10,\n      totalPages: 23,\n      totalElements: 221,\n      direction: 'DESC',\n      orderBy: 'lossRef',\n      searchBy: 'lossName'\n    },\n    items: [{\n      actionID: 'AA00071',\n      actionName: 'Create Loss',\n      description: 'Register Loss',\n      team: 'Mphasis',\n      assignedTo: 'Arun Mphasis',\n      dateCreated: '2021-12-24T09:03:32.903+00:00',\n      targetDueDate: '2021-12-31T09:03:32.903+00:00',\n      priority: 'Medium',\n      status: 'In-Progress',\n      insured: 'Bar',\n      department: null,\n      lossDetailID: null,\n      claimId: null,\n      processID: null,\n      divisionID: null,\n      divisionName: 'Foo',\n      instanceID: null,\n      isClaim: false,\n      claimRef: null,\n      riskDetail: null,\n      actionChildItemList: [{\n        actionID: 'Q2111100948173442053',\n        actionName: 'RFI',\n        description: 'Query Code',\n        team: 'Ardonagh',\n        assignedTo: 'Clare Abbott',\n        dateCreated: '2022-01-01T09:03:32.903+00:00',\n        targetDueDate: '2022-02-01T09:03:32.903+00:00',\n        priority: 'High',\n        status: 'Complete',\n        insured: null,\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: null\n      }, {\n        actionID: 'Q2111100948173442053',\n        actionName: 'RFI',\n        description: 'Query Code',\n        team: 'Ardonagh',\n        assignedTo: '',\n        dateCreated: '2022-01-02T09:03:32.903+00:00',\n        targetDueDate: '2022-02-02T09:03:32.903+00:00',\n        priority: 'High',\n        status: 'Expired',\n        insured: 'Canadian National Railway Company',\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        divisionName: 'Casualty',\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: null\n      }, {\n        actionID: null,\n        actionName: null,\n        description: null,\n        assignedTo: 'Arun Arumugam',\n        assignedToEmail: 'arun.arumugam@ardonaghspecialty.com',\n        claimId: 4972,\n        claimLossFromDate: '2022-01-27T09:00:49.788+00:00',\n        claimReference: 'DZE00002A01',\n        claimStage: 'Capture Claim Data',\n        client: 'International Jewelers Underwriters Agency Ltd',\n        complexity: 'Unsure',\n        division: 'Property & Casualty',\n        divisionID: 1,\n        department: null,\n        lossDetailID: null,\n        dateCreated: '2022-01-03T09:03:32.903+00:00',\n        targetDueDate: '2022-02-03T09:03:32.903+00:00',\n        insured: 'As May Be Declared By Price Forbes Marine',\n        lastUpdatedDate: '2022-01-27T09:00:49.788+00:00',\n        lossRef: 'DZE00002',\n        policyId: 71033,\n        policyRef: 'FIC2000008',\n        priority: 'Medium',\n        priorityId: null,\n        instanceID: null,\n        isClaim: true,\n        processID: '195c8bb4-7de9-11ec-964a-0242ac100202',\n        sourceId: 4,\n        status: 'Draft',\n        team: 'Ardonagh',\n        xbInstance: 'London',\n        riskDetail: null,\n        actionChildItemList: [{\n          actionID: 'T2111010707499140153',\n          actionName: 'Gxb Sync',\n          description: 'Action First Advice',\n          team: 'Mphasis',\n          assignedTo: 'Arun Arumugam',\n          dateCreated: '2022-01-04T09:03:32.903+00:00',\n          targetDueDate: '2022-02-04T09:03:32.903+00:00',\n          priority: 'Medium',\n          status: 'In-progress',\n          insured: null,\n          department: null,\n          lossDetailID: null,\n          claimId: null,\n          processID: null,\n          divisionID: null,\n          instanceID: null,\n          isClaim: false,\n          claimRef: null,\n          riskDetail: null,\n          actionChildItemList: null\n        }, {\n          actionID: 'Q2222999948173442263',\n          actionName: 'RFI',\n          description: 'Query Code',\n          team: 'Ardonagh',\n          assignedTo: 'Eugeniu Cozac',\n          dateCreated: '2022-01-05T09:03:32.903+00:00',\n          targetDueDate: '2022-02-05T09:03:32.903+00:00',\n          priority: 'High',\n          status: 'Complete',\n          insured: null,\n          department: null,\n          lossDetailID: null,\n          claimId: null,\n          processID: null,\n          divisionID: null,\n          instanceID: null,\n          isClaim: false,\n          claimRef: null,\n          riskDetail: null,\n          actionChildItemList: null\n        }, {\n          actionID: 'T2111010707499140153',\n          actionName: 'Sanction Check',\n          description: 'Task Grid Visible',\n          team: 'Mphasis',\n          dateCreated: '2022-01-06T09:03:32.903+00:00',\n          targetDueDate: '2022-02-06T09:03:32.903+00:00',\n          priority: 'Medium',\n          status: 'New',\n          insured: null,\n          department: null,\n          lossDetailID: null,\n          claimId: null,\n          processID: null,\n          divisionID: null,\n          instanceID: null,\n          isClaim: false,\n          claimRef: null,\n          riskDetail: null,\n          actionChildItemList: null\n        }, {\n          actionID: 'T211101070744072672153',\n          actionName: 'First Advice',\n          description: 'Test',\n          team: 'Mphasis',\n          assignedTo: 'Arun Arumugam',\n          dateCreated: '2022-01-07T09:03:32.903+00:00',\n          targetDueDate: '2022-02-07T09:03:32.903+00:00',\n          priority: 'Medium',\n          status: 'Pending',\n          insured: null,\n          department: null,\n          lossDetailID: null,\n          claimId: null,\n          processID: null,\n          divisionID: null,\n          instanceID: null,\n          isClaim: false,\n          claimRef: null,\n          riskDetail: null,\n          actionChildItemList: [{\n            actionID: 'Q2111100948173442263',\n            actionName: 'RFI',\n            description: 'Query Code',\n            team: 'Ardonagh',\n            assignedTo: 'Clare Abbott',\n            dateCreated: '2022-01-08T09:03:32.903+00:00',\n            targetDueDate: '2022-02-08T09:03:32.903+00:00',\n            priority: 'Low',\n            status: 'Complete',\n            insured: null,\n            department: null,\n            lossDetailID: null,\n            claimId: null,\n            processID: null,\n            divisionID: null,\n            instanceID: null,\n            isClaim: false,\n            claimRef: null,\n            riskDetail: null,\n            actionChildItemList: null\n          }]\n        }]\n      }]\n    }]\n  };\n\n  var getItemsFlat = function getItemsFlat(items, propName) {\n    return items.reduce(function (acc, cur) {\n      var item = _objectSpread({}, cur);\n\n      var itemChildren = utils.generic.isValidArray(item === null || item === void 0 ? void 0 : item[propName], true) ? _toConsumableArray(item[propName]) : null;\n      return [].concat(_toConsumableArray(acc), [item], _toConsumableArray(itemChildren ? getItemsFlat(itemChildren, propName) : []));\n    }, []);\n  };\n\n  var _useState = useState(lossActionsItems.items),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemsFiltered = _useState2[0],\n      setItemsFiltered = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchQuery = _useState4[0],\n      setSearchQuery = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var searchableColumns = ['actionID', 'actionName', 'team', 'assignedTo', 'priority', 'status', 'description', 'divisionName', 'insured'];\n  var filterableColumns = [{\n    name: 'assignedTo',\n    type: 'array'\n  }, {\n    name: 'priority',\n    type: 'array'\n  }, {\n    name: 'status',\n    type: 'array'\n  }, {\n    name: 'description',\n    type: 'array'\n  }, {\n    name: 'divisionName',\n    type: 'array'\n  }, {\n    name: 'insured',\n    type: 'array'\n  }, {\n    name: 'dateCreated',\n    type: 'date'\n  }, {\n    name: 'targetDueDate',\n    type: 'date'\n  }];\n\n  var hasFilters = function hasFilters(filter) {\n    return filter.type === 'array' && utils.generic.isValidArray(filters === null || filters === void 0 ? void 0 : filters[filter.name], true) || filter.type === 'date' && Boolean(filters === null || filters === void 0 ? void 0 : filters[filter.name]);\n  };\n\n  useEffect(function () {\n    var unfilteredItems = (lossActionsItems === null || lossActionsItems === void 0 ? void 0 : lossActionsItems.items) || [];\n    var nestedArrayKey = 'actionChildItemList';\n    var hasSearchFilters = filterableColumns.some(hasFilters); // update the visible rows if there is a search term or filters\n\n    if (searchQuery || hasSearchFilters) {\n      setItemsFiltered(filterItems(unfilteredItems, searchQuery, searchableColumns, nestedArrayKey, filters));\n    } else {\n      setItemsFiltered(unfilteredItems);\n    }\n  }, [searchQuery, filters]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var allItems = getItemsFlat((lossActionsItems === null || lossActionsItems === void 0 ? void 0 : lossActionsItems.items) || [], 'actionChildItemList');\n  var optionsAssignedTo = uniq(compact(allItems.map(function (i) {\n    return i.assignedTo;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsStatus = uniq(compact(allItems.map(function (i) {\n    return i.status;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsDivision = uniq(compact(allItems.map(function (i) {\n    return i.divisionName;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsInsured = uniq(compact(allItems.map(function (i) {\n    return i.insured;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsPriorities = priorities.map(function (i) {\n    return {\n      id: i.id,\n      name: i.description\n    };\n  });\n  var viewFields = [{\n    name: 'dateCreated',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'targetDueDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(viewFields);\n  var validationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var datePickerProps = {\n    type: 'datepicker',\n    value: '',\n    label: '',\n    plainText: true,\n    plainTextIcon: true,\n    placeholder: utils.string.t('app.selectDate'),\n    muiComponentProps: {\n      fullWidth: false,\n      margin: 'dense'\n    },\n    muiPickerProps: {\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    }\n  };\n  var tableFilterFields = [{\n    id: 'assignedTo',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.assignedTo'),\n    value: [],\n    options: optionsAssignedTo,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"assignedTo\",\n      search: true,\n      options: optionsAssignedTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'dateCreated',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({\n      control: control,\n      id: \"creationdatepicker\",\n      name: \"dateCreated\"\n    }, datePickerProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'targetDueDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.targetDueDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({\n      control: control,\n      id: \"targetduedatepicker\",\n      name: \"targetDueDate\"\n    }, datePickerProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'priority',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.priority'),\n    value: [],\n    options: optionsPriorities,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"priority\",\n      options: optionsPriorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'status',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    value: [],\n    options: optionsStatus,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"status\",\n      options: optionsStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    value: [],\n    options: optionsDivision,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: optionsDivision\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: [],\n    options: optionsInsured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: optionsInsured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 16\n    }, this)\n  }]; // check if any of the nested items have a match with the search query\n\n  var hasMatchDeep = function hasMatchDeep(items, query, columns, nestedKey) {\n    var filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    return items.reduce(function (acc, cur) {\n      var options = cur[nestedKey] || [];\n\n      if (hasMatch(cur, columns, query, filters)) {\n        return true;\n      } else {\n        return acc || hasMatchDeep(options, query, columns, nestedKey, filters);\n      }\n    }, false);\n  }; // check if there is a match for the filters AND search query on any of the searchable columns\n\n\n  var hasMatch = function hasMatch(obj) {\n    var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var filters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var values = Object.entries(obj).reduce(function (acc, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return columns.includes(key) ? [].concat(_toConsumableArray(acc), [value]) : acc;\n    }, []);\n    var activeFilters = filterableColumns.filter(hasFilters);\n    var hasActiveFilters = (activeFilters === null || activeFilters === void 0 ? void 0 : activeFilters.length) > 0;\n    var hasSearchQuery = (query === null || query === void 0 ? void 0 : query.length) > 0; // check search ONLY\n\n    if (hasSearchQuery && !hasActiveFilters) {\n      return utils.filters.matchQuery(values, query);\n    } // check search AND filters\n\n\n    if (hasSearchQuery && hasActiveFilters) {\n      return utils.filters.matchQuery(values, query) && utils.filters.matchFilters(activeFilters, filters, obj);\n    } // check filters ONLY\n\n\n    if (!hasSearchQuery && hasActiveFilters) {\n      return utils.filters.matchFilters(activeFilters, filters, obj);\n    }\n  }; // return only the rows (and their parents) which match the search criteria\n\n\n  var filterItems = function filterItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var query = arguments.length > 1 ? arguments[1] : undefined;\n    var columns = arguments.length > 2 ? arguments[2] : undefined;\n    var nestedKey = arguments.length > 3 ? arguments[3] : undefined;\n    var filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    return items.reduce(function (acc, item) {\n      var options = item[nestedKey] || [];\n\n      if (hasMatch(item, columns, query, filters)) {\n        return [].concat(_toConsumableArray(acc), [item]);\n      } else {\n        if (hasMatchDeep(options, query, columns, nestedKey, filters)) {\n          return [].concat(_toConsumableArray(acc), [_objectSpread(_objectSpread({}, item), {}, _defineProperty({}, nestedKey, filterItems(options, query, columns, nestedKey, filters)))]);\n        } else {\n          return acc;\n        }\n      }\n    }, []);\n  };\n\n  var handleSearch = function handleSearch(searchObj) {\n    setSearchQuery((searchObj === null || searchObj === void 0 ? void 0 : searchObj.search) || '');\n  };\n\n  var handleResetSearch = function handleResetSearch() {\n    setSearchQuery('');\n  };\n\n  var handleFilter = function handleFilter(filters) {\n    setFilters(filters === null || filters === void 0 ? void 0 : filters.filters);\n  };\n\n  var handleResetFilter = function handleResetFilter() {\n    setFilters(null);\n    reset();\n  };\n\n  var columns = [{\n    id: 'actionId',\n    label: utils.string.t('app.actionId'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'name',\n    label: utils.string.t('app.name'),\n    visible: true,\n    ellipsis: true\n  }, {\n    id: 'description',\n    label: utils.string.t('claims.processing.tasksGridColumns.description'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsManagement.team'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'assignedTo',\n    label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateCreated',\n    label: utils.string.t('claims.columns.claimsManagement.createdDate'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'targetDate',\n    label: utils.string.t('claims.columns.claimsList.targetDueDate'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsManagement.priority'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'status',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'taskCompleted',\n    label: utils.string.t('claims.columns.claimsManagement.taskCompleted'),\n    nowrap: true,\n    visible: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps;\n\n  return /*#__PURE__*/_jsxDEV(LossActionView, {\n    items: _objectSpread(_objectSpread({}, lossActionsItems), {}, {\n      items: itemsFiltered\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    tableFilterFields: tableFilterFields,\n    handlers: {\n      search: handleSearch,\n      filter: handleFilter,\n      resetFilter: handleResetFilter,\n      resetSearch: handleResetSearch\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossAction, \"czA86mAiLcK8/cmQiCkvyGUisTU=\", false, function () {\n  return [useDispatch, useSelector, useForm, useFlexiColumns];\n});\n\n_c = LossAction;\nLossAction.displayName = \"LossAction\";\nLossAction.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LossAction\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\LossAction\\\\LossAction.js\"] = {\n    name: \"LossAction\",\n    docgenInfo: LossAction.__docgenInfo,\n    path: \"src\\\\modules\\\\LossAction\\\\LossAction.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LossAction\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossAction/LossAction.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","yupResolver","compact","uniq","LossActionView","selectPriorities","getPriorityLevels","MultiSelect","FormDate","useFlexiColumns","utils","LossAction","dispatch","priorities","lossActionsItems","pagination","page","size","totalPages","totalElements","direction","orderBy","searchBy","items","actionID","actionName","description","team","assignedTo","dateCreated","targetDueDate","priority","status","insured","department","lossDetailID","claimId","processID","divisionID","divisionName","instanceID","isClaim","claimRef","riskDetail","actionChildItemList","assignedToEmail","claimLossFromDate","claimReference","claimStage","client","complexity","division","lastUpdatedDate","lossRef","policyId","policyRef","priorityId","sourceId","xbInstance","getItemsFlat","propName","reduce","acc","cur","item","itemChildren","generic","isValidArray","itemsFiltered","setItemsFiltered","searchQuery","setSearchQuery","filters","setFilters","searchableColumns","filterableColumns","name","type","hasFilters","filter","Boolean","unfilteredItems","nestedArrayKey","hasSearchFilters","some","filterItems","allItems","optionsAssignedTo","map","i","id","optionsStatus","optionsDivision","optionsInsured","optionsPriorities","viewFields","value","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","datePickerProps","label","plainText","plainTextIcon","placeholder","string","t","muiComponentProps","fullWidth","margin","muiPickerProps","variant","format","tableFilterFields","options","content","hasMatchDeep","query","columns","nestedKey","hasMatch","obj","values","Object","entries","key","includes","activeFilters","hasActiveFilters","length","hasSearchQuery","matchQuery","matchFilters","handleSearch","searchObj","search","handleResetSearch","handleFilter","handleResetFilter","nowrap","visible","ellipsis","columnsArray","columnProps","resetFilter","resetSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport compact from 'lodash/compact';\r\nimport uniq from 'lodash/uniq';\r\n\r\n// app\r\nimport { LossActionView } from './LossAction.view';\r\nimport { selectPriorities, getPriorityLevels } from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nexport default function LossAction() {\r\n  const dispatch = useDispatch();\r\n\r\n  const priorities = useSelector(selectPriorities);\r\n  //const lossActionsItems = useSelector(selectLossActionsItems);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPriorityLevels());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const lossActionsItems = {\r\n    pagination: {\r\n      page: 0,\r\n      size: 10,\r\n      totalPages: 23,\r\n      totalElements: 221,\r\n      direction: 'DESC',\r\n      orderBy: 'lossRef',\r\n      searchBy: 'lossName',\r\n    },\r\n    items: [\r\n      {\r\n        actionID: 'AA00071',\r\n        actionName: 'Create Loss',\r\n        description: 'Register Loss',\r\n        team: 'Mphasis',\r\n        assignedTo: 'Arun Mphasis',\r\n        dateCreated: '2021-12-24T09:03:32.903+00:00',\r\n        targetDueDate: '2021-12-31T09:03:32.903+00:00',\r\n        priority: 'Medium',\r\n        status: 'In-Progress',\r\n        insured: 'Bar',\r\n        department: null,\r\n        lossDetailID: null,\r\n        claimId: null,\r\n        processID: null,\r\n        divisionID: null,\r\n        divisionName: 'Foo',\r\n        instanceID: null,\r\n        isClaim: false,\r\n        claimRef: null,\r\n        riskDetail: null,\r\n        actionChildItemList: [\r\n          {\r\n            actionID: 'Q2111100948173442053',\r\n            actionName: 'RFI',\r\n            description: 'Query Code',\r\n            team: 'Ardonagh',\r\n            assignedTo: 'Clare Abbott',\r\n            dateCreated: '2022-01-01T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-01T09:03:32.903+00:00',\r\n            priority: 'High',\r\n            status: 'Complete',\r\n            insured: null,\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: null,\r\n          },\r\n          {\r\n            actionID: 'Q2111100948173442053',\r\n            actionName: 'RFI',\r\n            description: 'Query Code',\r\n            team: 'Ardonagh',\r\n            assignedTo: '',\r\n            dateCreated: '2022-01-02T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-02T09:03:32.903+00:00',\r\n            priority: 'High',\r\n            status: 'Expired',\r\n            insured: 'Canadian National Railway Company',\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            divisionName: 'Casualty',\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: null,\r\n          },\r\n          {\r\n            actionID: null,\r\n            actionName: null,\r\n            description: null,\r\n            assignedTo: 'Arun Arumugam',\r\n            assignedToEmail: 'arun.arumugam@ardonaghspecialty.com',\r\n            claimId: 4972,\r\n            claimLossFromDate: '2022-01-27T09:00:49.788+00:00',\r\n            claimReference: 'DZE00002A01',\r\n            claimStage: 'Capture Claim Data',\r\n            client: 'International Jewelers Underwriters Agency Ltd',\r\n            complexity: 'Unsure',\r\n            division: 'Property & Casualty',\r\n            divisionID: 1,\r\n            department: null,\r\n            lossDetailID: null,\r\n            dateCreated: '2022-01-03T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-03T09:03:32.903+00:00',\r\n            insured: 'As May Be Declared By Price Forbes Marine',\r\n            lastUpdatedDate: '2022-01-27T09:00:49.788+00:00',\r\n            lossRef: 'DZE00002',\r\n            policyId: 71033,\r\n            policyRef: 'FIC2000008',\r\n            priority: 'Medium',\r\n            priorityId: null,\r\n            instanceID: null,\r\n            isClaim: true,\r\n            processID: '195c8bb4-7de9-11ec-964a-0242ac100202',\r\n            sourceId: 4,\r\n            status: 'Draft',\r\n            team: 'Ardonagh',\r\n            xbInstance: 'London',\r\n            riskDetail: null,\r\n            actionChildItemList: [\r\n              {\r\n                actionID: 'T2111010707499140153',\r\n                actionName: 'Gxb Sync',\r\n                description: 'Action First Advice',\r\n                team: 'Mphasis',\r\n                assignedTo: 'Arun Arumugam',\r\n                dateCreated: '2022-01-04T09:03:32.903+00:00',\r\n                targetDueDate: '2022-02-04T09:03:32.903+00:00',\r\n                priority: 'Medium',\r\n                status: 'In-progress',\r\n                insured: null,\r\n                department: null,\r\n                lossDetailID: null,\r\n                claimId: null,\r\n                processID: null,\r\n                divisionID: null,\r\n                instanceID: null,\r\n                isClaim: false,\r\n                claimRef: null,\r\n                riskDetail: null,\r\n                actionChildItemList: null,\r\n              },\r\n              {\r\n                actionID: 'Q2222999948173442263',\r\n                actionName: 'RFI',\r\n                description: 'Query Code',\r\n                team: 'Ardonagh',\r\n                assignedTo: 'Eugeniu Cozac',\r\n                dateCreated: '2022-01-05T09:03:32.903+00:00',\r\n                targetDueDate: '2022-02-05T09:03:32.903+00:00',\r\n                priority: 'High',\r\n                status: 'Complete',\r\n                insured: null,\r\n                department: null,\r\n                lossDetailID: null,\r\n                claimId: null,\r\n                processID: null,\r\n                divisionID: null,\r\n                instanceID: null,\r\n                isClaim: false,\r\n                claimRef: null,\r\n                riskDetail: null,\r\n                actionChildItemList: null,\r\n              },\r\n              {\r\n                actionID: 'T2111010707499140153',\r\n                actionName: 'Sanction Check',\r\n                description: 'Task Grid Visible',\r\n                team: 'Mphasis',\r\n                dateCreated: '2022-01-06T09:03:32.903+00:00',\r\n                targetDueDate: '2022-02-06T09:03:32.903+00:00',\r\n                priority: 'Medium',\r\n                status: 'New',\r\n                insured: null,\r\n                department: null,\r\n                lossDetailID: null,\r\n                claimId: null,\r\n                processID: null,\r\n                divisionID: null,\r\n                instanceID: null,\r\n                isClaim: false,\r\n                claimRef: null,\r\n                riskDetail: null,\r\n                actionChildItemList: null,\r\n              },\r\n              {\r\n                actionID: 'T211101070744072672153',\r\n                actionName: 'First Advice',\r\n                description: 'Test',\r\n                team: 'Mphasis',\r\n                assignedTo: 'Arun Arumugam',\r\n                dateCreated: '2022-01-07T09:03:32.903+00:00',\r\n                targetDueDate: '2022-02-07T09:03:32.903+00:00',\r\n                priority: 'Medium',\r\n                status: 'Pending',\r\n                insured: null,\r\n                department: null,\r\n                lossDetailID: null,\r\n                claimId: null,\r\n                processID: null,\r\n                divisionID: null,\r\n                instanceID: null,\r\n                isClaim: false,\r\n                claimRef: null,\r\n                riskDetail: null,\r\n                actionChildItemList: [\r\n                  {\r\n                    actionID: 'Q2111100948173442263',\r\n                    actionName: 'RFI',\r\n                    description: 'Query Code',\r\n                    team: 'Ardonagh',\r\n                    assignedTo: 'Clare Abbott',\r\n                    dateCreated: '2022-01-08T09:03:32.903+00:00',\r\n                    targetDueDate: '2022-02-08T09:03:32.903+00:00',\r\n                    priority: 'Low',\r\n                    status: 'Complete',\r\n                    insured: null,\r\n                    department: null,\r\n                    lossDetailID: null,\r\n                    claimId: null,\r\n                    processID: null,\r\n                    divisionID: null,\r\n                    instanceID: null,\r\n                    isClaim: false,\r\n                    claimRef: null,\r\n                    riskDetail: null,\r\n                    actionChildItemList: null,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const getItemsFlat = (items, propName) => {\r\n    return items.reduce((acc, cur) => {\r\n      const item = { ...cur };\r\n      const itemChildren = utils.generic.isValidArray(item?.[propName], true) ? [...item[propName]] : null;\r\n\r\n      return [...acc, item, ...(itemChildren ? getItemsFlat(itemChildren, propName) : [])];\r\n    }, []);\r\n  };\r\n\r\n  const [itemsFiltered, setItemsFiltered] = useState(lossActionsItems.items);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filters, setFilters] = useState(null);\r\n\r\n  const searchableColumns = [\r\n    'actionID',\r\n    'actionName',\r\n    'team',\r\n    'assignedTo',\r\n    'priority',\r\n    'status',\r\n    'description',\r\n    'divisionName',\r\n    'insured',\r\n  ];\r\n\r\n  const filterableColumns = [\r\n    { name: 'assignedTo', type: 'array' },\r\n    { name: 'priority', type: 'array' },\r\n    { name: 'status', type: 'array' },\r\n    { name: 'description', type: 'array' },\r\n    { name: 'divisionName', type: 'array' },\r\n    { name: 'insured', type: 'array' },\r\n    { name: 'dateCreated', type: 'date' },\r\n    { name: 'targetDueDate', type: 'date' },\r\n  ];\r\n\r\n  const hasFilters = (filter) => {\r\n    return (\r\n      (filter.type === 'array' && utils.generic.isValidArray(filters?.[filter.name], true)) ||\r\n      (filter.type === 'date' && Boolean(filters?.[filter.name]))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unfilteredItems = lossActionsItems?.items || [];\r\n    const nestedArrayKey = 'actionChildItemList';\r\n    const hasSearchFilters = filterableColumns.some(hasFilters);\r\n\r\n    // update the visible rows if there is a search term or filters\r\n    if (searchQuery || hasSearchFilters) {\r\n      setItemsFiltered(filterItems(unfilteredItems, searchQuery, searchableColumns, nestedArrayKey, filters));\r\n    } else {\r\n      setItemsFiltered(unfilteredItems);\r\n    }\r\n  }, [searchQuery, filters]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const allItems = getItemsFlat(lossActionsItems?.items || [], 'actionChildItemList');\r\n\r\n  const optionsAssignedTo = uniq(compact(allItems.map((i) => i.assignedTo))).map((i) => ({ id: i, name: i }));\r\n  const optionsStatus = uniq(compact(allItems.map((i) => i.status))).map((i) => ({ id: i, name: i }));\r\n  const optionsDivision = uniq(compact(allItems.map((i) => i.divisionName))).map((i) => ({ id: i, name: i }));\r\n  const optionsInsured = uniq(compact(allItems.map((i) => i.insured))).map((i) => ({ id: i, name: i }));\r\n  const optionsPriorities = priorities.map((i) => ({ id: i.id, name: i.description }));\r\n\r\n  const viewFields = [\r\n    { name: 'dateCreated', type: 'datepicker', value: null },\r\n    { name: 'targetDueDate', type: 'datepicker', value: null },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(viewFields);\r\n  const validationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control, reset } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const datePickerProps = {\r\n    type: 'datepicker',\r\n    value: '',\r\n    label: '',\r\n    plainText: true,\r\n    plainTextIcon: true,\r\n    placeholder: utils.string.t('app.selectDate'),\r\n    muiComponentProps: {\r\n      fullWidth: false,\r\n      margin: 'dense',\r\n    },\r\n    muiPickerProps: {\r\n      variant: 'inline',\r\n      format: 'DD-MM-YYYY',\r\n    },\r\n  };\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'assignedTo',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.assignedTo'),\r\n      value: [],\r\n      options: optionsAssignedTo,\r\n      content: <MultiSelect id=\"assignedTo\" search options={optionsAssignedTo} />,\r\n    },\r\n    {\r\n      id: 'dateCreated',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\r\n      value: '',\r\n      content: <FormDate control={control} id=\"creationdatepicker\" name=\"dateCreated\" {...datePickerProps} />,\r\n    },\r\n    {\r\n      id: 'targetDueDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.targetDueDate'),\r\n      value: '',\r\n      content: <FormDate control={control} id=\"targetduedatepicker\" name=\"targetDueDate\" {...datePickerProps} />,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      value: [],\r\n      options: optionsPriorities,\r\n      content: <MultiSelect id=\"priority\" options={optionsPriorities} />,\r\n    },\r\n    {\r\n      id: 'status',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      value: [],\r\n      options: optionsStatus,\r\n      content: <MultiSelect id=\"status\" options={optionsStatus} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      value: [],\r\n      options: optionsDivision,\r\n      content: <MultiSelect id=\"division\" search options={optionsDivision} />,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      value: [],\r\n      options: optionsInsured,\r\n      content: <MultiSelect id=\"insured\" search options={optionsInsured} />,\r\n    },\r\n  ];\r\n\r\n  // check if any of the nested items have a match with the search query\r\n  const hasMatchDeep = (items, query, columns, nestedKey, filters = {}) => {\r\n    return items.reduce((acc, cur) => {\r\n      const options = cur[nestedKey] || [];\r\n\r\n      if (hasMatch(cur, columns, query, filters)) {\r\n        return true;\r\n      } else {\r\n        return acc || hasMatchDeep(options, query, columns, nestedKey, filters);\r\n      }\r\n    }, false);\r\n  };\r\n\r\n  // check if there is a match for the filters AND search query on any of the searchable columns\r\n  const hasMatch = (obj, columns = [], query = '', filters = {}) => {\r\n    const values = Object.entries(obj).reduce((acc, [key, value]) => {\r\n      return columns.includes(key) ? [...acc, value] : acc;\r\n    }, []);\r\n\r\n    const activeFilters = filterableColumns.filter(hasFilters);\r\n    const hasActiveFilters = activeFilters?.length > 0;\r\n    const hasSearchQuery = query?.length > 0;\r\n\r\n    // check search ONLY\r\n    if (hasSearchQuery && !hasActiveFilters) {\r\n      return utils.filters.matchQuery(values, query);\r\n    }\r\n\r\n    // check search AND filters\r\n    if (hasSearchQuery && hasActiveFilters) {\r\n      return utils.filters.matchQuery(values, query) && utils.filters.matchFilters(activeFilters, filters, obj);\r\n    }\r\n\r\n    // check filters ONLY\r\n    if (!hasSearchQuery && hasActiveFilters) {\r\n      return utils.filters.matchFilters(activeFilters, filters, obj);\r\n    }\r\n  };\r\n\r\n  // return only the rows (and their parents) which match the search criteria\r\n  const filterItems = (items = [], query, columns, nestedKey, filters = {}) => {\r\n    return items.reduce((acc, item) => {\r\n      const options = item[nestedKey] || [];\r\n\r\n      if (hasMatch(item, columns, query, filters)) {\r\n        return [...acc, item];\r\n      } else {\r\n        if (hasMatchDeep(options, query, columns, nestedKey, filters)) {\r\n          return [...acc, { ...item, [nestedKey]: filterItems(options, query, columns, nestedKey, filters) }];\r\n        } else {\r\n          return acc;\r\n        }\r\n      }\r\n    }, []);\r\n  };\r\n\r\n  const handleSearch = (searchObj) => {\r\n    setSearchQuery(searchObj?.search || '');\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleFilter = (filters) => {\r\n    setFilters(filters?.filters);\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilters(null);\r\n    reset();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'actionId',\r\n      label: utils.string.t('app.actionId'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'name',\r\n      label: utils.string.t('app.name'),\r\n      visible: true,\r\n      ellipsis: true,\r\n    },\r\n\r\n    {\r\n      id: 'description',\r\n      label: utils.string.t('claims.processing.tasksGridColumns.description'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsManagement.team'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'assignedTo',\r\n      label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateCreated',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdDate'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'targetDate',\r\n      label: utils.string.t('claims.columns.claimsList.targetDueDate'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      label: utils.string.t('claims.columns.claimsManagement.priority'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'status',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'taskCompleted',\r\n      label: utils.string.t('claims.columns.claimsManagement.taskCompleted'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <LossActionView\r\n      items={{ ...lossActionsItems, items: itemsFiltered }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      tableFilterFields={tableFilterFields}\r\n      handlers={{\r\n        search: handleSearch,\r\n        filter: handleFilter,\r\n        resetFilter: handleResetFilter,\r\n        resetSearch: handleResetSearch,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}