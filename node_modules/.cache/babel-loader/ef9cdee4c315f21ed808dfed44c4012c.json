{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditUser\\\\AddEditUser.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './AddEditUser.styles';\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormSelect, FormText, FormAutocompleteMui, FormSwitch, Translate } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { Divider, Fade, makeStyles, Collapse } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditUserView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  isLoading: PropTypes.bool,\n  userId: PropTypes.number,\n  programmes: PropTypes.shape({\n    programmesUserId: PropTypes.string,\n    handleAddToProgrammes: PropTypes.func\n  })\n};\nexport function AddEditUserView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      userId = _ref.userId,\n      programmes = _ref.programmes,\n      isLoading = _ref.isLoading;\n  var classes = makeStyles(styles, {\n    name: 'AddEditUser'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  var getAdminField = function getAdminField(fieldName, role) {\n    var field = utils.form.getFieldProps(fields, fieldName);\n\n    if (role === constants.ROLE_COBROKER || role === constants.ROLE_UNDERWRITER) {\n      setValue(fieldName, false);\n    }\n\n    return _objectSpread(_objectSpread({}, field), {}, {\n      muiComponentProps: _objectSpread(_objectSpread({}, field.muiComponentProps), (role === constants.ROLE_COBROKER || role === constants.ROLE_UNDERWRITER) && {\n        disabled: true\n      })\n    });\n  };\n\n  var watchRoleField = function watchRoleField(fieldName, role) {\n    var field = utils.form.getFieldProps(fields, fieldName);\n\n    if (role === constants.ROLE_UNDERWRITER) {\n      setValue(fieldName, []);\n    }\n\n    return field;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      \"in\": !isLoading,\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleSubmit(onSubmit),\n        \"data-testid\": \"form-addUser\",\n        children: [/*#__PURE__*/_jsxDEV(FormFields, {\n          type: \"dialog\",\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstName')), {}, {\n                control: control,\n                error: errors.firstName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lastName')), {}, {\n                control: control,\n                error: errors.lastName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'emailId')), {}, {\n                control: control,\n                error: errors.emailId\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'contactPhone')), {}, {\n                control: control,\n                error: errors.contactPhone\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'role')), {}, {\n                  error: errors.role,\n                  control: control\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 6,\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread({\n                      size: \"small\",\n                      control: control\n                    }, getAdminField('isAdmin', watch('role'))), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 6,\n                    sm: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread({\n                      control: control\n                    }, getAdminField('isReportAdmin', watch('role'))), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Collapse, {\n                \"in\": watch('role') !== constants.ROLE_UNDERWRITER,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, watchRoleField('departments', watch('role'))), {}, {\n                  control: control,\n                  error: errors.departments,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Collapse, {\n                \"in\": watch('role') === constants.ROLE_COBROKER,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, watchRoleField('offices', watch('role'))), {}, {\n                  control: control,\n                  error: errors.clients,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), userId ? /*#__PURE__*/_jsxDEV(Collapse, {\n          \"in\": watch('role') === constants.ROLE_BROKER || watch('role') === constants.ROLE_UNDERWRITER,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n            type: \"dialog\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              spacing: 1,\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Translate, {\n                  variant: \"h3\",\n                  label: \"admin.quoteBindTitle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), programmes.programmesUserId ? /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread({\n                  size: \"small\",\n                  control: control\n                }, getAdminField('coverholder', watch('role'))), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'products', control, errors)), {}, {\n                  control: control,\n                  error: errors.products,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'clients')), {}, {\n                  control: control,\n                  error: errors.clients,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'carriers')), {}, {\n                  control: control,\n                  error: errors.carriers,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n              spacing: 1,\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  text: utils.string.t('products.admin.addTo'),\n                  color: \"primary\",\n                  onClick: programmes.handleAddToProgrammes,\n                  disabled: formState.isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(FormActions, {\n          type: \"dialog\",\n          children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n            text: cancel.label,\n            variant: \"text\",\n            onClick: onCancel,\n            disabled: formState.isSubmitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 24\n          }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n            text: submit.label,\n            type: \"submit\",\n            disabled: formState.isSubmitting || !formState.isDirty,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditUserView, \"oU0MUN1NDMNeZ+SYwaEt2m/4fwY=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEditUserView;\nAddEditUserView.displayName = \"AddEditUserView\";\nAddEditUserView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddEditUserView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"userId\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"programmes\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"programmesUserId\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"handleAddToProgrammes\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditUser\\\\AddEditUser.view.js\"] = {\n    name: \"AddEditUserView\",\n    docgenInfo: AddEditUserView.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditUser\\\\AddEditUser.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditUserView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditUser/AddEditUser.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormContainer","FormFields","FormActions","FormGrid","FormSelect","FormText","FormAutocompleteMui","FormSwitch","Translate","utils","constants","Divider","Fade","makeStyles","Collapse","AddEditUserView","propTypes","fields","array","actions","isLoading","bool","userId","number","programmes","shape","programmesUserId","string","handleAddToProgrammes","func","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","reset","errors","handleSubmit","formState","setValue","cancel","find","action","submit","onCancel","generic","isFunction","handler","onSubmit","data","getAdminField","fieldName","role","field","getFieldProps","ROLE_COBROKER","ROLE_UNDERWRITER","muiComponentProps","disabled","watchRoleField","root","firstName","lastName","emailId","contactPhone","departments","id","value","clients","ROLE_BROKER","products","carriers","t","isSubmitting","label","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './AddEditUser.styles';\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormFields,\r\n  FormActions,\r\n  FormGrid,\r\n  FormSelect,\r\n  FormText,\r\n  FormAutocompleteMui,\r\n  FormSwitch,\r\n  Translate,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Divider, Fade, makeStyles, Collapse } from '@material-ui/core';\r\n\r\nAddEditUserView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n  userId: PropTypes.number,\r\n  programmes: PropTypes.shape({\r\n    programmesUserId: PropTypes.string,\r\n    handleAddToProgrammes: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function AddEditUserView({ fields, actions, userId, programmes, isLoading }) {\r\n  const classes = makeStyles(styles, { name: 'AddEditUser' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, watch, reset, errors, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  const getAdminField = (fieldName, role) => {\r\n    const field = utils.form.getFieldProps(fields, fieldName);\r\n\r\n    if (role === constants.ROLE_COBROKER || role === constants.ROLE_UNDERWRITER) {\r\n      setValue(fieldName, false);\r\n    }\r\n\r\n    return {\r\n      ...field,\r\n      muiComponentProps: {\r\n        ...field.muiComponentProps,\r\n        ...((role === constants.ROLE_COBROKER || role === constants.ROLE_UNDERWRITER) && { disabled: true }),\r\n      },\r\n    };\r\n  };\r\n\r\n  const watchRoleField = (fieldName, role) => {\r\n    const field = utils.form.getFieldProps(fields, fieldName);\r\n\r\n    if (role === constants.ROLE_UNDERWRITER) {\r\n      setValue(fieldName, []);\r\n    }\r\n\r\n    return field;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fade in={!isLoading}>\r\n        <FormContainer onSubmit={handleSubmit(onSubmit)} data-testid=\"form-addUser\">\r\n          <FormFields type=\"dialog\">\r\n            <FormGrid container>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'firstName')} control={control} error={errors.firstName} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'lastName')} control={control} error={errors.lastName} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid container>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'emailId')} control={control} error={errors.emailId} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'contactPhone')} control={control} error={errors.contactPhone} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={6}>\r\n                  <FormSelect {...utils.form.getFieldProps(fields, 'role')} error={errors.role} control={control} />\r\n                </FormGrid>\r\n                <FormGrid item xs={6}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={6} sm={6}>\r\n                      <FormSwitch size=\"small\" control={control} {...getAdminField('isAdmin', watch('role'))} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} sm={6}>\r\n                      <FormSwitch control={control} {...getAdminField('isReportAdmin', watch('role'))} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid container>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <Collapse in={watch('role') !== constants.ROLE_UNDERWRITER}>\r\n                  <FormAutocompleteMui\r\n                    {...watchRoleField('departments', watch('role'))}\r\n                    control={control}\r\n                    error={errors.departments}\r\n                    handleUpdate={(id, value) => {\r\n                      setValue(id, value);\r\n                    }}\r\n                  />\r\n                </Collapse>\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <Collapse in={watch('role') === constants.ROLE_COBROKER}>\r\n                  <FormAutocompleteMui\r\n                    {...watchRoleField('offices', watch('role'))}\r\n                    control={control}\r\n                    error={errors.clients}\r\n                    handleUpdate={(id, value) => {\r\n                      setValue(id, value);\r\n                    }}\r\n                  />\r\n                </Collapse>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormFields>\r\n\r\n          {userId ? (\r\n            <Collapse in={watch('role') === constants.ROLE_BROKER || watch('role') === constants.ROLE_UNDERWRITER}>\r\n              <Divider />\r\n              <FormFields type=\"dialog\">\r\n                <FormGrid spacing={1} container>\r\n                  <FormGrid item xs={12}>\r\n                    <Translate variant=\"h3\" label=\"admin.quoteBindTitle\" />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                {programmes.programmesUserId ? (\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormSwitch size=\"small\" control={control} {...getAdminField('coverholder', watch('role'))} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6}>\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(fields, 'products', control, errors)}\r\n                        control={control}\r\n                        error={errors.products}\r\n                        handleUpdate={(id, value) => {\r\n                          setValue(id, value);\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6}>\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(fields, 'clients')}\r\n                        control={control}\r\n                        error={errors.clients}\r\n                        handleUpdate={(id, value) => {\r\n                          setValue(id, value);\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6}>\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(fields, 'carriers')}\r\n                        control={control}\r\n                        error={errors.carriers}\r\n                        handleUpdate={(id, value) => {\r\n                          setValue(id, value);\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                ) : (\r\n                  <FormGrid spacing={1} container>\r\n                    <FormGrid item xs={12} sm={12}>\r\n                      <Button\r\n                        text={utils.string.t('products.admin.addTo')}\r\n                        color=\"primary\"\r\n                        onClick={programmes.handleAddToProgrammes}\r\n                        disabled={formState.isSubmitting}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                )}\r\n              </FormFields>\r\n            </Collapse>\r\n          ) : null}\r\n\r\n          <FormActions type=\"dialog\">\r\n            {cancel && <Button text={cancel.label} variant=\"text\" onClick={onCancel} disabled={formState.isSubmitting} />}\r\n            {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting || !formState.isDirty} color=\"primary\" />}\r\n          </FormActions>\r\n        </FormContainer>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}