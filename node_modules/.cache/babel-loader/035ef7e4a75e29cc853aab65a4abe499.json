{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddMarket\\\\AddMarket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport get from 'lodash/get';\nimport isNumber from 'lodash/isNumber'; // app\n\nimport { AddMarketView } from './AddMarket.view';\nimport styles from './AddMarket.styles';\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\nimport { postPlacementAddPolicyMarket, filterReferenceDataUnderWritersByMarket, resetReferenceDataMarkets, resetReferenceDataUnderwriters, getReferenceDataByType, selectFormattedAccountStatusList, selectRefDataUnderwriters, selectRefDataStatusesMarketQuote, selectRefDataCapacityTypes } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, InputAdornment } from '@material-ui/core';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAddMarket.propTypes = {\n  policy: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function AddMarket(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$policy = _ref.policy,\n      policy = _ref$policy === void 0 ? {} : _ref$policy,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'AddMarket'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      quoteVisible = _useState2[0],\n      setQuoteVisible = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nonPFMarket = _useState4[0],\n      setNonPFMarket = _useState4[1];\n\n  var refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\n  var refDataUnderwriters = useSelector(selectRefDataUnderwriters);\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\n  var currencyCode = get(policy, 'currency.code');\n  var markets = get(policy, 'markets', []) || [];\n  var marketsInUse = markets.map(function (marketObj) {\n    return marketObj.market.id;\n  });\n  useEffect(function () {\n    dispatch(resetReferenceDataMarkets());\n    dispatch(resetReferenceDataUnderwriters());\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var isAmountRequired = function isAmountRequired(form, value) {\n    if (isNumber(value)) return true;\n    var statusQuotedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\n    return !form.status || form.status !== statusQuotedId.toString();\n  };\n\n  var isQuoteDirty = function isQuoteDirty(form) {\n    return !!form.status || form.isLeader || form.lineToStand || !!form.premium || form.premium === 0 || !!form.writtenLinePercentage || form.writtenLinePercentage === 0 || !!form.subjectivities || !!form.validUntilDate;\n  };\n\n  var filterMarketsInUse = function filterMarketsInUse(marketsInUse) {\n    return function (list) {\n      return list.filter(function (item) {\n        return !marketsInUse.includes(item.id);\n      });\n    };\n  };\n\n  var updateUnderwriters = function updateUnderwriters(data) {\n    dispatch(filterReferenceDataUnderWritersByMarket(data));\n  };\n\n  var getOptions = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getReferenceDataByType.apply(void 0, _args));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOptions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getMarketDetail = function getMarketDetail(_ref3) {\n    var gxbBeReference = _ref3.gxbBeReference,\n        address = _ref3.address;\n    var addressStr = utils.market.getAddress(address);\n    if (!gxbBeReference && !addressStr) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [gxbBeReference && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('placement.generic.gxbBeReference'), \": \", gxbBeReference, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, _this), addressStr && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('app.address'), \": \", addressStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var renderOptions = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, searchTerm) {\n      var orderBy, options, optionsWithStatus;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              orderBy = formattedAccountStatusList.map(function (status) {\n                return status.id;\n              });\n              _context2.next = 3;\n              return getOptions(type, searchTerm);\n\n            case 3:\n              options = _context2.sent;\n              optionsWithStatus = options.map(function (option) {\n                var marketDetail = getMarketDetail(option);\n                return _objectSpread(_objectSpread({}, option), {}, {\n                  label: /*#__PURE__*/_jsxDEV(OptionDetail, {\n                    label: option.edgeName,\n                    detail: marketDetail,\n                    children: /*#__PURE__*/_jsxDEV(Restricted, {\n                      include: [constants.ROLE_BROKER],\n                      children: /*#__PURE__*/_jsxDEV(StatusIcon, {\n                        translationPath: \"statusMarket\",\n                        list: formattedAccountStatusList,\n                        id: option.statusId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 11\n                  }, _this)\n                });\n              });\n              return _context2.abrupt(\"return\", optionsWithStatus.sort(function (a, b) {\n                return orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function renderOptions(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fields = [{\n    name: 'policy',\n    type: 'hidden',\n    value: policy.id\n  }, {\n    name: 'market',\n    type: 'autocomplete',\n    label: utils.string.t('placement.form.market.label'),\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('validation.required'))).required(utils.string.t('validation.required')),\n    innerComponentProps: {\n      isCreatable: true,\n      valueLabel: 'edgeName',\n      allowEmpty: true,\n      async: {\n        handler: renderOptions,\n        type: 'market',\n        filter: filterMarketsInUse(marketsInUse)\n      }\n    },\n    muiComponentProps: {\n      autoFocus: true,\n      'data-testid': 'market'\n    }\n  }, {\n    name: 'underwriter',\n    type: 'autocomplete',\n    label: utils.string.t('placement.form.underwriter.label'),\n    hint: refDataUnderwriters.length > 0 ? '' : utils.string.t('placement.form.underwriter.hint'),\n    value: [],\n    options: refDataUnderwriters.map(function (uw) {\n      uw.label = utils.user.fullname(uw);\n      return uw;\n    }),\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array(),\n    innerComponentProps: {\n      isCreatable: true,\n      allowEmpty: true\n    },\n    muiComponentProps: {\n      'data-testid': 'underwriter'\n    }\n  }, {\n    name: 'status',\n    type: 'select',\n    value: '',\n    options: refDataStatusesMarketQuote,\n    optionKey: 'id',\n    optionLabel: 'code',\n    validation: Yup.string().test('status', utils.string.t('validation.required'), function () {\n      return quoteVisible && isQuoteDirty(this.options.parent) ? this.options.parent.status : true;\n    }),\n    label: utils.string.t('placement.form.status.label'),\n    muiComponentProps: {\n      autoFocus: quoteVisible\n    }\n  }, {\n    name: 'quoteOptions',\n    type: 'checkbox',\n    options: [{\n      label: utils.string.t('placement.form.lead.label'),\n      name: 'isLeader',\n      value: false\n    }, {\n      label: utils.string.t('placement.form.lineToStand.label'),\n      name: 'lineToStand',\n      value: false\n    }]\n  }, {\n    name: 'currency',\n    type: 'text',\n    value: currencyCode || '',\n    label: utils.string.t('placement.form.currency.label'),\n    muiComponentProps: {\n      InputProps: {\n        readOnly: true,\n        disabled: true\n      }\n    }\n  }, {\n    name: 'premium',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('premium', utils.string.t('validation.required'), function (v) {\n      return quoteVisible && isQuoteDirty(this.options.parent) ? isAmountRequired(this.options.parent, this.options.parent.premium) : true;\n    }),\n    label: utils.string.t('placement.form.premium.label'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }, {\n    name: 'writtenLinePercentage',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).max(100).percent().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('writtenLinePercentage', utils.string.t('validation.required'), function () {\n      return quoteVisible && isQuoteDirty(this.options.parent) ? isAmountRequired(this.options.parent, this.options.parent.writtenLinePercentage) : true;\n    }),\n    label: utils.string.t('placement.form.written.label'),\n    muiComponentProps: {\n      autoComplete: 'off',\n      fullWidth: false,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          className: classes.iconWritten,\n          children: /*#__PURE__*/_jsxDEV(GavelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }\n    }\n  }, {\n    name: 'subjectivities',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.subjectivities.label'),\n    muiComponentProps: {\n      multiline: true,\n      minRows: 2,\n      maxRows: 6\n    }\n  }, {\n    name: 'quoteDate',\n    type: 'datepicker',\n    icon: 'TodayIcon',\n    label: utils.string.t('placement.form.dateFrom.label'),\n    value: utils.date.today(),\n    validation: Yup.string().nullable().test('quoteDate', utils.string.t('validation.required'), function () {\n      return quoteVisible && isQuoteDirty(this.options.parent) ? this.options.parent.quoteDate : true;\n    }),\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }, {\n    name: 'validUntilDate',\n    type: 'datepicker',\n    label: utils.string.t('placement.form.dateExpiry.label'),\n    value: null,\n    validation: Yup.string().nullable(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    muiPickerProps: {\n      clearable: true\n    }\n  }, {\n    name: 'capacityTypeId',\n    type: 'select',\n    value: '',\n    options: refDataCapacityTypes,\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('placement.form.capacityType.label')\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler() {\n      if (nonPFMarket) {\n        var _ref5 = arguments.length <= 0 ? undefined : arguments[0],\n            market = _ref5.market,\n            capacityTypeId = _ref5.capacityTypeId,\n            rest = _objectWithoutProperties(_ref5, [\"market\", \"capacityTypeId\"]);\n\n        return dispatch(postPlacementAddPolicyMarket(_objectSpread(_objectSpread({}, rest), {}, {\n          nonPFMarket: {\n            capacityTypeId: capacityTypeId,\n            name: nonPFMarket.name\n          }\n        })));\n      } else {\n        return dispatch(postPlacementAddPolicyMarket.apply(void 0, arguments));\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(AddMarketView, {\n    fields: fields,\n    actions: actions,\n    nonPFMarket: nonPFMarket,\n    setNonPFMarket: setNonPFMarket,\n    isQuoteVisible: quoteVisible,\n    handleShowQuote: setQuoteVisible,\n    handleUpdateUnderwriters: updateUnderwriters\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMarket, \"7dbD9QVZ62FJ+B6wtlO3Zb9qWfA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AddMarket;\nAddMarket.displayName = \"AddMarket\";\nAddMarket.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddMarket\",\n  \"props\": {\n    \"policy\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddMarket\\\\AddMarket.js\"] = {\n    name: \"AddMarket\",\n    docgenInfo: AddMarket.__docgenInfo,\n    path: \"src\\\\forms\\\\AddMarket\\\\AddMarket.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMarket\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddMarket/AddMarket.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","get","isNumber","AddMarketView","styles","StatusIcon","Restricted","OptionDetail","postPlacementAddPolicyMarket","filterReferenceDataUnderWritersByMarket","resetReferenceDataMarkets","resetReferenceDataUnderwriters","getReferenceDataByType","selectFormattedAccountStatusList","selectRefDataUnderwriters","selectRefDataStatusesMarketQuote","selectRefDataCapacityTypes","constants","utils","makeStyles","InputAdornment","GavelIcon","AddMarket","propTypes","policy","object","isRequired","handleClose","func","dispatch","classes","name","quoteVisible","setQuoteVisible","nonPFMarket","setNonPFMarket","refDataCapacityTypes","refDataUnderwriters","refDataStatusesMarketQuote","formattedAccountStatusList","currencyCode","markets","marketsInUse","map","marketObj","market","id","isAmountRequired","form","value","statusQuotedId","referenceData","status","getIdByCode","STATUS_MARKET_QUOTED","toString","isQuoteDirty","isLeader","lineToStand","premium","writtenLinePercentage","subjectivities","validUntilDate","filterMarketsInUse","list","filter","item","includes","updateUnderwriters","data","getOptions","getMarketDetail","gxbBeReference","address","addressStr","getAddress","string","t","renderOptions","type","searchTerm","orderBy","options","optionsWithStatus","option","marketDetail","label","edgeName","ROLE_BROKER","statusId","sort","a","b","indexOf","fields","optionKey","optionLabel","validation","array","of","mixed","required","innerComponentProps","isCreatable","valueLabel","allowEmpty","async","handler","muiComponentProps","autoFocus","hint","length","uw","user","fullname","test","parent","InputProps","readOnly","disabled","number","nullable","min","currency","transform","originalvalue","isType","Number","isNaN","v","autoComplete","max","percent","fullWidth","startAdornment","iconWritten","multiline","minRows","maxRows","icon","date","today","quoteDate","muiPickerProps","clearable","actions","capacityTypeId","rest"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\nimport isNumber from 'lodash/isNumber';\r\n\r\n// app\r\nimport { AddMarketView } from './AddMarket.view';\r\nimport styles from './AddMarket.styles';\r\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\r\nimport {\r\n  postPlacementAddPolicyMarket,\r\n  filterReferenceDataUnderWritersByMarket,\r\n  resetReferenceDataMarkets,\r\n  resetReferenceDataUnderwriters,\r\n  getReferenceDataByType,\r\n  selectFormattedAccountStatusList,\r\n  selectRefDataUnderwriters,\r\n  selectRefDataStatusesMarketQuote,\r\n  selectRefDataCapacityTypes,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, InputAdornment } from '@material-ui/core';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\n\r\nAddMarket.propTypes = {\r\n  policy: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function AddMarket({ policy = {}, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'AddMarket' })();\r\n  const [quoteVisible, setQuoteVisible] = useState(false);\r\n  const [nonPFMarket, setNonPFMarket] = useState();\r\n  const refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\r\n  const refDataUnderwriters = useSelector(selectRefDataUnderwriters);\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\r\n\r\n  const currencyCode = get(policy, 'currency.code');\r\n  const markets = get(policy, 'markets', []) || [];\r\n  const marketsInUse = markets.map((marketObj) => marketObj.market.id);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(resetReferenceDataMarkets());\r\n      dispatch(resetReferenceDataUnderwriters());\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const isAmountRequired = (form, value) => {\r\n    if (isNumber(value)) return true;\r\n\r\n    const statusQuotedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n    return !form.status || form.status !== statusQuotedId.toString();\r\n  };\r\n\r\n  const isQuoteDirty = (form) => {\r\n    return (\r\n      !!form.status ||\r\n      form.isLeader ||\r\n      form.lineToStand ||\r\n      !!form.premium ||\r\n      form.premium === 0 ||\r\n      !!form.writtenLinePercentage ||\r\n      form.writtenLinePercentage === 0 ||\r\n      !!form.subjectivities ||\r\n      !!form.validUntilDate\r\n    );\r\n  };\r\n\r\n  const filterMarketsInUse = (marketsInUse) => (list) => {\r\n    return list.filter((item) => {\r\n      return !marketsInUse.includes(item.id);\r\n    });\r\n  };\r\n\r\n  const updateUnderwriters = (data) => {\r\n    dispatch(filterReferenceDataUnderWritersByMarket(data));\r\n  };\r\n\r\n  const getOptions = async (...args) => {\r\n    return await dispatch(getReferenceDataByType(...args));\r\n  };\r\n\r\n  const getMarketDetail = ({ gxbBeReference, address }) => {\r\n    const addressStr = utils.market.getAddress(address);\r\n    if (!gxbBeReference && !addressStr) return;\r\n\r\n    return (\r\n      <>\r\n        {gxbBeReference && (\r\n          <span>\r\n            {utils.string.t('placement.generic.gxbBeReference')}: {gxbBeReference}\r\n            <br />\r\n          </span>\r\n        )}\r\n        {addressStr && (\r\n          <span>\r\n            {utils.string.t('app.address')}: {addressStr}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderOptions = async (type, searchTerm) => {\r\n    const orderBy = formattedAccountStatusList.map((status) => status.id);\r\n    const options = await getOptions(type, searchTerm);\r\n    const optionsWithStatus = options.map((option) => {\r\n      const marketDetail = getMarketDetail(option);\r\n      return {\r\n        ...option,\r\n        label: (\r\n          <OptionDetail label={option.edgeName} detail={marketDetail}>\r\n            <Restricted include={[constants.ROLE_BROKER]}>\r\n              <StatusIcon translationPath=\"statusMarket\" list={formattedAccountStatusList} id={option.statusId} />\r\n            </Restricted>\r\n          </OptionDetail>\r\n        ),\r\n      };\r\n    });\r\n\r\n    return optionsWithStatus.sort((a, b) => orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId));\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'policy',\r\n      type: 'hidden',\r\n      value: policy.id,\r\n    },\r\n    {\r\n      name: 'market',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('placement.form.market.label'),\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('validation.required')))\r\n        .required(utils.string.t('validation.required')),\r\n      innerComponentProps: {\r\n        isCreatable: true,\r\n        valueLabel: 'edgeName',\r\n        allowEmpty: true,\r\n        async: {\r\n          handler: renderOptions,\r\n          type: 'market',\r\n          filter: filterMarketsInUse(marketsInUse),\r\n        },\r\n      },\r\n      muiComponentProps: {\r\n        autoFocus: true,\r\n        'data-testid': 'market',\r\n      },\r\n    },\r\n    {\r\n      name: 'underwriter',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('placement.form.underwriter.label'),\r\n      hint: refDataUnderwriters.length > 0 ? '' : utils.string.t('placement.form.underwriter.hint'),\r\n      value: [],\r\n      options: refDataUnderwriters.map((uw) => {\r\n        uw.label = utils.user.fullname(uw);\r\n        return uw;\r\n      }),\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array(),\r\n      innerComponentProps: {\r\n        isCreatable: true,\r\n        allowEmpty: true,\r\n      },\r\n      muiComponentProps: {\r\n        'data-testid': 'underwriter',\r\n      },\r\n    },\r\n    {\r\n      name: 'status',\r\n      type: 'select',\r\n      value: '',\r\n      options: refDataStatusesMarketQuote,\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n      validation: Yup.string().test('status', utils.string.t('validation.required'), function () {\r\n        return quoteVisible && isQuoteDirty(this.options.parent) ? this.options.parent.status : true;\r\n      }),\r\n      label: utils.string.t('placement.form.status.label'),\r\n      muiComponentProps: {\r\n        autoFocus: quoteVisible,\r\n      },\r\n    },\r\n    {\r\n      name: 'quoteOptions',\r\n      type: 'checkbox',\r\n      options: [\r\n        { label: utils.string.t('placement.form.lead.label'), name: 'isLeader', value: false },\r\n        { label: utils.string.t('placement.form.lineToStand.label'), name: 'lineToStand', value: false },\r\n      ],\r\n    },\r\n    {\r\n      name: 'currency',\r\n      type: 'text',\r\n      value: currencyCode || '',\r\n      label: utils.string.t('placement.form.currency.label'),\r\n      muiComponentProps: {\r\n        InputProps: {\r\n          readOnly: true,\r\n          disabled: true,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'premium',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('premium', utils.string.t('validation.required'), function (v) {\r\n          return quoteVisible && isQuoteDirty(this.options.parent)\r\n            ? isAmountRequired(this.options.parent, this.options.parent.premium)\r\n            : true;\r\n        }),\r\n      label: utils.string.t('placement.form.premium.label'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n    {\r\n      name: 'writtenLinePercentage',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .max(100)\r\n        .percent()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('writtenLinePercentage', utils.string.t('validation.required'), function () {\r\n          return quoteVisible && isQuoteDirty(this.options.parent)\r\n            ? isAmountRequired(this.options.parent, this.options.parent.writtenLinePercentage)\r\n            : true;\r\n        }),\r\n      label: utils.string.t('placement.form.written.label'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        fullWidth: false,\r\n        InputProps: {\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\" className={classes.iconWritten}>\r\n              <GavelIcon />\r\n            </InputAdornment>\r\n          ),\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'subjectivities',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.subjectivities.label'),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 2,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n    {\r\n      name: 'quoteDate',\r\n      type: 'datepicker',\r\n      icon: 'TodayIcon',\r\n      label: utils.string.t('placement.form.dateFrom.label'),\r\n      value: utils.date.today(),\r\n      validation: Yup.string()\r\n        .nullable()\r\n        .test('quoteDate', utils.string.t('validation.required'), function () {\r\n          return quoteVisible && isQuoteDirty(this.options.parent) ? this.options.parent.quoteDate : true;\r\n        }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'validUntilDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('placement.form.dateExpiry.label'),\r\n      value: null,\r\n      validation: Yup.string().nullable(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      muiPickerProps: {\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'capacityTypeId',\r\n      type: 'select',\r\n      value: '',\r\n      options: refDataCapacityTypes,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('placement.form.capacityType.label'),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (...args) => {\r\n        if (nonPFMarket) {\r\n          const { market, capacityTypeId, ...rest } = args[0];\r\n          return dispatch(postPlacementAddPolicyMarket({ ...rest, nonPFMarket: { capacityTypeId, name: nonPFMarket.name } }));\r\n        } else {\r\n          return dispatch(postPlacementAddPolicyMarket(...args));\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AddMarketView\r\n      fields={fields}\r\n      actions={actions}\r\n      nonPFMarket={nonPFMarket}\r\n      setNonPFMarket={setNonPFMarket}\r\n      isQuoteVisible={quoteVisible}\r\n      handleShowQuote={setQuoteVisible}\r\n      handleUpdateUnderwriters={updateUnderwriters}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}