{"ast":null,"code":"import _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LayerTableRow\\\\LayerTableRow.js\";\nimport React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport get from 'lodash/get'; // app\n\nimport styles from './LayerTableRow.styles';\nimport { TableCell, TrafficLights, Translate } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { withStyles, TableRow } from '@material-ui/core'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    referenceDataStatusesPolicy: get(state, 'referenceData.statuses.policy', []),\n    referenceDataStatusesPolicyMarketQuote: get(state, 'referenceData.statuses.policyMarketQuote', [])\n  };\n};\n\nexport var LayerTableRow = /*#__PURE__*/function (_PureComponent) {\n  _inherits(LayerTableRow, _PureComponent);\n\n  var _super = _createSuper(LayerTableRow);\n\n  function LayerTableRow() {\n    _classCallCheck(this, LayerTableRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LayerTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          layer = _this$props.layer,\n          markets = _this$props.markets,\n          showPremium = _this$props.showPremium,\n          showWritten = _this$props.showWritten,\n          showSigned = _this$props.showSigned,\n          showStatus = _this$props.showStatus,\n          referenceDataStatusesPolicyMarketQuote = _this$props.referenceDataStatusesPolicyMarketQuote,\n          children = _this$props.children,\n          classes = _this$props.classes,\n          showHeaderRow = _this$props.showHeaderRow;\n      var statusPendingId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_PENDING);\n      var statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\n      var statusDeclinedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_DECLINED);\n      var currency = utils.markets.getCurrency(markets);\n      var marketsQuoted = utils.markets.getByStatusIds(utils.layer.getMarkets(layer), [statusQuotedId]);\n      var layerPremiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\n      var hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\n      var hasPremium = layerPremiumByCurrency[currency];\n      var layerWritten = utils.markets.getLineSize(marketsQuoted);\n      var layerSigned = utils.markets.getLineSize(marketsQuoted, true);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [children, showHeaderRow && /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.row,\n          \"data-testid\": \"layer-row\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            minimal: true,\n            colSpan: 3,\n            \"data-testid\": \"layer-main-cell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), showPremium && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"layer-premium-cell\",\n            children: hasMultiplePremiums || !currency ? utils.string.t('app.various') : /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.currency\",\n              options: {\n                value: {\n                  number: Boolean(layerPremiumByCurrency[currency]) ? layerPremiumByCurrency[currency] : null,\n                  currency: hasPremium ? currency : '',\n                  \"default\": '-'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), showWritten && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"layer-written-cell\",\n            children: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.percent\",\n              options: {\n                value: {\n                  number: layerWritten\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), showSigned && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"layer-signed-cell\",\n            children: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.percent\",\n              options: {\n                value: {\n                  number: layerSigned,\n                  \"default\": '-'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), showStatus && /*#__PURE__*/_jsxDEV(TableCell, {\n            compact: true,\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"layer-status-cell\",\n            children: markets && markets.length > 0 && /*#__PURE__*/_jsxDEV(TrafficLights, {\n              tooltip: true,\n              green: utils.markets.getByStatusIds(markets, [statusQuotedId]).length,\n              yellow: utils.markets.getByStatusIds(markets, [statusPendingId]).length,\n              red: utils.markets.getByStatusIds(markets, [statusDeclinedId]).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            minimal: true,\n            colSpan: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return LayerTableRow;\n}(PureComponent);\nLayerTableRow.displayName = \"LayerTableRow\";\n\n_defineProperty(LayerTableRow, \"propTypes\", {\n  layer: PropTypes.object.isRequired,\n  markets: PropTypes.array,\n  showPremium: PropTypes.bool,\n  showWritten: PropTypes.bool,\n  showSigned: PropTypes.bool,\n  showStatus: PropTypes.bool\n});\n\n_defineProperty(LayerTableRow, \"defaultProps\", {\n  printView: false,\n  showHeaderRow: true\n});\n\nLayerTableRow.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LayerTableRow\",\n  \"props\": {\n    \"printView\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"showHeaderRow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"layer\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"markets\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showPremium\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showWritten\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showSigned\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showStatus\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default compose(connect(mapStateToProps, null), withStyles(styles))(LayerTableRow);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\LayerTableRow\\\\LayerTableRow.js\"] = {\n    name: \"LayerTableRow\",\n    docgenInfo: LayerTableRow.__docgenInfo,\n    path: \"src\\\\modules\\\\LayerTableRow\\\\LayerTableRow.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LayerTableRow/LayerTableRow.js"],"names":["React","Fragment","PureComponent","PropTypes","connect","compose","get","styles","TableCell","TrafficLights","Translate","utils","constants","withStyles","TableRow","mapStateToProps","state","referenceDataStatusesPolicy","referenceDataStatusesPolicyMarketQuote","LayerTableRow","props","layer","markets","showPremium","showWritten","showSigned","showStatus","children","classes","showHeaderRow","statusPendingId","referenceData","status","getIdByCode","STATUS_MARKET_PENDING","statusQuotedId","STATUS_MARKET_QUOTED","statusDeclinedId","STATUS_MARKET_DECLINED","currency","getCurrency","marketsQuoted","getByStatusIds","getMarkets","layerPremiumByCurrency","getPremiumByCurrency","hasMultiplePremiums","hasPremium","layerWritten","getLineSize","layerSigned","row","string","t","value","number","Boolean","length","object","isRequired","array","bool","printView"],"mappings":"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","sourcesContent":["import React, { Fragment, PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './LayerTableRow.styles';\r\nimport { TableCell, TrafficLights, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { withStyles, TableRow } from '@material-ui/core';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  referenceDataStatusesPolicy: get(state, 'referenceData.statuses.policy', []),\r\n  referenceDataStatusesPolicyMarketQuote: get(state, 'referenceData.statuses.policyMarketQuote', []),\r\n});\r\n\r\nexport class LayerTableRow extends PureComponent {\r\n  static propTypes = {\r\n    layer: PropTypes.object.isRequired,\r\n    markets: PropTypes.array,\r\n    showPremium: PropTypes.bool,\r\n    showWritten: PropTypes.bool,\r\n    showSigned: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    printView: false,\r\n    showHeaderRow: true,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      layer,\r\n      markets,\r\n      showPremium,\r\n      showWritten,\r\n      showSigned,\r\n      showStatus,\r\n      referenceDataStatusesPolicyMarketQuote,\r\n      children,\r\n      classes,\r\n      showHeaderRow,\r\n    } = this.props;\r\n\r\n    const statusPendingId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_PENDING);\r\n    const statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n    const statusDeclinedId = utils.referenceData.status.getIdByCode(\r\n      referenceDataStatusesPolicyMarketQuote,\r\n      constants.STATUS_MARKET_DECLINED\r\n    );\r\n    const currency = utils.markets.getCurrency(markets);\r\n    const marketsQuoted = utils.markets.getByStatusIds(utils.layer.getMarkets(layer), [statusQuotedId]);\r\n\r\n    const layerPremiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\r\n\r\n    const hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\r\n    const hasPremium = layerPremiumByCurrency[currency];\r\n\r\n    const layerWritten = utils.markets.getLineSize(marketsQuoted);\r\n    const layerSigned = utils.markets.getLineSize(marketsQuoted, true);\r\n\r\n    return (\r\n      <Fragment>\r\n        {/* market rows */}\r\n        {children}\r\n\r\n        {/* layer total row */}\r\n        {showHeaderRow && (\r\n          <TableRow className={classes.row} data-testid=\"layer-row\">\r\n            <TableCell minimal colSpan={3} data-testid=\"layer-main-cell\"></TableCell>\r\n\r\n            {showPremium && (\r\n              <TableCell narrow nowrap center bold data-testid=\"layer-premium-cell\">\r\n                {hasMultiplePremiums || !currency ? (\r\n                  utils.string.t('app.various')\r\n                ) : (\r\n                  <Translate\r\n                    label=\"format.currency\"\r\n                    options={{\r\n                      value: {\r\n                        number: Boolean(layerPremiumByCurrency[currency]) ? layerPremiumByCurrency[currency] : null,\r\n                        currency: hasPremium ? currency : '',\r\n                        default: '-',\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n              </TableCell>\r\n            )}\r\n\r\n            {showWritten && (\r\n              <TableCell narrow nowrap center bold data-testid=\"layer-written-cell\">\r\n                <Translate label=\"format.percent\" options={{ value: { number: layerWritten } }} />\r\n              </TableCell>\r\n            )}\r\n\r\n            {showSigned && (\r\n              <TableCell narrow nowrap center bold data-testid=\"layer-signed-cell\">\r\n                <Translate label=\"format.percent\" options={{ value: { number: layerSigned, default: '-' } }} />\r\n              </TableCell>\r\n            )}\r\n\r\n            {showStatus && (\r\n              <TableCell compact narrow nowrap center bold data-testid=\"layer-status-cell\">\r\n                {markets && markets.length > 0 && (\r\n                  <TrafficLights\r\n                    tooltip\r\n                    green={utils.markets.getByStatusIds(markets, [statusQuotedId]).length}\r\n                    yellow={utils.markets.getByStatusIds(markets, [statusPendingId]).length}\r\n                    red={utils.markets.getByStatusIds(markets, [statusDeclinedId]).length}\r\n                  />\r\n                )}\r\n              </TableCell>\r\n            )}\r\n\r\n            <TableCell minimal colSpan={2} />\r\n          </TableRow>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, null), withStyles(styles))(LayerTableRow);\r\n"]},"metadata":{},"sourceType":"module"}