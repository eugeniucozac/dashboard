{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\DmsDocViewer\\\\DmsDocViewer.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './DmsDocViewer.styles';\nimport { Empty } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\"; //mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nDmsDocViewerView.propTypes = {\n  fileProps: PropTypes.object.isRequired\n};\nexport function DmsDocViewerView(_ref) {\n  var fileProps = _ref.fileProps;\n  var classes = makeStyles(styles, {\n    name: 'DmsDocViewer'\n  })();\n  var url = fileProps.url,\n      ext = fileProps.ext,\n      mimeType = fileProps.mimeType;\n  var isUnSupported = constants.DMS_DOC_VIEW_FORBIDDEN_FORMATS.includes(ext);\n\n  var getFileStyles = function getFileStyles(isUnSupported, mimeType) {\n    if (!isUnSupported || !(mimeType === null || mimeType === void 0 ? void 0 : mimeType.category)) {\n      switch (mimeType === null || mimeType === void 0 ? void 0 : mimeType.category) {\n        case 'application':\n        case 'text':\n          return classes.defaultFrame;\n\n        case 'video':\n        case 'audio':\n          return classes.mediaFrame;\n\n        case 'image':\n          return classes.imageFrame;\n\n        default:\n          return classes.defaultFrame;\n      }\n    } else {\n      return classes.unSupportedDocFrame;\n    }\n  };\n\n  var fileFrameClass = getFileStyles(isUnSupported, mimeType);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [url && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: url,\n        title: \"iframe1\",\n        name: \"iframe1\",\n        id: \"iframe1\",\n        frameborder: \"0\",\n        border: \"0\",\n        cellspacing: \"0\",\n        className: fileFrameClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), isUnSupported && /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('dms.docViewer.noSupport'),\n        text: utils.string.t('dms.docViewer.noSupport'),\n        icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !url && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('dms.docViewer.viewFailure'),\n      text: utils.string.t('dms.docViewer.docFetchFailed'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = DmsDocViewerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsDocViewerView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/DmsDocViewer/DmsDocViewer.view.js"],"names":["React","PropTypes","styles","Empty","utils","constants","makeStyles","Box","DmsDocViewerView","propTypes","fileProps","object","isRequired","classes","name","url","ext","mimeType","isUnSupported","DMS_DOC_VIEW_FORBIDDEN_FORMATS","includes","getFileStyles","category","defaultFrame","mediaFrame","imageFrame","unSupportedDocFrame","fileFrameClass","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './DmsDocViewer.styles';\r\nimport { Empty } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\n\r\n//mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nDmsDocViewerView.propTypes = {\r\n  fileProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function DmsDocViewerView({ fileProps }) {\r\n  const classes = makeStyles(styles, { name: 'DmsDocViewer' })();\r\n\r\n  const { url, ext, mimeType } = fileProps;\r\n  const isUnSupported = constants.DMS_DOC_VIEW_FORBIDDEN_FORMATS.includes(ext);\r\n\r\n  const getFileStyles = (isUnSupported, mimeType) => {\r\n    if (!isUnSupported || !mimeType?.category) {\r\n      switch (mimeType?.category) {\r\n        case 'application':\r\n        case 'text':\r\n          return classes.defaultFrame;\r\n        case 'video':\r\n        case 'audio':\r\n          return classes.mediaFrame;\r\n        case 'image':\r\n          return classes.imageFrame;\r\n        default:\r\n          return classes.defaultFrame;\r\n      }\r\n    } else {\r\n      return classes.unSupportedDocFrame;\r\n    }\r\n  };\r\n\r\n  const fileFrameClass = getFileStyles(isUnSupported, mimeType);\r\n\r\n  return (\r\n    <Box>\r\n      {url && (\r\n        <>\r\n          <iframe\r\n            src={url}\r\n            title=\"iframe1\"\r\n            name=\"iframe1\"\r\n            id=\"iframe1\"\r\n            frameborder=\"0\"\r\n            border=\"0\"\r\n            cellspacing=\"0\"\r\n            className={fileFrameClass}\r\n          />\r\n          {isUnSupported && (\r\n            <Empty\r\n              title={utils.string.t('dms.docViewer.noSupport')}\r\n              text={utils.string.t('dms.docViewer.noSupport')}\r\n              icon={<IconSearchFile />}\r\n              padding\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {!url && (\r\n        <Empty\r\n          title={utils.string.t('dms.docViewer.viewFailure')}\r\n          text={utils.string.t('dms.docViewer.docFetchFailed')}\r\n          icon={<IconSearchFile />}\r\n          padding\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}