{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseRFI\\\\PremiumProcessingCaseRFI.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './PremiumProcessingCaseRFI.styles';\nimport PremiumProcessingCaseRFIView from './PremiumProcessingCaseRFI.view';\nimport { getCaseRfiSubTabData, selectcaseRfiSubTabs, selectUser, selectCaseRfiDetails, hideModal, getCaseRFIDetails, selectUserEmail, selectUsersInRoles, getUsersForRole, selectRfiHistory, getViewTableDocuments } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseRFI.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  caseId: PropTypes.string.isRequired,\n  caseDetailsObject: PropTypes.object.isRequired,\n  isPageDirty: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    setIsPageDirty: PropTypes.func.isRequired,\n    confirmNavigation: PropTypes.func.isRequired\n  })\n};\n\nfunction PremiumProcessingCaseRFI(_ref) {\n  _s();\n\n  var _params$subtab,\n      _this = this;\n\n  var taskId = _ref.taskId,\n      caseId = _ref.caseId,\n      caseDetailsObject = _ref.caseDetailsObject,\n      isPageDirty = _ref.isPageDirty,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseRFI'\n  })();\n  var dispatch = useDispatch();\n  var params = useParams();\n  var history = useHistory();\n  var isNewRfiUsersFetched = useRef(false);\n  var rfiSubTabs = useSelector(selectcaseRfiSubTabs);\n  var caseRfiDetails = useSelector(selectCaseRfiDetails);\n  var userEmail = useSelector(selectUserEmail);\n  var newRfiUsers = useSelector(selectUsersInRoles);\n  var user = useSelector(selectUser);\n  var caseRfiHistory = useSelector(selectRfiHistory);\n  var rfiCaseId = caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.caseId;\n  var isWorklist = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.taskView) === constants.WORKLIST;\n  var hasRfiTabPermission = utils.app.access.feature('premiumProcessing.RFITab', ['read'], user);\n  var newRfiTab = {\n    value: constants.PREMIUM_PROCESSING_TAB_NEW_RFI,\n    label: utils.string.t('premiumProcessing.rfi.newRfi')\n  };\n  var isHistoryCases = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.taskView) === constants.ALL_CASES;\n  var paramsRfiTab = params === null || params === void 0 ? void 0 : (_params$subtab = params.subtab) === null || _params$subtab === void 0 ? void 0 : _params$subtab.toString();\n  var isValidTab = rfiSubTabs.map(function (tab) {\n    return tab.taskId;\n  }).includes(paramsRfiTab);\n\n  var _useState = useState({\n    id: isValidTab ? paramsRfiTab : constants.PREMIUM_PROCESSING_TAB_NEW_RFI,\n    status: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var subTabs = rfiSubTabs === null || rfiSubTabs === void 0 ? void 0 : rfiSubTabs.map(function (tab) {\n    var _classnames;\n\n    return {\n      value: tab.taskId,\n      label: utils.string.t('premiumProcessing.rfi.tabName', {\n        type: tab.rfiType,\n        id: tab.queryId\n      }),\n      subLabel: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n          className: classnames((_classnames = {}, _defineProperty(_classnames, classes.status, true), _defineProperty(_classnames, classes.open, tab.status === constants.RFI_STATUS.OPEN), _defineProperty(_classnames, classes.responseReceived, tab.status === constants.RFI_STATUS.RESPONSE_RECEIVED), _defineProperty(_classnames, classes.resolved, tab.status === constants.RFI_STATUS.RESOLVED), _classnames))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), tab.status]\n      }, void 0, true)\n    };\n  });\n  useEffect(function () {\n    if (caseId || rfiCaseId) {\n      var caseIdData = caseId || rfiCaseId;\n      dispatch(getCaseRfiSubTabData(caseIdData));\n    }\n  }, [dispatch, caseId, rfiCaseId, caseRfiHistory]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _rfiSubTabs$find;\n\n    var selectedTabStatus = utils.generic.isValidArray(rfiSubTabs) ? ((_rfiSubTabs$find = rfiSubTabs.find(function (tab) {\n      var _tab$taskId;\n\n      return ((_tab$taskId = tab.taskId) === null || _tab$taskId === void 0 ? void 0 : _tab$taskId.toString()) === (paramsRfiTab === null || paramsRfiTab === void 0 ? void 0 : paramsRfiTab.toString());\n    })) === null || _rfiSubTabs$find === void 0 ? void 0 : _rfiSubTabs$find.status) || '' : '';\n    setSelectedTab({\n      id: isValidTab ? paramsRfiTab : constants.PREMIUM_PROCESSING_TAB_NEW_RFI,\n      status: selectedTabStatus\n    });\n  }, [rfiSubTabs]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (paramsRfiTab && paramsRfiTab !== constants.PREMIUM_PROCESSING_TAB_NEW_RFI) {\n      dispatch(getCaseRFIDetails({\n        taskId: paramsRfiTab\n      })).then(function (res) {\n        if (res === null || res === void 0 ? void 0 : res.taskId) {\n          setSelectedTab({\n            id: res.taskId,\n            status: res.status\n          });\n        }\n      });\n    }\n  }, [paramsRfiTab, caseRfiHistory]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!isNewRfiUsersFetched.current) {\n      dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD])).then(function (res) {\n        if (utils.generic.isValidArray(res, true)) {\n          isNewRfiUsersFetched.current = true;\n        }\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var switchTab = function switchTab(newTab) {\n    setSelectedTab({\n      id: newTab,\n      status: ''\n    });\n    handlers.setIsPageDirty(false);\n\n    if (newTab === constants.PREMIUM_PROCESSING_TAB_NEW_RFI) {\n      rfiDocumentAttached();\n    }\n\n    history.replace(\"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_RFI, \"/\").concat(newTab));\n    dispatch(hideModal('CONFIRM'));\n    return;\n  };\n\n  var rfiDocumentAttached = function rfiDocumentAttached() {\n    var paramsData = {\n      referenceId: caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseId,\n      sectionType: constants.DMS_CONTEXT_CASE,\n      instructionId: caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.instructionId,\n      policyRef: caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.policyRef\n    };\n    dispatch(getViewTableDocuments(paramsData));\n  };\n\n  var stayOnTab = function stayOnTab() {\n    dispatch(hideModal('CONFIRM'));\n    return;\n  };\n\n  var selectTab = function selectTab(tabName) {\n    if (tabName === (selectedTab === null || selectedTab === void 0 ? void 0 : selectedTab.id)) return;\n\n    if (isPageDirty) {\n      handlers.confirmNavigation(function () {\n        return switchTab(tabName);\n      }, stayOnTab);\n      return;\n    } else {\n      switchTab(tabName);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseRFIView, {\n    hasRfiTabPermission: hasRfiTabPermission,\n    caseDetails: caseDetailsObject,\n    rfiDetails: caseRfiDetails,\n    newRfiUsers: newRfiUsers,\n    subTabs: isHistoryCases ? _toConsumableArray(subTabs) : [newRfiTab].concat(_toConsumableArray(subTabs)),\n    selectedSubTab: selectedTab,\n    isCreatedByLoginUser: caseRfiDetails.createdByEmail === userEmail,\n    isPageDirty: isPageDirty,\n    isWorklist: isWorklist,\n    isHistoryCases: isHistoryCases,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      selectTab: selectTab,\n      switchTab: switchTab,\n      stayOnTab: stayOnTab\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseRFI, \"y4m4PIPH6gb8GOBnfsOdFNra0io=\", false, function () {\n  return [useDispatch, useParams, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PremiumProcessingCaseRFI;\nexport default PremiumProcessingCaseRFI;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseRFI\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseRFI/PremiumProcessingCaseRFI.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","useHistory","useParams","PropTypes","classnames","styles","PremiumProcessingCaseRFIView","getCaseRfiSubTabData","selectcaseRfiSubTabs","selectUser","selectCaseRfiDetails","hideModal","getCaseRFIDetails","selectUserEmail","selectUsersInRoles","getUsersForRole","selectRfiHistory","getViewTableDocuments","constants","utils","config","makeStyles","FiberManualRecordIcon","PremiumProcessingCaseRFI","propTypes","taskId","string","isRequired","caseId","caseDetailsObject","object","isPageDirty","bool","handlers","shape","setIsPageDirty","func","confirmNavigation","classes","name","dispatch","params","history","isNewRfiUsersFetched","rfiSubTabs","caseRfiDetails","userEmail","newRfiUsers","user","caseRfiHistory","rfiCaseId","isWorklist","taskView","WORKLIST","hasRfiTabPermission","app","access","feature","newRfiTab","value","PREMIUM_PROCESSING_TAB_NEW_RFI","label","t","isHistoryCases","ALL_CASES","paramsRfiTab","subtab","toString","isValidTab","map","tab","includes","id","status","selectedTab","setSelectedTab","subTabs","type","rfiType","queryId","subLabel","open","RFI_STATUS","OPEN","responseReceived","RESPONSE_RECEIVED","resolved","RESOLVED","caseIdData","selectedTabStatus","generic","isValidArray","find","then","res","current","FRONT_END_CONTACT","OPERATIONS_LEAD","switchTab","newTab","rfiDocumentAttached","replace","routes","premiumProcessing","case","PREMIUM_PROCESSING_TAB_RFI","paramsData","referenceId","sectionType","DMS_CONTEXT_CASE","instructionId","policyRef","stayOnTab","selectTab","tabName","createdByEmail"],"mappings":"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","sourcesContent":["import { React, useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCaseRFI.styles';\r\nimport PremiumProcessingCaseRFIView from './PremiumProcessingCaseRFI.view';\r\nimport {\r\n  getCaseRfiSubTabData,\r\n  selectcaseRfiSubTabs,\r\n  selectUser,\r\n  selectCaseRfiDetails,\r\n  hideModal,\r\n  getCaseRFIDetails,\r\n  selectUserEmail,\r\n  selectUsersInRoles,\r\n  getUsersForRole,\r\n  selectRfiHistory,\r\n  getViewTableDocuments\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nPremiumProcessingCaseRFI.propTypes = {\r\n  taskId: PropTypes.string.isRequired,\r\n  caseId: PropTypes.string.isRequired,\r\n  caseDetailsObject: PropTypes.object.isRequired,\r\n  isPageDirty: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    setIsPageDirty: PropTypes.func.isRequired,\r\n    confirmNavigation: PropTypes.func.isRequired,\r\n  }),\r\n};\r\nfunction PremiumProcessingCaseRFI({ taskId, caseId, caseDetailsObject, isPageDirty, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseRFI' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const isNewRfiUsersFetched = useRef(false);\r\n  const rfiSubTabs = useSelector(selectcaseRfiSubTabs);\r\n  const caseRfiDetails = useSelector(selectCaseRfiDetails);\r\n  const userEmail = useSelector(selectUserEmail);\r\n  const newRfiUsers = useSelector(selectUsersInRoles);\r\n  const user = useSelector(selectUser);\r\n  const caseRfiHistory = useSelector(selectRfiHistory);\r\n  const rfiCaseId  = caseRfiDetails?.caseId;\r\n  const isWorklist = caseDetailsObject?.taskView === constants.WORKLIST;\r\n  const hasRfiTabPermission = utils.app.access.feature('premiumProcessing.RFITab', ['read'], user);\r\n  const newRfiTab = {\r\n    value: constants.PREMIUM_PROCESSING_TAB_NEW_RFI,\r\n    label: utils.string.t('premiumProcessing.rfi.newRfi'),\r\n  };\r\n  const isHistoryCases = caseDetailsObject?.taskView === constants.ALL_CASES;\r\n  const paramsRfiTab = params?.subtab?.toString();\r\n  const isValidTab = rfiSubTabs.map((tab) => tab.taskId).includes(paramsRfiTab);\r\n  const [selectedTab, setSelectedTab] = useState({ id: isValidTab ? paramsRfiTab : constants.PREMIUM_PROCESSING_TAB_NEW_RFI, status: '' });\r\n  const subTabs = rfiSubTabs?.map((tab) => {\r\n    return {\r\n      value: tab.taskId,\r\n      label: utils.string.t('premiumProcessing.rfi.tabName', { type: tab.rfiType, id: tab.queryId }),\r\n      subLabel: (\r\n        <>\r\n          <FiberManualRecordIcon\r\n            className={classnames({\r\n              [classes.status]: true,\r\n              [classes.open]: tab.status === constants.RFI_STATUS.OPEN,\r\n              [classes.responseReceived]: tab.status === constants.RFI_STATUS.RESPONSE_RECEIVED,\r\n              [classes.resolved]: tab.status === constants.RFI_STATUS.RESOLVED,\r\n            })}\r\n          />\r\n          {tab.status}\r\n        </>\r\n      ),\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(caseId || rfiCaseId){\r\n      const caseIdData = caseId || rfiCaseId;\r\n      dispatch(getCaseRfiSubTabData(caseIdData));\r\n    }\r\n  }, [dispatch, caseId, rfiCaseId,  caseRfiHistory]);  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const selectedTabStatus = utils.generic.isValidArray(rfiSubTabs)\r\n      ? rfiSubTabs.find((tab) => tab.taskId?.toString() === paramsRfiTab?.toString())?.status || ''\r\n      : '';\r\n\r\n    setSelectedTab({ id: isValidTab ? paramsRfiTab : constants.PREMIUM_PROCESSING_TAB_NEW_RFI, status: selectedTabStatus });\r\n  }, [rfiSubTabs]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (paramsRfiTab && paramsRfiTab !== constants.PREMIUM_PROCESSING_TAB_NEW_RFI) {\r\n      dispatch(getCaseRFIDetails({ taskId: paramsRfiTab })).then((res) => {\r\n        if (res?.taskId) {\r\n          setSelectedTab({ id: res.taskId, status: res.status });\r\n        }\r\n      });\r\n    }\r\n  }, [paramsRfiTab, caseRfiHistory]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!isNewRfiUsersFetched.current) {\r\n      dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD])).then((res) => {\r\n        if (utils.generic.isValidArray(res, true)) {\r\n          isNewRfiUsersFetched.current = true;\r\n        }\r\n      });\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const switchTab = (newTab) => {\r\n    setSelectedTab({ id: newTab, status: '' });\r\n    handlers.setIsPageDirty(false);\r\n    if (newTab === constants.PREMIUM_PROCESSING_TAB_NEW_RFI) {\r\n      rfiDocumentAttached();\r\n    }\r\n    history.replace(`${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_RFI}/${newTab}`);\r\n    dispatch(hideModal('CONFIRM'));\r\n    return;\r\n  };\r\n\r\n  const rfiDocumentAttached = () => {\r\n    const paramsData = {\r\n      referenceId: caseDetailsObject?.caseId,\r\n      sectionType: constants.DMS_CONTEXT_CASE,\r\n      instructionId: caseDetailsObject?.instructionId,\r\n      policyRef: caseDetailsObject?.policyRef,\r\n    }\r\n    dispatch(getViewTableDocuments(paramsData));\r\n  }\r\n\r\n  const stayOnTab = () => {\r\n    dispatch(hideModal('CONFIRM'));\r\n    return;\r\n  };\r\n\r\n  const selectTab = (tabName) => {\r\n    if (tabName === selectedTab?.id) return;\r\n    if (isPageDirty) {\r\n      handlers.confirmNavigation(() => switchTab(tabName), stayOnTab);\r\n      return;\r\n    } else {\r\n      switchTab(tabName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PremiumProcessingCaseRFIView\r\n      hasRfiTabPermission={hasRfiTabPermission}\r\n      caseDetails={caseDetailsObject}\r\n      rfiDetails={caseRfiDetails}\r\n      newRfiUsers={newRfiUsers}\r\n      subTabs={isHistoryCases ? [...subTabs] : [newRfiTab, ...subTabs]}\r\n      selectedSubTab={selectedTab}\r\n      isCreatedByLoginUser={caseRfiDetails.createdByEmail === userEmail}\r\n      isPageDirty={isPageDirty}\r\n      isWorklist={isWorklist}\r\n      isHistoryCases={isHistoryCases}\r\n      handlers={{ ...handlers, selectTab, switchTab, stayOnTab }}\r\n    />\r\n  );\r\n}\r\nexport default PremiumProcessingCaseRFI;\r\n"]},"metadata":{},"sourceType":"module"}