{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocuments.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport config from 'config'; // app\n\nimport { selectClaimsPolicyInformation } from 'stores';\nimport styles from './ClaimsManageDocuments.styles';\nimport { DmsSearch, Accordion, FormCheckbox, TableHead, TableCell, Button, PopoverMenu, FilterBar, Tooltip, Skeleton } from 'components';\nimport { RegisterNewLossFixedBottomBar, DmsDocDetailsTooltip } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { makeStyles, Grid, Box, Typography, Checkbox, FormControlLabel, Table, TableBody, TableRow } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsManageDocumentsView.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleFormStatus: PropTypes.func.isRequired,\n  sendDocumentToGXB: PropTypes.func,\n  selectAll: PropTypes.bool,\n  setSelectAll: PropTypes.func,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  }),\n  isDmsFileViewGridDataLoading: PropTypes.bool,\n  handlers: PropTypes.shape({\n    viewDocLauncher: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsManageDocumentsView(_ref) {\n  _s();\n\n  var _fields$filter,\n      _fields$filter2,\n      _this = this;\n\n  var activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleBack = _ref.handleBack,\n      handleNext = _ref.handleNext,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      handleSave = _ref.handleSave,\n      col = _ref.col,\n      fields = _ref.fields,\n      formControls = _ref.formControls,\n      popoverActions = _ref.popoverActions,\n      searchFields = _ref.searchFields,\n      searchActions = _ref.searchActions,\n      claimDocuments = _ref.claimDocuments,\n      lossDocuments = _ref.lossDocuments,\n      updateClaimFileListAfterLinking = _ref.updateClaimFileListAfterLinking,\n      sendDocumentToGXB = _ref.sendDocumentToGXB,\n      selectAll = _ref.selectAll,\n      setSelectAll = _ref.setSelectAll,\n      handleFormStatus = _ref.handleFormStatus,\n      handlers = _ref.handlers,\n      isDmsFileViewGridDataLoading = _ref.isDmsFileViewGridDataLoading;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsManageDocuments'\n  })();\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLossAccordionExpanded = _useState2[0],\n      setLossAccordionExpanded = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isClaimAccordionExpanded = _useState4[0],\n      setClaimAccordionExpanded = _useState4[1];\n\n  var control = formControls.control,\n      register = formControls.register,\n      watch = formControls.watch,\n      setValue = formControls.setValue;\n  var dms = {\n    context: constants.DMS_CONTEXT_POLICY,\n    source: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.sourceId,\n    refData: _objectSpread({}, policyInformation),\n    isFnolDmsSearch: true,\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking,\n    documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim\n  };\n  var formValues = watch();\n  var allFields = fields === null || fields === void 0 ? void 0 : (_fields$filter = fields.filter(function (field) {\n    return (field === null || field === void 0 ? void 0 : field.type) === 'checkbox';\n  })) === null || _fields$filter === void 0 ? void 0 : _fields$filter.map(function (field) {\n    return field === null || field === void 0 ? void 0 : field.name;\n  });\n  var selectedGroups = (fields === null || fields === void 0 ? void 0 : (_fields$filter2 = fields.filter(function (item) {\n    return !!(item === null || item === void 0 ? void 0 : item.defaultValue) === true;\n  })) === null || _fields$filter2 === void 0 ? void 0 : _fields$filter2.map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.name;\n  })) || [];\n\n  var _useState5 = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedGxbDocs = _useState6[0],\n      setSelectedGxbDocs = _useState6[1];\n\n  var checkedDocs = function checkedDocs(e, docs) {\n    e.stopPropagation();\n    var checkedDocument = (docs === null || docs === void 0 ? void 0 : docs.checked) ? [].concat(_toConsumableArray(selectedGxbDocs), [docs === null || docs === void 0 ? void 0 : docs.id]) : selectedGxbDocs === null || selectedGxbDocs === void 0 ? void 0 : selectedGxbDocs.filter(function (item) {\n      return item !== (docs === null || docs === void 0 ? void 0 : docs.id);\n    });\n    var allFieldsSelected = (checkedDocument === null || checkedDocument === void 0 ? void 0 : checkedDocument.length) === (allFields === null || allFields === void 0 ? void 0 : allFields.length);\n    setSelectedGxbDocs(checkedDocument);\n    setSelectAll(allFieldsSelected);\n    handleFormStatus();\n  };\n\n  var updateSelectAll = function updateSelectAll(status) {\n    allFields.forEach(function (grp) {\n      return setValue(grp, status);\n    });\n    setSelectAll(status);\n    handleFormStatus();\n  };\n\n  var SaveHandle = function SaveHandle() {\n    function sendDocument() {\n      return _sendDocument.apply(this, arguments);\n    }\n\n    function _sendDocument() {\n      _sendDocument = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sendDocumentToGXB(formValues);\n                _context.next = 3;\n                return handleSave(index);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _sendDocument.apply(this, arguments);\n    }\n\n    sendDocument();\n  };\n\n  var nextHandle = function nextHandle() {\n    function sendDocument() {\n      return _sendDocument2.apply(this, arguments);\n    }\n\n    function _sendDocument2() {\n      _sendDocument2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                sendDocumentToGXB(formValues);\n                _context2.next = 3;\n                return handleNext(index);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _sendDocument2.apply(this, arguments);\n    }\n\n    sendDocument();\n  };\n\n  var tableGridView = function tableGridView(documents) {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [isDmsFileViewGridDataLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: col.length,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 40,\n              animation: \"wave\",\n              displayNumber: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, _this), documents === null || documents === void 0 ? void 0 : documents.map(function (doc, ind) {\n          var updatedPopOverActions = (doc === null || doc === void 0 ? void 0 : doc.isLinkedToMultipleContexts) ? _toConsumableArray(popoverActions).map(function (action) {\n            var isDeleteAction = action.id === 'delete';\n            return isDeleteAction ? _objectSpread(_objectSpread({}, action), {}, {\n              disabled: true\n            }) : action;\n          }) : _toConsumableArray(popoverActions);\n          var actionDescId = doc === null || doc === void 0 ? void 0 : doc.documentId.toString();\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            className: classes.docViewCursor,\n            onClick: function onClick(e) {\n              return handlers.viewDocLauncher(e, doc);\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.checkBoxCell,\n              children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n                name: actionDescId\n              }, utils.form.getFieldProps(fields, actionDescId)), {}, {\n                control: control,\n                register: register,\n                watch: watch,\n                muiComponentProps: {\n                  onClick: function onClick(e) {\n                    return checkedDocs(e, {\n                      id: e.target.name,\n                      checked: e.target.checked\n                    });\n                  }\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              compact: true,\n              minimal: true,\n              className: classes.tableCell,\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: /*#__PURE__*/_jsxDEV(DmsDocDetailsTooltip, {\n                  data: doc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 35\n                }, _this),\n                placement: 'bottom',\n                arrow: true,\n                children: doc === null || doc === void 0 ? void 0 : doc.documentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              compact: true,\n              minimal: true,\n              className: classes.tableCell,\n              children: doc === null || doc === void 0 ? void 0 : doc.createdByName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              compact: true,\n              minimal: true,\n              className: classes.tableCell,\n              children: utils.string.t('format.date', {\n                value: {\n                  date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n                  format: config.ui.format.date.text\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                id: \"view-menu-list\",\n                items: updatedPopOverActions,\n                data: {\n                  doc: doc\n                },\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left'\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, _this)]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var referenceId = policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      ml: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(DmsSearch, _objectSpread(_objectSpread({}, dms), {}, {\n            referenceId: referenceId,\n            isAutoSearchScreen: true,\n            handleFormStatus: handleFormStatus\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mt: 1,\n            ml: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridFlex,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.icon,\n                  children: /*#__PURE__*/_jsxDEV(DescriptionOutlinedIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  className: classes.title,\n                  children: utils.string.t('claims.manageDocumentLabels.claimFile')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                width: '50%',\n                marginLeft: \"auto\",\n                children: [' ', /*#__PURE__*/_jsxDEV(FilterBar, {\n                  id: \"userFilter\",\n                  fields: searchFields,\n                  actions: searchActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"large\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: col,\n                nestedClasses: {\n                  tableHead: classes.tableHead\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 4,\n                    children: /*#__PURE__*/_jsxDEV(Accordion, {\n                      icon: false,\n                      expanded: isLossAccordionExpanded,\n                      defaultHeader: false,\n                      actions: [{\n                        id: 'manageLossDocs',\n                        text: utils.string.t('claims.manageDocumentLabels.loss'),\n                        icon: KeyboardArrowUpIcon,\n                        iconPosition: 'left',\n                        color: 'primary',\n                        onClick: function onClick() {\n                          setLossAccordionExpanded(!isLossAccordionExpanded);\n                        },\n                        nestedClasses: {\n                          link: classes.toggleBtnLink,\n                          icon: classes.toggleBtnIcon\n                        }\n                      }],\n                      children: tableGridView(lossDocuments)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 4,\n                    children: /*#__PURE__*/_jsxDEV(Accordion, {\n                      icon: false,\n                      expanded: isClaimAccordionExpanded,\n                      defaultHeader: false,\n                      actions: [{\n                        id: 'manageLossDocs',\n                        text: utils.string.t('claims.manageDocumentLabels.claim'),\n                        icon: KeyboardArrowUpIcon,\n                        iconPosition: 'left',\n                        color: 'primary',\n                        onClick: function onClick() {\n                          setClaimAccordionExpanded(!isClaimAccordionExpanded);\n                        },\n                        nestedClasses: {\n                          link: classes.toggleBtnLink,\n                          icon: classes.toggleBtnIcon\n                        }\n                      }],\n                      children: tableGridView(claimDocuments)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 10,\n              ml: 5,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                size: \"xsmall\",\n                variant: \"outlined\",\n                disabled: false,\n                text: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectAll\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 52\n                  }, this),\n                  label: \"SELECT ALL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this),\n                \"data-testid\": \"bulk-button\",\n                onClick: function onClick() {\n                  updateSelectAll(!selectAll);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: function handleSave() {\n        SaveHandle();\n      },\n      handleNextSubmit: function handleNextSubmit() {\n        return nextHandle();\n      },\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsManageDocumentsView, \"034KmM4ilde+NSKipeevb+z+w9E=\", false, function () {\n  return [useSelector];\n});\n\n_c = ClaimsManageDocumentsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsManageDocumentsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsManageDocuments/ClaimsManageDocuments.view.js"],"names":["React","useState","PropTypes","useSelector","config","selectClaimsPolicyInformation","styles","DmsSearch","Accordion","FormCheckbox","TableHead","TableCell","Button","PopoverMenu","FilterBar","Tooltip","Skeleton","RegisterNewLossFixedBottomBar","DmsDocDetailsTooltip","utils","constants","makeStyles","Grid","Box","Typography","Checkbox","FormControlLabel","Table","TableBody","TableRow","KeyboardArrowUpIcon","DescriptionOutlinedIcon","ClaimsManageDocumentsView","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","handleFormStatus","sendDocumentToGXB","selectAll","setSelectAll","nestedClasses","shape","root","string","isDmsFileViewGridDataLoading","handlers","viewDocLauncher","index","isFormsEdited","col","fields","formControls","popoverActions","searchFields","searchActions","claimDocuments","lossDocuments","updateClaimFileListAfterLinking","classes","name","policyInformation","isLossAccordionExpanded","setLossAccordionExpanded","isClaimAccordionExpanded","setClaimAccordionExpanded","control","register","watch","setValue","dms","context","DMS_CONTEXT_POLICY","source","sourceId","refData","isFnolDmsSearch","documentTypeKey","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","formValues","allFields","filter","field","type","map","selectedGroups","item","defaultValue","generic","isInvalidOrEmptyArray","selectedGxbDocs","setSelectedGxbDocs","checkedDocs","e","docs","stopPropagation","checkedDocument","checked","id","allFieldsSelected","length","updateSelectAll","status","forEach","grp","SaveHandle","sendDocument","nextHandle","tableGridView","documents","doc","ind","updatedPopOverActions","isLinkedToMultipleContexts","action","isDeleteAction","disabled","actionDescId","documentId","toString","docViewCursor","checkBoxCell","form","getFieldProps","onClick","target","tableCell","documentName","createdByName","t","value","date","createdDate","format","ui","text","vertical","horizontal","referenceId","policyRef","gridFlex","icon","title","tableHead","iconPosition","color","link","toggleBtnLink","toggleBtnIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport config from 'config';\r\n\r\n// app\r\nimport { selectClaimsPolicyInformation } from 'stores';\r\nimport styles from './ClaimsManageDocuments.styles';\r\nimport { DmsSearch, Accordion, FormCheckbox, TableHead, TableCell, Button, PopoverMenu, FilterBar, Tooltip, Skeleton, } from 'components';\r\nimport { RegisterNewLossFixedBottomBar, DmsDocDetailsTooltip } from 'modules';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { makeStyles, Grid, Box, Typography, Checkbox, FormControlLabel, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n\r\nClaimsManageDocumentsView.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n  sendDocumentToGXB: PropTypes.func,\r\n  selectAll: PropTypes.bool,\r\n  setSelectAll: PropTypes.func,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n  isDmsFileViewGridDataLoading: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    viewDocLauncher: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsManageDocumentsView({\r\n  activeStep,\r\n  isAllStepsCompleted,\r\n  handleBack,\r\n  handleNext,\r\n  index,\r\n  isFormsEdited,\r\n  handleSave,\r\n  col,\r\n  fields,\r\n  formControls,\r\n  popoverActions,\r\n  searchFields,\r\n  searchActions,\r\n  claimDocuments,\r\n  lossDocuments,\r\n  updateClaimFileListAfterLinking,\r\n  sendDocumentToGXB,\r\n  selectAll,\r\n  setSelectAll,\r\n  handleFormStatus,\r\n  handlers,\r\n  isDmsFileViewGridDataLoading\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsManageDocuments' })();\r\n\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n\r\n  const [isLossAccordionExpanded, setLossAccordionExpanded] = useState(true);\r\n  const [isClaimAccordionExpanded, setClaimAccordionExpanded] = useState(true);\r\n\r\n  const { control, register, watch, setValue } = formControls;\r\n\r\n  const dms = {\r\n    context: constants.DMS_CONTEXT_POLICY,\r\n    source: policyInformation?.sourceId,\r\n    refData: { ...policyInformation },\r\n    isFnolDmsSearch: true,\r\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking,\r\n    documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\r\n  };\r\n  const formValues = watch();\r\n  const allFields = fields?.filter((field) => field?.type === 'checkbox')?.map((field) => field?.name);\r\n  const selectedGroups = fields?.filter((item) => !!item?.defaultValue === true)?.map((item) => item?.name) || [];\r\n  const [selectedGxbDocs, setSelectedGxbDocs] = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []);\r\n  const checkedDocs = (e, docs) => {\r\n    e.stopPropagation();\r\n    let checkedDocument = docs?.checked ? [...selectedGxbDocs, docs?.id] : selectedGxbDocs?.filter((item) => item !== docs?.id);\r\n    let allFieldsSelected = checkedDocument?.length === allFields?.length;\r\n    setSelectedGxbDocs(checkedDocument);\r\n    setSelectAll(allFieldsSelected);\r\n    handleFormStatus()\r\n  };\r\n  const updateSelectAll = (status) => {\r\n    allFields.forEach((grp) => setValue(grp, status));\r\n    setSelectAll(status);\r\n    handleFormStatus()\r\n\r\n  };\r\n  const SaveHandle = () => {\r\n    async function sendDocument() {\r\n      sendDocumentToGXB(formValues);\r\n      await handleSave(index);\r\n    }\r\n    sendDocument()\r\n  };\r\n\r\n  const nextHandle = () => {\r\n    async function sendDocument() {\r\n      sendDocumentToGXB(formValues);\r\n      await handleNext(index);\r\n    }\r\n    sendDocument();\r\n  };\r\n\r\n  const tableGridView = (documents) => {\r\n    return (\r\n      <Table>\r\n        <TableBody>\r\n          {isDmsFileViewGridDataLoading && (\r\n            <TableRow>\r\n              <TableCell colSpan={col.length}>\r\n                <Skeleton height={40} animation=\"wave\" displayNumber={4} />\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n          {documents?.map((doc, ind) => {\r\n            const updatedPopOverActions = doc?.isLinkedToMultipleContexts\r\n              ? [...popoverActions].map((action) => {\r\n                const isDeleteAction = action.id === 'delete';\r\n                return isDeleteAction ? { ...action, disabled: true } : action;\r\n              })\r\n              : [...popoverActions];\r\n            const actionDescId = doc?.documentId.toString();\r\n            return (\r\n              <TableRow key={ind} hover className={classes.docViewCursor} onClick={(e) => handlers.viewDocLauncher(e, doc)}>\r\n                <TableCell className={classes.checkBoxCell}>\r\n                  <FormCheckbox\r\n                    name={actionDescId}\r\n                    {...utils.form.getFieldProps(fields, actionDescId)}\r\n                    control={control}\r\n                    register={register}\r\n                    watch={watch}\r\n                    muiComponentProps={{\r\n                      onClick: (e) => checkedDocs(e, { id: e.target.name, checked: e.target.checked }),\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell compact minimal className={classes.tableCell}>\r\n                  <Tooltip title={<DmsDocDetailsTooltip data={doc} />} placement={'bottom'} arrow>\r\n                    {doc?.documentName}\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell compact minimal className={classes.tableCell}>\r\n                  {doc?.createdByName}\r\n                </TableCell>\r\n                <TableCell compact minimal className={classes.tableCell}>\r\n                  {utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } })}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <PopoverMenu\r\n                    id=\"view-menu-list\"\r\n                    items={updatedPopOverActions}\r\n                    data={{ doc }}\r\n                    anchorOrigin={{\r\n                      vertical: 'bottom',\r\n                      horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'left',\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const referenceId = policyInformation?.policyRef;\r\n  return (\r\n    <div>\r\n      <Box mt={4} ml={4}>\r\n        <Grid container direction=\"row\">\r\n          <Grid item xs={12} sm={6}>\r\n            <DmsSearch {...dms} referenceId={referenceId} isAutoSearchScreen={true} handleFormStatus={handleFormStatus} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Box mt={1} ml={2}>\r\n              <Grid className={classes.gridFlex} alignItems=\"center\">\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box className={classes.icon}>\r\n                    <DescriptionOutlinedIcon />\r\n                  </Box>\r\n\r\n                  <Typography variant=\"body2\" className={classes.title}>\r\n                    {utils.string.t('claims.manageDocumentLabels.claimFile')}\r\n                  </Typography>\r\n                </Box>\r\n                <Box width={'50%'} marginLeft=\"auto\">\r\n                  {' '}\r\n                  <FilterBar id=\"userFilter\" fields={searchFields} actions={searchActions} />{' '}\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Table size=\"large\">\r\n                <TableHead columns={col} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell colSpan={4}>\r\n                      <Accordion\r\n                        icon={false}\r\n                        expanded={isLossAccordionExpanded}\r\n                        defaultHeader={false}\r\n                        actions={[\r\n                          {\r\n                            id: 'manageLossDocs',\r\n                            text: utils.string.t('claims.manageDocumentLabels.loss'),\r\n                            icon: KeyboardArrowUpIcon,\r\n                            iconPosition: 'left',\r\n                            color: 'primary',\r\n                            onClick: () => {\r\n                              setLossAccordionExpanded(!isLossAccordionExpanded);\r\n                            },\r\n                            nestedClasses: {\r\n                              link: classes.toggleBtnLink,\r\n                              icon: classes.toggleBtnIcon,\r\n                            },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {tableGridView(lossDocuments)}\r\n                      </Accordion>\r\n                    </TableCell>\r\n                  </TableRow>\r\n\r\n                  <TableRow>\r\n                    <TableCell colSpan={4}>\r\n                      <Accordion\r\n                        icon={false}\r\n                        expanded={isClaimAccordionExpanded}\r\n                        defaultHeader={false}\r\n                        actions={[\r\n                          {\r\n                            id: 'manageLossDocs',\r\n                            text: utils.string.t('claims.manageDocumentLabels.claim'),\r\n                            icon: KeyboardArrowUpIcon,\r\n                            iconPosition: 'left',\r\n                            color: 'primary',\r\n                            onClick: () => {\r\n                              setClaimAccordionExpanded(!isClaimAccordionExpanded);\r\n                            },\r\n                            nestedClasses: {\r\n                              link: classes.toggleBtnLink,\r\n                              icon: classes.toggleBtnIcon,\r\n                            },\r\n                          },\r\n                        ]}\r\n                      >\r\n                        {tableGridView(claimDocuments)}\r\n                      </Accordion>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n\r\n              <Box mt={10} ml={5}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"xsmall\"\r\n                  variant=\"outlined\"\r\n                  disabled={false}\r\n                  text={<FormControlLabel control={<Checkbox checked={selectAll} />} label=\"SELECT ALL\" />}\r\n                  data-testid=\"bulk-button\"\r\n                  onClick={() => {\r\n                    updateSelectAll(!selectAll);\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <RegisterNewLossFixedBottomBar\r\n        activeStep={activeStep}\r\n        isAllStepsCompleted={isAllStepsCompleted}\r\n        handleBack={() => {\r\n          handleBack(index);\r\n        }}\r\n        handleSave={() => {\r\n          SaveHandle();\r\n        }}\r\n        handleNextSubmit={() => nextHandle()}\r\n        save={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}