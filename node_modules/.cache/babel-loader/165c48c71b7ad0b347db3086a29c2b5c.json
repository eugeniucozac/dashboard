{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MultiSelectAsync } from 'components';\nimport { withKnobs, text, number } from '@storybook/addon-knobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'MultiSelectAsync',\n  component: MultiSelectAsync,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var options = [{\n    id: 'astonmartin',\n    name: 'Aston Martin'\n  }, {\n    id: 'audi',\n    name: 'Audi'\n  }, {\n    id: 'bentley',\n    name: 'Bentley'\n  }, {\n    id: 'bmw',\n    name: 'BMW (Bayerische Motoren Werke AG)'\n  }, {\n    id: 'chevrolet',\n    name: 'Chevrolet'\n  }, {\n    id: 'citroen',\n    name: 'Citroen'\n  }, {\n    id: 'dodge',\n    name: 'Dodge'\n  }, {\n    id: 'ferrari',\n    name: 'Ferrari'\n  }, {\n    id: 'ford',\n    name: 'Ford'\n  }, {\n    id: 'honda',\n    name: 'Honda'\n  }, {\n    id: 'hyundai',\n    name: 'Hyundai'\n  }, {\n    id: 'infiniti',\n    name: 'Infiniti'\n  }, {\n    id: 'jaguar',\n    name: 'Jaguar'\n  }, {\n    id: 'kia',\n    name: 'Kia'\n  }, {\n    id: 'lotus',\n    name: 'Lotus'\n  }, {\n    id: 'lexus',\n    name: 'Lexus'\n  }, {\n    id: 'maseratti',\n    name: 'Maseratti'\n  }, {\n    id: 'mercedesbenz',\n    name: 'Mercedes-Benz'\n  }, {\n    id: 'nissan',\n    name: 'Nissan'\n  }, {\n    id: 'porsche',\n    name: 'Porsche'\n  }, {\n    id: 'renault',\n    name: 'Renault'\n  }, {\n    id: 'rollsroyce',\n    name: 'Rolls Royce'\n  }, {\n    id: 'saab',\n    name: 'Saab'\n  }, {\n    id: 'subaru',\n    name: 'Subaru'\n  }, {\n    id: 'tesla',\n    name: 'Tesla'\n  }, {\n    id: 'toyota',\n    name: 'Toyota'\n  }, {\n    id: 'vw',\n    name: 'Volkswagen'\n  }, {\n    id: 'volvo',\n    name: 'Volvo'\n  }];\n\n  var dummyFetch = function dummyFetch(query) {\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve(options.filter(function (o) {\n          return o.id.includes(query) || o.name.includes(query);\n        }));\n      }, 750);\n    });\n  };\n\n  var toggle = function toggle(field, value) {\n    if (value) {\n      var isValueAlreadySelected = values.some(function (i) {\n        return i.id === value.id;\n      });\n      setValues(isValueAlreadySelected ? values.filter(function (i) {\n        return i.id !== value.id;\n      }) : [].concat(_toConsumableArray(values), [value]));\n    }\n  };\n\n  var placeholder = text('Placeholder', 'Type here...');\n  var searchMinChars = number('Search min chars', 2, {\n    range: true,\n    min: 1,\n    max: 8,\n    step: 1\n  });\n  var max = number('Maximum Selected', 3, {\n    range: true,\n    min: 1,\n    max: 12,\n    step: 1\n  });\n  var minChars = text('Label minChars', 'Type at least {{min}} characters');\n  var hint = text('Label hint', 'Search from the available options in the search bar above.');\n  var noResults = text('Label noResults', 'Try Again');\n\n  var getMinCharsLabel = function getMinCharsLabel(max) {\n    return minChars.replace('{{min}}', searchMinChars);\n  };\n\n  var labels = {\n    minChars: getMinCharsLabel(max),\n    hint: hint,\n    noResults: noResults\n  };\n  return /*#__PURE__*/_jsxDEV(MultiSelectAsync, {\n    id: \"stories\",\n    values: values,\n    placeholder: placeholder,\n    searchMinChars: searchMinChars,\n    max: max,\n    labels: labels,\n    handlers: {\n      fetch: dummyFetch,\n      toggleOption: toggle\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Default, \"2pK3rqdy1zaKCApuOUtEsSz9OBs=\");\n\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MultiSelectAsync/MultiSelectAsync.stories.js"],"names":["React","useState","MultiSelectAsync","withKnobs","text","number","title","component","decorators","Default","values","setValues","options","id","name","dummyFetch","query","Promise","resolve","setTimeout","filter","o","includes","toggle","field","value","isValueAlreadySelected","some","i","placeholder","searchMinChars","range","min","max","step","minChars","hint","noResults","getMinCharsLabel","replace","labels","fetch","toggleOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { MultiSelectAsync } from 'components';\r\nimport { withKnobs, text, number } from '@storybook/addon-knobs';\r\n\r\nexport default {\r\n  title: 'MultiSelectAsync',\r\n  component: MultiSelectAsync,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const [values, setValues] = useState([]);\r\n\r\n  const options = [\r\n    { id: 'astonmartin', name: 'Aston Martin' },\r\n    { id: 'audi', name: 'Audi' },\r\n    { id: 'bentley', name: 'Bentley' },\r\n    { id: 'bmw', name: 'BMW (Bayerische Motoren Werke AG)' },\r\n    { id: 'chevrolet', name: 'Chevrolet' },\r\n    { id: 'citroen', name: 'Citroen' },\r\n    { id: 'dodge', name: 'Dodge' },\r\n    { id: 'ferrari', name: 'Ferrari' },\r\n    { id: 'ford', name: 'Ford' },\r\n    { id: 'honda', name: 'Honda' },\r\n    { id: 'hyundai', name: 'Hyundai' },\r\n    { id: 'infiniti', name: 'Infiniti' },\r\n    { id: 'jaguar', name: 'Jaguar' },\r\n    { id: 'kia', name: 'Kia' },\r\n    { id: 'lotus', name: 'Lotus' },\r\n    { id: 'lexus', name: 'Lexus' },\r\n    { id: 'maseratti', name: 'Maseratti' },\r\n    { id: 'mercedesbenz', name: 'Mercedes-Benz' },\r\n    { id: 'nissan', name: 'Nissan' },\r\n    { id: 'porsche', name: 'Porsche' },\r\n    { id: 'renault', name: 'Renault' },\r\n    { id: 'rollsroyce', name: 'Rolls Royce' },\r\n    { id: 'saab', name: 'Saab' },\r\n    { id: 'subaru', name: 'Subaru' },\r\n    { id: 'tesla', name: 'Tesla' },\r\n    { id: 'toyota', name: 'Toyota' },\r\n    { id: 'vw', name: 'Volkswagen' },\r\n    { id: 'volvo', name: 'Volvo' },\r\n  ];\r\n\r\n  const dummyFetch = (query) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(options.filter((o) => o.id.includes(query) || o.name.includes(query)));\r\n      }, 750);\r\n    });\r\n  };\r\n\r\n  const toggle = (field, value) => {\r\n    if (value) {\r\n      const isValueAlreadySelected = values.some((i) => i.id === value.id);\r\n\r\n      setValues(isValueAlreadySelected ? values.filter((i) => i.id !== value.id) : [...values, value]);\r\n    }\r\n  };\r\n\r\n  const placeholder = text('Placeholder', 'Type here...');\r\n  const searchMinChars = number('Search min chars', 2, { range: true, min: 1, max: 8, step: 1 });\r\n  const max = number('Maximum Selected', 3, { range: true, min: 1, max: 12, step: 1 });\r\n  const minChars = text('Label minChars', 'Type at least {{min}} characters');\r\n  const hint = text('Label hint', 'Search from the available options in the search bar above.');\r\n  const noResults = text('Label noResults', 'Try Again');\r\n\r\n  const getMinCharsLabel = (max) => {\r\n    return minChars.replace('{{min}}', searchMinChars);\r\n  };\r\n\r\n  const labels = {\r\n    minChars: getMinCharsLabel(max),\r\n    hint,\r\n    noResults,\r\n  };\r\n\r\n  return (\r\n    <MultiSelectAsync\r\n      id=\"stories\"\r\n      values={values}\r\n      placeholder={placeholder}\r\n      searchMinChars={searchMinChars}\r\n      max={max}\r\n      labels={labels}\r\n      handlers={{\r\n        fetch: dummyFetch,\r\n        toggleOption: toggle,\r\n      }}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}