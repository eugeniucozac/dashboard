{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsAcknowledgement\\\\LossInfoViewCard.js\";\nimport React from 'react';\nimport styles from './ClaimsAcknowledgement.styles';\nimport isString from 'lodash/isString';\nimport * as utils from 'utils';\nimport { Accordion } from 'components';\nimport { Typography, makeStyles, AccordionActions } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LossInfoView(_ref) {\n  var _this = this;\n\n  var lossInfo = _ref.lossInfo;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsAcknowledgement'\n  })();\n\n  var accordionTitle = function accordionTitle(title) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"body2\",\n      children: [\" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var actions = [{\n    id: \"1\",\n    icon: Edit,\n    color: \"primary\",\n    onClick: function onClick() {\n      alert(\"afsddfjh\");\n    }\n  }];\n\n  var infoCard = function infoCard(title) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoCard,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.infoCardTitle,\n        variant: \"subtitle2\",\n        color: \"secondary\",\n        title: isString(title) ? title : null,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.infoCardValue,\n        variant: \"body2\",\n        title: details ? details : null,\n        children: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var renderInfoCard = function renderInfoCard(data) {\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoCardContainer,\n      children: data === null || data === void 0 ? void 0 : data.map(function (info) {\n        return infoCard(info === null || info === void 0 ? void 0 : info.title, info === null || info === void 0 ? void 0 : info.value);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Accordion, {\n      title: accordionTitle(utils.string.t('claims.lossInformation.title')),\n      actions: actions,\n      children: renderInfoCard(lossInfo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      title: accordionTitle(utils.string.t('claims.claimInformation.policyTitle')),\n      actions: actions,\n      children: renderInfoCard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      title: accordionTitle(utils.string.t('claims.underWritingGroups.title')),\n      actions: actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      title: accordionTitle(utils.string.t('claims.claimInformation.title')),\n      actions: actions,\n      children: renderInfoCard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = LossInfoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossInfoView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsAcknowledgement/LossInfoViewCard.js"],"names":["React","styles","isString","utils","Accordion","Typography","makeStyles","AccordionActions","Edit","LossInfoView","lossInfo","classes","name","accordionTitle","title","actions","id","icon","color","onClick","alert","infoCard","details","infoCardTitle","infoCardValue","renderInfoCard","data","console","log","infoCardContainer","map","info","value","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styles from './ClaimsAcknowledgement.styles';\r\nimport isString from 'lodash/isString';\r\n\r\nimport * as utils from 'utils';\r\n\r\nimport { Accordion } from 'components';\r\nimport { Typography, makeStyles, AccordionActions } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nexport function LossInfoView({ lossInfo }) {\r\n    const classes = makeStyles(styles, { name: 'ClaimsAcknowledgement' })();\r\n\r\n    const accordionTitle = (title) => {\r\n        return (\r\n            <Typography className={classes.title} variant=\"body2\"> {title}</Typography>\r\n        )\r\n    }\r\n    const actions = [\r\n        {\r\n            id: \"1\",\r\n            icon: Edit,\r\n            color: \"primary\",\r\n            onClick: () => { alert(\"afsddfjh\") },\r\n        }\r\n    ]\r\n    const infoCard = (title , details = \"\") => {\r\n        return (\r\n            <div className={classes.infoCard}>\r\n\r\n                <Typography className={classes.infoCardTitle} variant=\"subtitle2\" color=\"secondary\" title={isString(title) ? title : null}>\r\n                    {title}\r\n                </Typography>\r\n                <Typography className={classes.infoCardValue} variant=\"body2\" title={details ? details : null}>\r\n                    {details}\r\n                </Typography>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    const renderInfoCard = (data) => {\r\n        console.log(data)\r\n        return (\r\n            <div className={classes.infoCardContainer}>{data?.map(info => infoCard(info?.title, info?.value))}</div>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Accordion title={accordionTitle(utils.string.t('claims.lossInformation.title'))} actions={actions}>\r\n                {renderInfoCard(lossInfo)}\r\n            </Accordion>\r\n            <Accordion title={accordionTitle(utils.string.t('claims.claimInformation.policyTitle'))} actions={actions}>\r\n                {renderInfoCard()}\r\n            </Accordion>\r\n            <Accordion title={accordionTitle(utils.string.t('claims.underWritingGroups.title'))} actions={actions}>\r\n                {/* {renderInfoCard()} */}\r\n            </Accordion>\r\n            <Accordion title={accordionTitle(utils.string.t('claims.claimInformation.title'))} actions={actions}>\r\n                {renderInfoCard()}\r\n            </Accordion>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}