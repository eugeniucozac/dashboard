{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormRadio\\\\FormRadio.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FormRadio } from 'components';\nimport { withKnobs, boolean as _boolean, text, select } from '@storybook/addon-knobs';\nimport * as utils from 'utils';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Form',\n  decorators: [withKnobs]\n};\nexport var Radio = function Radio() {\n  _s();\n\n  // prettier-ignore\n  var field = {\n    name: 'fieldRadio',\n    type: 'radio',\n    options: [{\n      label: 'yes',\n      value: 'yes'\n    }, {\n      label: 'no',\n      value: 'no'\n    }, {\n      label: 'maybe (disabled)',\n      value: 'maybe',\n      disabled: true\n    }, {\n      label: 'sometimes',\n      value: 'sometimes'\n    }, {\n      label: 'always',\n      value: 'always'\n    }, {\n      label: 'never',\n      value: 'never'\n    }],\n    value: ''\n  };\n  var defaultValues = utils.form.getInitialValues([field]);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control;\n\n  var color = select('Color', ['primary', 'secondary'], 'primary');\n\n  var row = _boolean('Row', false);\n\n  var label = text('Label', 'Radio Field');\n  var hint = text('Hint', 'Select one option...');\n  var error = _boolean('Error', false) ? {\n    message: 'Dummy error',\n    type: 'required'\n  } : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({\n      control: control\n    }, field), {}, {\n      title: label,\n      hint: hint,\n      error: error,\n      color: color,\n      muiFormGroupProps: {\n        row: row\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Radio, \"EVdFVGHksgXe/P6bJcvl5Nj9Hl4=\", false, function () {\n  return [useForm];\n});\n\nRadio.displayName = \"Radio\";\n_c = Radio;\nRadio.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Radio\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormRadio\\\\FormRadio.stories.js\"] = {\n    name: \"Radio\",\n    docgenInfo: Radio.__docgenInfo,\n    path: \"src\\\\components\\\\FormRadio\\\\FormRadio.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormRadio/FormRadio.stories.js"],"names":["React","FormRadio","withKnobs","boolean","text","select","utils","useForm","Box","title","decorators","Radio","field","name","type","options","label","value","disabled","defaultValues","form","getInitialValues","control","color","row","hint","error","message","undefined"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,EAAoBC,OAAO,IAAPA,QAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,wBAAjD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,MADM;AAEbC,EAAAA,UAAU,EAAE,CAACR,SAAD;AAFC,CAAf;AAKA,OAAO,IAAMS,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AACzB;AACA,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,YADM;AAEZC,IAAAA,IAAI,EAAE,OAFM;AAGZC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,kBAAT;AAA6BC,MAAAA,KAAK,EAAE,OAApC;AAA6CC,MAAAA,QAAQ,EAAE;AAAvD,KAHO,EAIP;AAAEF,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAJO,EAKP;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KALO,EAMP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KANO,CAHG;AAWZA,IAAAA,KAAK,EAAE;AAXK,GAAd;AAcA,MAAME,aAAa,GAAGb,KAAK,CAACc,IAAN,CAAWC,gBAAX,CAA4B,CAACT,KAAD,CAA5B,CAAtB;;AAhByB,iBAiBLL,OAAO,CAAC;AAAEY,IAAAA,aAAa,EAAbA;AAAF,GAAD,CAjBF;AAAA,MAiBjBG,OAjBiB,YAiBjBA,OAjBiB;;AAmBzB,MAAMC,KAAK,GAAGlB,MAAM,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,WAAZ,CAAV,EAAoC,SAApC,CAApB;;AACA,MAAMmB,GAAG,GAAGrB,QAAO,CAAC,KAAD,EAAQ,KAAR,CAAnB;;AACA,MAAMa,KAAK,GAAGZ,IAAI,CAAC,OAAD,EAAU,aAAV,CAAlB;AACA,MAAMqB,IAAI,GAAGrB,IAAI,CAAC,MAAD,EAAS,sBAAT,CAAjB;AACA,MAAMsB,KAAK,GAAGvB,QAAO,CAAC,OAAD,EAAU,KAAV,CAAP,GAA0B;AAAEwB,IAAAA,OAAO,EAAE,aAAX;AAA0Bb,IAAAA,IAAI,EAAE;AAAhC,GAA1B,GAAyEc,SAAvF;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE,CAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEN;AAApB,OAAiCV,KAAjC;AAAwC,MAAA,KAAK,EAAEI,KAA/C;AAAsD,MAAA,IAAI,EAAES,IAA5D;AAAkE,MAAA,KAAK,EAAEC,KAAzE;AAAgF,MAAA,KAAK,EAAEH,KAAvF;AAA8F,MAAA,iBAAiB,EAAE;AAAEC,QAAAA,GAAG,EAAEA;AAAP;AAAjH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA9BM;;GAAMb,K;UAiBSJ,O;;;AAjBTI,K;KAAAA,K","sourcesContent":["import React from 'react';\r\nimport { FormRadio } from 'components';\r\nimport { withKnobs, boolean, text, select } from '@storybook/addon-knobs';\r\nimport * as utils from 'utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'Form',\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Radio = () => {\r\n  // prettier-ignore\r\n  const field = {\r\n    name: 'fieldRadio',\r\n    type: 'radio',\r\n    options: [\r\n      { label: 'yes', value: 'yes' },\r\n      { label: 'no', value: 'no' },\r\n      { label: 'maybe (disabled)', value: 'maybe', disabled: true },\r\n      { label: 'sometimes', value: 'sometimes' },\r\n      { label: 'always', value: 'always' },\r\n      { label: 'never', value: 'never' },\r\n    ],\r\n    value: '',\r\n  };\r\n\r\n  const defaultValues = utils.form.getInitialValues([field]);\r\n  const { control } = useForm({ defaultValues });\r\n\r\n  const color = select('Color', ['primary', 'secondary'], 'primary');\r\n  const row = boolean('Row', false);\r\n  const label = text('Label', 'Radio Field');\r\n  const hint = text('Hint', 'Select one option...');\r\n  const error = boolean('Error', false) ? { message: 'Dummy error', type: 'required' } : undefined;\r\n\r\n  return (\r\n    <Box width={1}>\r\n      <FormRadio control={control} {...field} title={label} hint={hint} error={error} color={color} muiFormGroupProps={{ row: row }} />\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}