{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nexport var editReportsExtended = function editReportsExtended(reportObj) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var report = reportObj.report,\n        reportId = reportObj.reportId,\n        reportgroupId = reportObj.reportgroupId,\n        sectionId = reportObj.sectionId,\n        workspaceId = reportObj.workspaceId,\n        description = reportObj.description,\n        powerbiReportId = reportObj.powerbiReportId;\n    var defaultError = {\n      file: 'stores/reportingExtended.actions.editReportsExtended',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(editReportsExtendedRequest(reportObj));\n    dispatch(addLoader('editReportsExtended'));\n\n    if (!reportObj || !report || !description || !reportId || !reportgroupId || !sectionId || !workspaceId || !powerbiReportId) {\n      dispatch(editReportsExtendedFailure(defaultError));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportsExtended'));\n      return;\n    }\n\n    var body = {\n      title: report,\n      description: description,\n      powerbiReportId: powerbiReportId,\n      reportgroupId: reportgroupId,\n      sectionId: sectionId,\n      workspaceId: workspaceId\n    };\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.odsService,\n      path: \"reports/group/report/\".concat(reportId),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(editReportsExtendedSuccess(data));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.success', 'success'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (reportingExtended.editReportsExtended)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(editReportsExtendedFailure(err));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportsExtended'));\n    });\n  };\n};\nexport var editReportsExtendedRequest = function editReportsExtendedRequest(reportObj) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_REQUEST',\n    reportObj: reportObj\n  };\n};\nexport var editReportsExtendedSuccess = function editReportsExtendedSuccess(data) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_SUCCESS',\n    payload: data\n  };\n};\nexport var editReportsExtendedFailure = function editReportsExtendedFailure(err) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reportingExtended/reportingExtended.actions.editReportsExtended.js"],"names":["utils","authLogout","addLoader","enqueueNotification","hideModal","removeLoader","editReportsExtended","reportObj","dispatch","getState","auth","user","endpoint","config","vars","report","reportId","reportgroupId","sectionId","workspaceId","description","powerbiReportId","defaultError","file","message","editReportsExtendedRequest","editReportsExtendedFailure","body","title","api","patch","token","accessToken","odsService","path","data","then","response","handleResponse","json","handleNewData","editReportsExtendedSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,mBAAhC,EAAqDC,SAArD,EAAgEC,YAAhE,QAAoF,QAApF;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD;AAAA,SAAe,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACxE;AADwE,oBAEfA,QAAQ,EAFO;AAAA,QAExDC,IAFwD,aAEhEC,IAFgE,CAExDD,IAFwD;AAAA,QAE9BE,QAF8B,aAEhDC,MAFgD,CAEtCC,IAFsC,CAE9BF,QAF8B;;AAAA,QAIhEG,MAJgE,GAI0BR,SAJ1B,CAIhEQ,MAJgE;AAAA,QAIxDC,QAJwD,GAI0BT,SAJ1B,CAIxDS,QAJwD;AAAA,QAI9CC,aAJ8C,GAI0BV,SAJ1B,CAI9CU,aAJ8C;AAAA,QAI/BC,SAJ+B,GAI0BX,SAJ1B,CAI/BW,SAJ+B;AAAA,QAIpBC,WAJoB,GAI0BZ,SAJ1B,CAIpBY,WAJoB;AAAA,QAIPC,WAJO,GAI0Bb,SAJ1B,CAIPa,WAJO;AAAA,QAIMC,eAJN,GAI0Bd,SAJ1B,CAIMc,eAJN;AAMxE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE,sDADa;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAKAhB,IAAAA,QAAQ,CAACiB,0BAA0B,CAAClB,SAAD,CAA3B,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,qBAAD,CAAV,CAAR;;AAEA,QAAI,CAACK,SAAD,IAAc,CAACQ,MAAf,IAAyB,CAACK,WAA1B,IAAyC,CAACJ,QAA1C,IAAsD,CAACC,aAAvD,IAAwE,CAACC,SAAzE,IAAsF,CAACC,WAAvF,IAAsG,CAACE,eAA3G,EAA4H;AAC1Hb,MAAAA,QAAQ,CAACkB,0BAA0B,CAACJ,YAAD,CAA3B,CAAR;AACAd,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,OAAtD,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAI,MAAAA,QAAQ,CAACH,YAAY,CAAC,qBAAD,CAAb,CAAR;AACA;AACD;;AAED,QAAMsB,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEb,MADI;AAEXK,MAAAA,WAAW,EAAEA,WAFF;AAGXC,MAAAA,eAAe,EAAEA,eAHN;AAIXJ,MAAAA,aAAa,EAAEA,aAJJ;AAKXC,MAAAA,SAAS,EAAEA,SALA;AAMXC,MAAAA,WAAW,EAAEA;AANF,KAAb;AASA,WAAOnB,KAAK,CAAC6B,GAAN,CACJC,KADI,CACE;AACLC,MAAAA,KAAK,EAAErB,IAAI,CAACsB,WADP;AAELpB,MAAAA,QAAQ,EAAEA,QAAQ,CAACqB,UAFd;AAGLC,MAAAA,IAAI,iCAA0BlB,QAA1B,CAHC;AAILmB,MAAAA,IAAI,EAAER;AAJD,KADF,EAOJS,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcrC,KAAK,CAAC6B,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUvC,KAAK,CAAC6B,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACd3B,MAAAA,QAAQ,CAACiC,0BAA0B,CAACN,IAAD,CAA3B,CAAR;AACA3B,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,SAAtD,CAApB,CAAR;AACA,aAAOgC,IAAP;AACD,KAbI,EAcJO,KAdI,CAcE,UAACC,GAAD,EAAS;AACd,UAAMC,WAAW,mCACZtB,YADY;AAEfE,QAAAA,OAAO,EAAE;AAFM,QAAjB;;AAKAxB,MAAAA,KAAK,CAAC6B,GAAN,CAAUgB,WAAV,CAAsBF,GAAtB,EAA2BC,WAA3B;AACA5C,MAAAA,KAAK,CAAC6B,GAAN,CAAUiB,kBAAV,CAA6BH,GAA7B,EAAkCnC,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACkB,0BAA0B,CAACiB,GAAD,CAA3B,CAAR;AACAnC,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,OAAtD,CAApB,CAAR;AACA,aAAOwC,GAAP;AACD,KAzBI,EA0BJI,OA1BI,CA0BI,YAAM;AACbvC,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAI,MAAAA,QAAQ,CAACH,YAAY,CAAC,qBAAD,CAAb,CAAR;AACD,KA7BI,CAAP;AA8BD,GA7DkC;AAAA,CAA5B;AA+DP,OAAO,IAAMoB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAClB,SAAD,EAAe;AACvD,SAAO;AACLyC,IAAAA,IAAI,EAAE,wCADD;AAELzC,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMkC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACN,IAAD,EAAU;AAClD,SAAO;AACLa,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMT,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACiB,GAAD,EAAS;AACjD,SAAO;AACLK,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\n\r\nexport const editReportsExtended = (reportObj) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const { report, reportId, reportgroupId, sectionId, workspaceId, description, powerbiReportId } = reportObj;\r\n\r\n  const defaultError = {\r\n    file: 'stores/reportingExtended.actions.editReportsExtended',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  dispatch(editReportsExtendedRequest(reportObj));\r\n  dispatch(addLoader('editReportsExtended'));\r\n\r\n  if (!reportObj || !report || !description || !reportId || !reportgroupId || !sectionId || !workspaceId || !powerbiReportId) {\r\n    dispatch(editReportsExtendedFailure(defaultError));\r\n    dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('editReportsExtended'));\r\n    return;\r\n  }\r\n\r\n  const body = {\r\n    title: report,\r\n    description: description,\r\n    powerbiReportId: powerbiReportId,\r\n    reportgroupId: reportgroupId,\r\n    sectionId: sectionId,\r\n    workspaceId: workspaceId,\r\n  };\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.odsService,\r\n      path: `reports/group/report/${reportId}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(editReportsExtendedSuccess(data));\r\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.success', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API fetch error (reportingExtended.editReportsExtended)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(editReportsExtendedFailure(err));\r\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editReportsExtended'));\r\n    });\r\n};\r\n\r\nexport const editReportsExtendedRequest = (reportObj) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_REQUEST',\r\n    reportObj,\r\n  };\r\n};\r\n\r\nexport const editReportsExtendedSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editReportsExtendedFailure = (err) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}