{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsMovementType\\\\ClaimsMovementType.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport * as utils from 'utils';\nimport styles from './ClaimsMovementType.styles'; //mui\n\nimport { makeStyles, Typography, Card, CardHeader, CardContent, Box, Grid } from '@material-ui/core';\nimport { FormContainer, FormFields, FormRadio, FormText, FormGrid, FormLabel, FormToggle, Layout } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsMovementTypeView.prototypes = {\n  fields: PropTypes.array,\n  underWritingGroups: PropTypes.object,\n  claimForm: PropTypes.object,\n  enforceValueSet: PropTypes.bool\n};\nexport function ClaimsMovementTypeView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      claimForm = _ref.claimForm,\n      underWritingGroups = _ref.underWritingGroups,\n      enforceValueSet = _ref.enforceValueSet;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsMovementType'\n  })();\n  var control = claimForm.control,\n      errors = claimForm.errors,\n      setValue = claimForm.setValue,\n      watch = claimForm.watch;\n  var order = watch('order');\n  useEffect(function () {\n    // if (order === '0') {\n    //   setValue('orderPercentage', 100)\n    // } else if (order === '1') {\n    //   setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n    // }\n    setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n  }, [order, underWritingGroups.percentageOfSelected]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    main: true,\n    padding: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        className: classes.form,\n        children: /*#__PURE__*/_jsxDEV(FormFields, {\n          nestedClasses: {\n            root: classes.wrapper\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                className: classes.cardHeader,\n                title: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  className: classes.title,\n                  children: utils.string.t('claims.typeOfSettlement.title')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(FormToggle, _objectSpread(_objectSpread({\n                  control: control,\n                  buttonGroupProps: {\n                    exclusive: true\n                  }\n                }, utils.form.getFieldProps(fields, 'movementType')), {}, {\n                  enforceValueSet: enforceValueSet\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                className: classes.cardHeader,\n                title: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  className: classes.title,\n                  children: utils.string.t('claims.typeOfSettlement.orderBasis')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'order', control)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                        nestedClasses: {\n                          root: classes.formLabel\n                        },\n                        label: utils.string.t('claims.typeOfSettlement.order')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                      xs: 4,\n                      nestedClasses: {\n                        root: classes.formTextBox\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'orderPercentage', control, errors)), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsMovementTypeView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ClaimsMovementTypeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsMovementTypeView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsMovementType/ClaimsMovementType.view.js"],"names":["React","useEffect","PropTypes","utils","styles","makeStyles","Typography","Card","CardHeader","CardContent","Box","Grid","FormContainer","FormFields","FormRadio","FormText","FormGrid","FormLabel","FormToggle","Layout","ClaimsMovementTypeView","prototypes","fields","array","underWritingGroups","object","claimForm","enforceValueSet","bool","classes","name","control","errors","setValue","watch","order","percentageOfSelected","form","root","wrapper","cardHeader","title","string","t","cardContent","exclusive","getFieldProps","formLabel","formTextBox"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport styles from './ClaimsMovementType.styles';\r\n\r\n//mui\r\nimport { makeStyles, Typography, Card, CardHeader, CardContent, Box, Grid } from '@material-ui/core';\r\nimport { FormContainer, FormFields, FormRadio, FormText, FormGrid, FormLabel, FormToggle, Layout } from 'components';\r\n\r\nClaimsMovementTypeView.prototypes = {\r\n  fields: PropTypes.array,\r\n  underWritingGroups: PropTypes.object,\r\n  claimForm: PropTypes.object,\r\n  enforceValueSet: PropTypes.bool,\r\n};\r\n\r\nexport function ClaimsMovementTypeView({ fields, claimForm, underWritingGroups, enforceValueSet }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsMovementType' })();\r\n\r\n  const { control, errors, setValue, watch } = claimForm;\r\n  const order = watch('order');\r\n\r\n  useEffect(() => {\r\n    // if (order === '0') {\r\n    //   setValue('orderPercentage', 100)\r\n    // } else if (order === '1') {\r\n    //   setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n    // }\r\n    setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n  }, [order, underWritingGroups.percentageOfSelected]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Layout main padding>\r\n    <Grid container direction=\"column\">\r\n      <FormContainer className={classes.form}>\r\n        <FormFields nestedClasses={{ root: classes.wrapper }}>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.root}>\r\n              <CardHeader\r\n                className={classes.cardHeader}\r\n                title={\r\n                  <Typography variant=\"body2\" className={classes.title}>\r\n                    {utils.string.t('claims.typeOfSettlement.title')}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                    <FormToggle\r\n                      control={control}\r\n                      buttonGroupProps={{ exclusive: true }}\r\n                      {...utils.form.getFieldProps(fields, 'movementType')}\r\n                      enforceValueSet={enforceValueSet}\r\n                    />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.root}>\r\n              <CardHeader\r\n                className={classes.cardHeader}\r\n                title={\r\n                  <Typography variant=\"body2\" className={classes.title}>\r\n                    {utils.string.t('claims.typeOfSettlement.orderBasis')}\r\n                  </Typography>\r\n                }\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Box>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'order', control)} />\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={4}>\r\n                        <FormLabel nestedClasses={{ root: classes.formLabel }} label={utils.string.t('claims.typeOfSettlement.order')} />\r\n                      </FormGrid>\r\n                      <FormGrid xs={4} nestedClasses={{ root: classes.formTextBox }}>\r\n                        <FormText {...utils.form.getFieldProps(fields, 'orderPercentage', control, errors)} />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n      </FormFields>\r\n      </FormContainer>\r\n    </Grid>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}