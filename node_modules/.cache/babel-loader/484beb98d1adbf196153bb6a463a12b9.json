{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossesTab\\\\LossesTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types'; //app\n\nimport { LossesTabView } from './LossesTab.view';\nimport { useFlexiColumns } from 'hooks';\nimport { getSearchLosses, selectClaimsStatuses, resetClaimLossFilters, getStatuses, selectLossesData, getLossesTabData, selectLossesTblData } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossesTab.prototypes = {\n  handleCreateClaim: PropTypes.func.isRequired\n};\nexport default function LossesTab(_ref) {\n  _s();\n\n  var handleCreateClaim = _ref.handleCreateClaim;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchorEl = _useState4[0],\n      setAnchorEl = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isTblLoader = _useState6[0],\n      setIsTblLoader = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emptyData = _useState8[0],\n      setEmptyData = _useState8[1];\n\n  var claimsStatuses = useSelector(selectClaimsStatuses);\n  var lossesData = useSelector(selectLossesData);\n  var lossesTblData = useSelector(selectLossesTblData);\n  var defaultFormFields = [{\n    name: 'lossDateFrom',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'lossDateTo',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'firstContactDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(defaultFormFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      watch = _useForm.watch;\n\n  var lossDateFrom = watch('lossDateFrom');\n  var tableFilterFields = [{\n    id: 'lossDateFrom',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateFrom'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossDateFrom')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'lossDateTo',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateTo'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossDateTo')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        minDate: lossDateFrom !== null && lossDateFrom !== void 0 ? lossDateFrom : undefined,\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'firstContactDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'firstContactDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'catCode',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"catCode\",\n      search: true,\n      options: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'lossStatus',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.lossStatus'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"lossStatus\",\n      search: true,\n      options: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 16\n    }, this)\n  }];\n  var searchOptions = [{\n    id: 'lossRef',\n    name: utils.string.t('claims.columns.claimsList.lossRef')\n  }, {\n    id: 'lossName',\n    name: utils.string.t('claims.columns.claimsList.lossName')\n  }, {\n    id: 'lossDescription',\n    name: utils.string.t('claims.columns.claimsList.lossDetails')\n  }, {\n    id: 'catCodeDescription',\n    name: utils.string.t('claims.columns.claimsList.catCodesID')\n  }];\n\n  var handleSearch = function handleSearch(queryObject) {\n    if (queryObject.search) {\n      setIsTblLoader(true);\n      setSearchTerm(queryObject.search);\n      dispatch(getLossesTabData({\n        searchText: queryObject.search\n      }));\n      dispatch(getSearchLosses({\n        term: queryObject.search,\n        filterTerm: '',\n        requestType: 'filter'\n      }));\n      dispatch(getSearchLosses({\n        term: queryObject.search,\n        direction: 'desc',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n        requestType: 'search'\n      })).then(function (resp) {\n        var _resp$json, _resp$json2;\n\n        if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json = resp.json) === null || _resp$json === void 0 ? void 0 : _resp$json.statusCode) === 500) setIsTblLoader(false);\n        if (resp.status === 'OK') setEmptyData(false);\n        if ((resp === null || resp === void 0 ? void 0 : (_resp$json2 = resp.json) === null || _resp$json2 === void 0 ? void 0 : _resp$json2.statusCode) === 500) setEmptyData(true);\n      });\n    }\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    setIsTblLoader(true);\n    dispatch(getSearchLosses({\n      page: newPage,\n      term: searchTerm\n    })).then(function (resp) {\n      var _resp$json3, _resp$json4;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json3 = resp.json) === null || _resp$json3 === void 0 ? void 0 : _resp$json3.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json4 = resp.json) === null || _resp$json4 === void 0 ? void 0 : _resp$json4.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var onResetFilter = function onResetFilter() {\n    setIsTblLoader(true);\n    reset();\n    dispatch(resetClaimLossFilters());\n    dispatch(getSearchLosses({\n      term: searchTerm,\n      filterTerm: '',\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json5, _resp$json6;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json5 = resp.json) === null || _resp$json5 === void 0 ? void 0 : _resp$json5.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json6 = resp.json) === null || _resp$json6 === void 0 ? void 0 : _resp$json6.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleSearchFilter = function handleSearchFilter(data) {\n    var filters = data.filters;\n    setIsTblLoader(true);\n    dispatch(getSearchLosses({\n      term: searchTerm,\n      filterTerm: filters,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json7, _resp$json8;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json7 = resp.json) === null || _resp$json7 === void 0 ? void 0 : _resp$json7.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json8 = resp.json) === null || _resp$json8 === void 0 ? void 0 : _resp$json8.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setIsTblLoader(true);\n    dispatch(getSearchLosses({\n      size: rowsPerPage,\n      term: searchTerm\n    })).then(function (resp) {\n      var _resp$json9, _resp$json10;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json9 = resp.json) === null || _resp$json9 === void 0 ? void 0 : _resp$json9.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json10 = resp.json) === null || _resp$json10 === void 0 ? void 0 : _resp$json10.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    setIsTblLoader(true);\n    dispatch(getSearchLosses({\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm\n    })).then(function (resp) {\n      var _resp$json11, _resp$json12;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json11 = resp.json) === null || _resp$json11 === void 0 ? void 0 : _resp$json11.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json12 = resp.json) === null || _resp$json12 === void 0 ? void 0 : _resp$json12.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\n      dispatch(getStatuses());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var columns = [{\n    id: 'lossRef',\n    label: utils.string.t('claims.columns.claimsList.reference'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'lossName',\n    label: utils.string.t('claims.columns.claimsList.lossName'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'lossDetails',\n    label: utils.string.t('claims.columns.claimsList.lossDetails'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateFrom',\n    label: utils.string.t('claims.columns.claimsList.dateFrom'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateTo',\n    label: utils.string.t('claims.columns.claimsList.dateTo'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'firstContactDateTime',\n    label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'catCodesID',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'lossStatus',\n    label: utils.string.t('claims.columns.claimsList.lossStatus'),\n    visible: true,\n    nowrap: true\n  }];\n  var searchField = [{\n    name: 'searchBy',\n    type: 'autocompletemui',\n    options: searchOptions,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy) !== '' ? searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.id) === (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy);\n    }) : (searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.name) === utils.string.t('claims.columns.claimsList.lossName');\n    })) || null,\n    callback: function callback(evt, value) {\n      dispatch(getLossesTabData({\n        searchBy: value === null || value === void 0 ? void 0 : value.id\n      }));\n    }\n  } // {\n  //   name: 'search',\n  //   defaultValue: '',\n  //   type: 'text',\n  //   placeholder: 'Search',\n  //   icon: SearchIcon,\n  //   value: '',\n  // },\n  ];\n  var actions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {\n      setAnchorEl(values);\n      console.log('Search Values............', values); //setBack(false);\n      //setSearchVal(values.fullName);\n    }\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: function handler() {\n      console.log('Reset ..................'); //setBack(true);\n      //setSearchVal('');\n    }\n  }];\n  var fields = [{\n    //gridSize: { xs: 12 },\n    name: 'fullName',\n    type: 'text',\n    placeholder: utils.string.t('admin.searchByFullName'),\n    value: 'ksdj',\n    muiComponentProps: {\n      'data-testid': 'fullName'\n    }\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      isTableHidden = _useFlexiColumns.isTableHidden,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(LossesTabView, {\n    lossesData: lossesData,\n    tableData: lossesTblData,\n    searchTerm: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText,\n    searchField: searchField,\n    sort: _objectSpread(_objectSpread({}, lossesData.sort), {}, {\n      type: 'numeric'\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    isTableHidden: isTableHidden,\n    handleSearch: handleSearch,\n    handleSort: handleSort,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    handleSearchFilter: handleSearchFilter,\n    handleCreateClaim: handleCreateClaim,\n    tableFilterFields: tableFilterFields,\n    onResetFilter: onResetFilter,\n    toggleColumn: toggleColumn,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    actions: actions,\n    fields: fields,\n    isTblLoader: isTblLoader,\n    emptyData: emptyData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossesTab, \"Kf517KiAfYSZldTJr74Zh3eDf5U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = LossesTab;\nLossesTab.displayName = \"LossesTab\";\nLossesTab.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LossesTab\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\LossesTab\\\\LossesTab.js\"] = {\n    name: \"LossesTab\",\n    docgenInfo: LossesTab.__docgenInfo,\n    path: \"src\\\\modules\\\\LossesTab\\\\LossesTab.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LossesTab\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossesTab/LossesTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","PropTypes","LossesTabView","useFlexiColumns","getSearchLosses","selectClaimsStatuses","resetClaimLossFilters","getStatuses","selectLossesData","getLossesTabData","selectLossesTblData","MultiSelect","FormDate","utils","LossesTab","prototypes","handleCreateClaim","func","isRequired","dispatch","searchTerm","setSearchTerm","anchorEl","setAnchorEl","isTblLoader","setIsTblLoader","emptyData","setEmptyData","claimsStatuses","lossesData","lossesTblData","defaultFormFields","name","type","value","defaultValues","form","getInitialValues","control","reset","watch","lossDateFrom","tableFilterFields","id","label","string","t","content","getFieldProps","fullWidth","margin","clearable","variant","format","placeholder","minDate","undefined","options","searchOptions","handleSearch","queryObject","search","searchText","term","filterTerm","requestType","direction","searchBy","then","resp","status","json","statusCode","handleChangePage","newPage","page","onResetFilter","handleSearchFilter","data","filters","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","toUpperCase","generic","isInvalidOrEmptyArray","columns","nowrap","visible","searchField","optionKey","optionLabel","find","item","callback","evt","actions","handler","values","console","log","fields","muiComponentProps","columnsArray","isTableHidden","columnProps","toggleColumn","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { LossesTabView } from './LossesTab.view';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport {\r\n  getSearchLosses,\r\n  selectClaimsStatuses,\r\n  resetClaimLossFilters,\r\n  getStatuses,\r\n  selectLossesData,\r\n  getLossesTabData,\r\n  selectLossesTblData,\r\n} from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nLossesTab.prototypes = {\r\n  handleCreateClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function LossesTab({ handleCreateClaim }) {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isTblLoader, setIsTblLoader] = useState(false);\r\n  const [emptyData, setEmptyData] = useState(false);\r\n\r\n  const claimsStatuses = useSelector(selectClaimsStatuses);\r\n  const lossesData = useSelector(selectLossesData);\r\n  const lossesTblData = useSelector(selectLossesTblData);\r\n  const defaultFormFields = [\r\n    {\r\n      name: 'lossDateFrom',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'lossDateTo',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'firstContactDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(defaultFormFields);\r\n  const { control, reset, watch } = useForm({ defaultValues });\r\n  const lossDateFrom = watch('lossDateFrom');\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'lossDateFrom',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateFrom'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossDateFrom')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'lossDateTo',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateTo'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossDateTo')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            minDate: lossDateFrom ?? undefined,\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'firstContactDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'firstContactDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'catCode',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: [],\r\n      content: <MultiSelect id=\"catCode\" search options={[]} />,\r\n    },\r\n    {\r\n      id: 'lossStatus',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.lossStatus'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: [],\r\n      content: <MultiSelect id=\"lossStatus\" search options={[]} />,\r\n    },\r\n  ];\r\n\r\n  const searchOptions = [\r\n    { id: 'lossRef', name: utils.string.t('claims.columns.claimsList.lossRef') },\r\n    { id: 'lossName', name: utils.string.t('claims.columns.claimsList.lossName') },\r\n    { id: 'lossDescription', name: utils.string.t('claims.columns.claimsList.lossDetails') },\r\n    { id: 'catCodeDescription', name: utils.string.t('claims.columns.claimsList.catCodesID') },\r\n  ];\r\n\r\n  const handleSearch = (queryObject) => {\r\n    if (queryObject.search) {\r\n      setIsTblLoader(true);\r\n      setSearchTerm(queryObject.search);\r\n      dispatch(getLossesTabData({searchText: queryObject.search }));\r\n      dispatch(getSearchLosses({ term: queryObject.search, filterTerm: '', requestType: 'filter' }));\r\n      dispatch(getSearchLosses({ term: queryObject.search, direction: 'desc', searchBy: lossesData?.searchBy, requestType: 'search' })).then((resp)=>{\r\n        if(resp.status==='OK' || resp?.json?.statusCode===500)\r\n          setIsTblLoader(false);\r\n          if(resp.status==='OK') setEmptyData(false);\r\n          if(resp?.json?.statusCode===500) setEmptyData(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setIsTblLoader(true);\r\n    dispatch(getSearchLosses({ page: newPage, term: searchTerm })).then((resp)=>{\r\n      if(resp.status==='OK' || resp?.json?.statusCode===500)\r\n        setIsTblLoader(false);\r\n        if(resp.status==='OK') setEmptyData(false);\r\n        if(resp?.json?.statusCode===500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    setIsTblLoader(true);\r\n    reset();\r\n    dispatch(resetClaimLossFilters());\r\n    dispatch(getSearchLosses({ term: searchTerm, filterTerm: '', requestType: 'search' })).then((resp)=>{\r\n      if(resp.status==='OK' || resp?.json?.statusCode===500)\r\n        setIsTblLoader(false);\r\n        if(resp.status==='OK') setEmptyData(false);\r\n        if(resp?.json?.statusCode===500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleSearchFilter = (data) => {\r\n    const { filters } = data;\r\n    setIsTblLoader(true);\r\n    dispatch(getSearchLosses({ term: searchTerm, filterTerm: filters, requestType: 'search' })).then((resp)=>{\r\n      if(resp.status==='OK'|| resp?.json?.statusCode===500)\r\n        setIsTblLoader(false);\r\n        if(resp.status==='OK') setEmptyData(false);\r\n        if(resp?.json?.statusCode===500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIsTblLoader(true);\r\n    dispatch(getSearchLosses({ size: rowsPerPage, term: searchTerm })).then((resp)=>{\r\n      if(resp.status==='OK'|| resp?.json?.statusCode===500)\r\n        setIsTblLoader(false);\r\n        if(resp.status==='OK') setEmptyData(false);\r\n        if(resp?.json?.statusCode===500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    setIsTblLoader(true);\r\n    dispatch(getSearchLosses({ sortBy: by, direction: dir.toUpperCase(), term: searchTerm })).then((resp)=>{\r\n      if(resp.status==='OK'|| resp?.json?.statusCode===500)\r\n        setIsTblLoader(false);\r\n        if(resp.status==='OK') setEmptyData(false);\r\n        if(resp?.json?.statusCode===500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\r\n        dispatch(getStatuses());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.columns.claimsList.reference'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossName',\r\n      label: utils.string.t('claims.columns.claimsList.lossName'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossDetails',\r\n      label: utils.string.t('claims.columns.claimsList.lossDetails'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateFrom',\r\n      label: utils.string.t('claims.columns.claimsList.dateFrom'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateTo',\r\n      label: utils.string.t('claims.columns.claimsList.dateTo'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'firstContactDateTime',\r\n      label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'catCodesID',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossStatus',\r\n      label: utils.string.t('claims.columns.claimsList.lossStatus'),\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n  ];\r\n\r\n  const searchField = [\r\n    {\r\n      name: 'searchBy',\r\n      type: 'autocompletemui',\r\n      options: searchOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: lossesData?.searchBy !== '' ? \r\n              searchOptions?.find((item) => item?.id === lossesData?.searchBy) :\r\n              (searchOptions?.find((item) =>\r\n                item?.name === utils.string.t('claims.columns.claimsList.lossName')) || null),\r\n      callback: (evt, value) => {\r\n        dispatch(getLossesTabData({searchBy: value?.id }));\r\n      }\r\n    },\r\n    // {\r\n    //   name: 'search',\r\n    //   defaultValue: '',\r\n    //   type: 'text',\r\n    //   placeholder: 'Search',\r\n    //   icon: SearchIcon,\r\n    //   value: '',\r\n    // },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.searchLabel'),\r\n      handler: (values) => {\r\n        setAnchorEl(values);\r\n        console.log('Search Values............', values);\r\n        //setBack(false);\r\n        //setSearchVal(values.fullName);\r\n      },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: () => {\r\n        console.log('Reset ..................');\r\n        //setBack(true);\r\n        //setSearchVal('');\r\n      },\r\n    },\r\n  ];\r\n\r\n  const fields = [\r\n    {\r\n      //gridSize: { xs: 12 },\r\n      name: 'fullName',\r\n      type: 'text',\r\n      placeholder: utils.string.t('admin.searchByFullName'),\r\n      value: 'ksdj',\r\n      muiComponentProps: {\r\n        'data-testid': 'fullName',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, isTableHidden, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <LossesTabView\r\n      lossesData={lossesData}\r\n      tableData={lossesTblData}\r\n      searchTerm={lossesData?.searchText}\r\n      searchField={searchField}\r\n      sort={{\r\n        ...lossesData.sort,\r\n        type: 'numeric',\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      isTableHidden={isTableHidden}\r\n      handleSearch={handleSearch}\r\n      handleSort={handleSort}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      handleSearchFilter={handleSearchFilter}\r\n      handleCreateClaim={handleCreateClaim}\r\n      tableFilterFields={tableFilterFields}\r\n      onResetFilter={onResetFilter}\r\n      toggleColumn={toggleColumn}\r\n      anchorEl={anchorEl}\r\n      setAnchorEl={setAnchorEl}\r\n      actions={actions}\r\n      fields={fields}\r\n      isTblLoader={isTblLoader}\r\n      emptyData={emptyData}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}