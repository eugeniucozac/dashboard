{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MudmapLimit\\\\MudmapLimit.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport kebabCase from 'lodash/kebabCase'; // app\n\nimport styles from './MudmapLimit.styles';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMudmapLimit.propTypes = {\n  limit: PropTypes.object,\n  height: PropTypes.number,\n  currency: PropTypes.string,\n  fullscreen: PropTypes.bool\n};\nexport default function MudmapLimit(_ref) {\n  var _this = this;\n\n  var limit = _ref.limit,\n      height = _ref.height,\n      currency = _ref.currency,\n      fullscreen = _ref.fullscreen;\n  var offset = limit.value / height * 100;\n  var classes = makeStyles(styles, {\n    name: 'MudmapLimit'\n  })({\n    offset: offset,\n    fullscreen: fullscreen\n  });\n  var amount = utils.string.t('format.currency', {\n    value: {\n      number: limit.value,\n      format: {\n        average: true,\n        totalLength: 12,\n        lowPrecision: false,\n        trimMantissa: true\n      },\n      currency: currency\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    \"data-name\": limit.name,\n    \"data-testid\": \"limit-\".concat(kebabCase(limit.name), \"-\").concat(limit.value),\n    children: _toConsumableArray(Array(12)).map(function (_, i) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.label,\n        children: \"\".concat(limit.name, \" (\").concat(amount.replace(' ', ''), \")\")\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = MudmapLimit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MudmapLimit\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MudmapLimit/MudmapLimit.js"],"names":["React","PropTypes","kebabCase","styles","utils","makeStyles","Typography","MudmapLimit","propTypes","limit","object","height","number","currency","string","fullscreen","bool","offset","value","classes","name","amount","t","format","average","totalLength","lowPrecision","trimMantissa","root","Array","map","_","i","label","replace"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACtBC,EAAAA,KAAK,EAAER,SAAS,CAACS,MADK;AAEtBC,EAAAA,MAAM,EAAEV,SAAS,CAACW,MAFI;AAGtBC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,MAHE;AAItBC,EAAAA,UAAU,EAAEd,SAAS,CAACe;AAJA,CAAxB;AAOA,eAAe,SAAST,WAAT,OAA8D;AAAA;;AAAA,MAAvCE,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCE,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBE,QAAwB,QAAxBA,QAAwB;AAAA,MAAdE,UAAc,QAAdA,UAAc;AAC3E,MAAME,MAAM,GAAIR,KAAK,CAACS,KAAN,GAAcP,MAAf,GAAyB,GAAxC;AACA,MAAMQ,OAAO,GAAGd,UAAU,CAACF,MAAD,EAAS;AAAEiB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAA4C;AAAEH,IAAAA,MAAM,EAANA,MAAF;AAAUF,IAAAA,UAAU,EAAVA;AAAV,GAA5C,CAAhB;AACA,MAAMM,MAAM,GAAGjB,KAAK,CAACU,MAAN,CAAaQ,CAAb,CAAe,iBAAf,EAAkC;AAC/CJ,IAAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAEH,KAAK,CAACS,KAAhB;AAAuBK,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,WAAW,EAAE,EAA9B;AAAkCC,QAAAA,YAAY,EAAE,KAAhD;AAAuDC,QAAAA,YAAY,EAAE;AAArE,OAA/B;AAA4Gd,MAAAA,QAAQ,EAARA;AAA5G;AADwC,GAAlC,CAAf;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACS,IAAxB;AAA8B,iBAAWnB,KAAK,CAACW,IAA/C;AAAqD,mCAAsBlB,SAAS,CAACO,KAAK,CAACW,IAAP,CAA/B,cAA+CX,KAAK,CAACS,KAArD,CAArD;AAAA,cACG,mBAAIW,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC5B,0BACE,QAAC,UAAD;AAAoB,QAAA,SAAS,EAAEb,OAAO,CAACc,KAAvC;AAAA,4BACMxB,KAAK,CAACW,IADZ,eACqBC,MAAM,CAACa,OAAP,CAAe,GAAf,EAAoB,EAApB,CADrB;AAAA,SAAiBF,CAAjB;AAAA;AAAA;AAAA;AAAA,eADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAlBuBzB,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\n// app\r\nimport styles from './MudmapLimit.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nMudmapLimit.propTypes = {\r\n  limit: PropTypes.object,\r\n  height: PropTypes.number,\r\n  currency: PropTypes.string,\r\n  fullscreen: PropTypes.bool,\r\n};\r\n\r\nexport default function MudmapLimit({ limit, height, currency, fullscreen }) {\r\n  const offset = (limit.value / height) * 100;\r\n  const classes = makeStyles(styles, { name: 'MudmapLimit' })({ offset, fullscreen });\r\n  const amount = utils.string.t('format.currency', {\r\n    value: { number: limit.value, format: { average: true, totalLength: 12, lowPrecision: false, trimMantissa: true }, currency },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root} data-name={limit.name} data-testid={`limit-${kebabCase(limit.name)}-${limit.value}`}>\r\n      {[...Array(12)].map((_, i) => {\r\n        return (\r\n          <Typography key={i} className={classes.label}>\r\n            {`${limit.name} (${amount.replace(' ', '')})`}\r\n          </Typography>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}