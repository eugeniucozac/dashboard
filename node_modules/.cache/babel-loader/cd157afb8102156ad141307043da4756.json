{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var patchPolicy = function patchPolicy(policyId, body) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.patchPolicy',\n      message: 'Data missing for PATCH request'\n    };\n    dispatch(patchPolicyRequest(policyId, body));\n    dispatch(addLoader('placementPatchPolicy'));\n\n    if (!policyId || !utils.generic.isValidObject(body)) {\n      dispatch(patchPolicyFailure(defaultError));\n      dispatch(enqueueNotification('notification.patchPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('placementPatchPolicy'));\n      return;\n    }\n\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/policy/\".concat(policyId),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(patchPolicySuccess(data));\n      dispatch(enqueueNotification('notification.patchPolicy.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('placementPatchPolicy'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API delete error (placement.patchPolicy)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(patchPolicyFailure(err));\n      dispatch(enqueueNotification('notification.patchPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('placementPatchPolicy'));\n      return Promise.reject(err);\n    });\n  };\n};\nexport var patchPolicyRequest = function patchPolicyRequest(policyId, body) {\n  return {\n    type: 'PLACEMENT_EDIT_POLICY_PATCH_REQUEST',\n    payload: {\n      policyId: policyId,\n      body: body\n    }\n  };\n};\nexport var patchPolicySuccess = function patchPolicySuccess(data) {\n  return {\n    type: 'PLACEMENT_POLICY_PATCH_SUCCESS',\n    payload: data\n  };\n};\nexport var patchPolicyFailure = function patchPolicyFailure(error) {\n  return {\n    type: 'PLACEMENT_EDIT_POLICY_PATCH_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.patchPolicy.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","patchPolicy","policyId","body","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","patchPolicyRequest","generic","isValidObject","patchPolicyFailure","api","patch","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","patchPolicySuccess","err","errorParams","handleError","handleUnauthorized","Promise","reject","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const patchPolicy = (policyId, body) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.patchPolicy',\r\n    message: 'Data missing for PATCH request',\r\n  };\r\n\r\n  dispatch(patchPolicyRequest(policyId, body));\r\n  dispatch(addLoader('placementPatchPolicy'));\r\n\r\n  if (!policyId || !utils.generic.isValidObject(body)) {\r\n    dispatch(patchPolicyFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.patchPolicy.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('placementPatchPolicy'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/policy/${policyId}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(patchPolicySuccess(data));\r\n      dispatch(enqueueNotification('notification.patchPolicy.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('placementPatchPolicy'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API delete error (placement.patchPolicy)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(patchPolicyFailure(err));\r\n      dispatch(enqueueNotification('notification.patchPolicy.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('placementPatchPolicy'));\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const patchPolicyRequest = (policyId, body) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_POLICY_PATCH_REQUEST',\r\n    payload: { policyId, body },\r\n  };\r\n};\r\n\r\nexport const patchPolicySuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_PATCH_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const patchPolicyFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_POLICY_PATCH_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}