{"ast":null,"code":"import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var sendVerificationEmail = function sendVerificationEmail(userId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(sendVerificationEmailRequest(userId));\n    dispatch(addLoader('sendVerificationEmail'));\n    var defaultError = {\n      file: 'stores/admin.actions.sendVerificationEmail'\n    };\n\n    if (!userId) {\n      dispatch(sendVerificationEmailFailure(defaultError));\n      dispatch(enqueueNotification('notification.sendEmailVerification.fail', 'error'));\n      dispatch(removeLoader('sendVerificationEmail'));\n      dispatch(hideModal());\n      return;\n    }\n\n    var data = {\n      id: userId\n    };\n    var path = \"api/user/\".concat(userId, \"/verify\");\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: path,\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(sendVerificationEmailSuccess(data));\n      dispatch(enqueueNotification('notification.sendEmailVerification.success', 'success'));\n      return data;\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(sendVerificationEmailFailure(err));\n      dispatch(enqueueNotification('notification.sendEmailVerification.fail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('sendVerificationEmail'));\n    });\n  };\n};\nexport var sendVerificationEmailRequest = function sendVerificationEmailRequest(payload) {\n  return {\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_REQUEST',\n    payload: payload\n  };\n};\nexport var sendVerificationEmailSuccess = function sendVerificationEmailSuccess(payload) {\n  return {\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_SUCCESS',\n    payload: payload\n  };\n};\nexport var sendVerificationEmailFailure = function sendVerificationEmailFailure(error) {\n  return {\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/admin/admin.actions.putSendVerificationEmail.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","hideModal","utils","sendVerificationEmail","userId","dispatch","getState","auth","user","endpoint","config","vars","sendVerificationEmailRequest","defaultError","file","sendVerificationEmailFailure","data","id","path","api","put","token","accessToken","edge","then","response","handleResponse","sendVerificationEmailSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const sendVerificationEmail = (userId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  dispatch(sendVerificationEmailRequest(userId));\r\n  dispatch(addLoader('sendVerificationEmail'));\r\n\r\n  const defaultError = {\r\n    file: 'stores/admin.actions.sendVerificationEmail',\r\n  };\r\n\r\n  if (!userId) {\r\n    dispatch(sendVerificationEmailFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.sendEmailVerification.fail', 'error'));\r\n    dispatch(removeLoader('sendVerificationEmail'));\r\n    dispatch(hideModal());\r\n    return;\r\n  }\r\n\r\n  const data = { id: userId };\r\n  const path = `api/user/${userId}/verify`;\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path,\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(sendVerificationEmailSuccess(data));\r\n      dispatch(enqueueNotification('notification.sendEmailVerification.success', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(sendVerificationEmailFailure(err));\r\n      dispatch(enqueueNotification('notification.sendEmailVerification.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('sendVerificationEmail'));\r\n    });\r\n};\r\n\r\nexport const sendVerificationEmailRequest = (payload) => {\r\n  return {\r\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const sendVerificationEmailSuccess = (payload) => {\r\n  return {\r\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const sendVerificationEmailFailure = (error) => {\r\n  return {\r\n    type: 'ADMIN_USER_SEND_VERIFICATION_EMAIL_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}