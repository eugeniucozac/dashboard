{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditLossInformation\\\\EditLossInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './EditLossInformation.styles';\nimport { EditLossInformationView } from './EditLossInformation.view';\nimport { hideModal, showModal, selectLossId, selectCatCodes, postEditLossInformation } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditLossInformation.propTypes = {\n  submitHandler: PropTypes.func\n};\nEditLossInformation.defaultProps = {\n  submitHandler: function submitHandler() {}\n};\nexport default function EditLossInformation(_ref) {\n  _s();\n\n  var _lossInformation$isAn,\n      _this = this;\n\n  var _submitHandler = _ref.submitHandler;\n  var classes = makeStyles(styles, {\n    name: 'EditLossInformation'\n  })();\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var formattedCatCodes = catCodes.map(function (list) {\n    var name = \"\".concat(list.name, \" - \").concat(list.description.substring(0, 99));\n    return {\n      id: list.id,\n      name: name\n    };\n  });\n  var isAnyClaimSubmitted = (_lossInformation$isAn = lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.isAnyClaimSubmitted) !== null && _lossInformation$isAn !== void 0 ? _lossInformation$isAn : false;\n  var fields = [{\n    name: 'lossRef',\n    type: 'text',\n    muiComponentProps: {\n      disabled: true\n    },\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) || ''\n  }, {\n    name: 'catCodesID',\n    type: 'autocompletemui',\n    options: formattedCatCodes,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (formattedCatCodes === null || formattedCatCodes === void 0 ? void 0 : formattedCatCodes.find(function (c) {\n      var _c$id, _lossInformation$catC;\n\n      return ((_c$id = c.id) === null || _c$id === void 0 ? void 0 : _c$id.toString()) === (lossInformation === null || lossInformation === void 0 ? void 0 : (_lossInformation$catC = lossInformation.catCodesID) === null || _lossInformation$catC === void 0 ? void 0 : _lossInformation$catC.toString());\n    })) || null,\n    muiComponentProps: {\n      'data-testid': 'catCodes',\n      disabled: isAnyClaimSubmitted,\n      classes: {\n        root: classes.catCodeSelect\n      }\n    }\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || null,\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      disabled: isAnyClaimSubmitted,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      console.log(\"jenea\");\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('catCodesID', {\n      is: function is(val) {\n        return val !== null && (val === null || val === void 0 ? void 0 : val.id) !== '0';\n      },\n      then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\n      otherwise: Yup.date().nullable()\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || null,\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      disabled: isAnyClaimSubmitted,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    }).when('catCodesID', {\n      is: function is(val) {\n        return val !== null && (val === null || val === void 0 ? void 0 : val.id) !== '0';\n      },\n      then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.toDate')),\n      otherwise: Yup.date().nullable()\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'lossName',\n    type: 'text',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName) || '',\n    validation: Yup.string().min(20, utils.string.t('claims.lossInformation.validation.minLossName')).max(50, utils.string.t('claims.lossInformation.validation.maxLossName')).required(utils.string.t('claims.lossInformation.validation.lossName')),\n    'data-testid': 'lossName',\n    muiComponentProps: {\n      disabled: isAnyClaimSubmitted\n    }\n  }, {\n    name: 'lossDescription',\n    type: 'textarea',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription) || '',\n    validation: Yup.string().max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription')).required(utils.string.t('claims.lossInformation.validation.lossDescription')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 350\n      },\n      disabled: isAnyClaimSubmitted,\n      multiline: true,\n      rows: 8,\n      rowsMax: 8,\n      'data-testid': 'details'\n    }\n  }, {\n    type: 'datepicker',\n    name: 'firstContactDate',\n    icon: 'TodayIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || null,\n        format: 'YYYY-MM-DD'\n      }\n    }),\n    muiComponentProps: {\n      fullWidth: true,\n      disabled: isAnyClaimSubmitted\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'firstContactTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || null,\n        format: 'HH:mm'\n      }\n    }),\n    muiComponentProps: {\n      fullWidth: true,\n      disabled: isAnyClaimSubmitted\n    }\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.cancel'),\n    handler: function handler(values) {\n      var currentValues = Object.fromEntries(Object.entries({\n        catCodesID: values.catCodesID,\n        firstContactDate: moment(values.firstContactDate).format('YYYY-MM-DD'),\n        isActive: 1,\n        lossDescription: values.lossDescription,\n        lossDetailID: lossInformation.lossDetailID,\n        lossName: values.lossName\n      }).sort());\n      var latestValues = Object.fromEntries(Object.entries(_objectSpread(_objectSpread({}, lossInformation), {}, {\n        firstContactDate: moment(lossInformation.firstContactDate).format('YYYY-MM-DD')\n      })).sort());\n      JSON.stringify(currentValues) !== JSON.stringify(latestValues) ? dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('navigation.alert'),\n          fullWidth: true,\n          maxWidth: 'sm',\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            confirmMessage: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"secondary\",\n              children: utils.string.t('claims.modals.confirm.subtitle')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, _this),\n            submitHandler: function submitHandler() {\n              _submitHandler();\n\n              dispatch(hideModal());\n            },\n            cancelHandler: function cancelHandler() {\n              dispatch(hideModal('CONFIRM'));\n            }\n          }\n        }\n      })) : dispatch(hideModal());\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: function handler(values) {\n      dispatch(postEditLossInformation(values));\n\n      _submitHandler();\n    }\n  }];\n\n  var onClosingUploadModal = function onClosingUploadModal() {\n    dispatch(hideModal('DMS_UPLOAD_FILES'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditLossInformationView, {\n    actions: actions,\n    fields: fields,\n    lossInformation: lossInformation,\n    handlers: {\n      onClosingUploadModal: onClosingUploadModal\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditLossInformation, \"QiCqvBoJHczJo6srHepNBiPyGBQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditLossInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLossInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditLossInformation/EditLossInformation.js"],"names":["React","useDispatch","useSelector","Yup","moment","PropTypes","styles","EditLossInformationView","hideModal","showModal","selectLossId","selectCatCodes","postEditLossInformation","utils","makeStyles","Typography","EditLossInformation","propTypes","submitHandler","func","defaultProps","classes","name","dispatch","lossInformation","catCodes","formattedCatCodes","map","list","description","substring","id","isAnyClaimSubmitted","fields","type","muiComponentProps","disabled","value","lossRef","options","optionKey","optionLabel","find","c","toString","catCodesID","root","catCodeSelect","fromDate","icon","fullWidth","datepicker","validation","date","test","string","t","console","log","parent","toDate","isSameOrBefore","when","is","val","then","nullable","required","otherwise","outputFormat","isSameOrAfter","lossName","min","max","lossDescription","inputProps","maxLength","multiline","rows","rowsMax","firstContactDate","format","Date","actions","label","handler","values","currentValues","Object","fromEntries","entries","isActive","lossDetailID","sort","latestValues","JSON","stringify","component","props","title","maxWidth","componentProps","cancelLabel","confirmLabel","confirmMessage","cancelHandler","onClosingUploadModal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './EditLossInformation.styles';\r\nimport { EditLossInformationView } from './EditLossInformation.view';\r\nimport { hideModal, showModal, selectLossId, selectCatCodes, postEditLossInformation } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nEditLossInformation.propTypes = {\r\n  submitHandler: PropTypes.func,\r\n};\r\n\r\nEditLossInformation.defaultProps = {\r\n  submitHandler: () => {},\r\n};\r\n\r\nexport default function EditLossInformation({ submitHandler }) {\r\n  const classes = makeStyles(styles, { name: 'EditLossInformation' })();\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const formattedCatCodes = catCodes.map((list) => {\r\n    const name = `${list.name} - ${list.description.substring(0, 99)}`;\r\n    return { id: list.id, name };\r\n  });\r\n\r\n  const isAnyClaimSubmitted = lossInformation?.isAnyClaimSubmitted ?? false;\r\n  const fields = [\r\n    {\r\n      name: 'lossRef',\r\n      type: 'text',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n      value: lossInformation?.lossRef || '',\r\n    },\r\n    {\r\n      name: 'catCodesID',\r\n      type: 'autocompletemui',\r\n      options: formattedCatCodes,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: formattedCatCodes?.find((c) => c.id?.toString() === lossInformation?.catCodesID?.toString()) || null,\r\n      muiComponentProps: {\r\n        'data-testid': 'catCodes',\r\n        disabled: isAnyClaimSubmitted,\r\n\r\n        classes: {\r\n          root: classes.catCodeSelect,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      value: lossInformation?.fromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        disabled: isAnyClaimSubmitted,\r\n\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n          console.log(\"jenea\")\r\n          return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n        })\r\n        .when('catCodesID', {\r\n          is: (val) => val !== null && val?.id !== '0',\r\n          then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\r\n          otherwise: Yup.date().nullable(),\r\n        }),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      value: lossInformation?.toDate || null,\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        disabled: isAnyClaimSubmitted,\r\n\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n          return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n        })\r\n        .when('catCodesID', {\r\n          is: (val) => val !== null && val?.id !== '0',\r\n          then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.toDate')),\r\n          otherwise: Yup.date().nullable(),\r\n        }),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossName',\r\n      type: 'text',\r\n      value: lossInformation?.lossName || '',\r\n      validation: Yup.string()\r\n        .min(20, utils.string.t('claims.lossInformation.validation.minLossName'))\r\n        .max(50, utils.string.t('claims.lossInformation.validation.maxLossName'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossName')),\r\n      'data-testid': 'lossName',\r\n      muiComponentProps: {\r\n        disabled: isAnyClaimSubmitted,\r\n      },\r\n    },\r\n    {\r\n      name: 'lossDescription',\r\n      type: 'textarea',\r\n      value: lossInformation?.lossDescription || '',\r\n      validation: Yup.string()\r\n        .max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossDescription')),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 350 },\r\n        disabled: isAnyClaimSubmitted,\r\n\r\n        multiline: true,\r\n        rows: 8,\r\n        rowsMax: 8,\r\n        'data-testid': 'details',\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'firstContactDate',\r\n      icon: 'TodayIcon',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'YYYY-MM-DD' } }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        disabled: isAnyClaimSubmitted,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'firstContactTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'HH:mm' } }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        disabled: isAnyClaimSubmitted,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: (values) => {\r\n        const currentValues = Object.fromEntries(\r\n          Object.entries({\r\n            catCodesID: values.catCodesID,\r\n            firstContactDate: moment(values.firstContactDate).format('YYYY-MM-DD'),\r\n            isActive: 1,\r\n            lossDescription: values.lossDescription,\r\n            lossDetailID: lossInformation.lossDetailID,\r\n            lossName: values.lossName,\r\n          }).sort()\r\n        );\r\n\r\n        const latestValues = Object.fromEntries(\r\n          Object.entries({\r\n            ...lossInformation,\r\n            firstContactDate: moment(lossInformation.firstContactDate).format('YYYY-MM-DD'),\r\n          }).sort()\r\n        );\r\n\r\n        JSON.stringify(currentValues) !== JSON.stringify(latestValues)\r\n          ? dispatch(\r\n            showModal({\r\n              component: 'CONFIRM',\r\n              props: {\r\n                title: utils.string.t('navigation.alert'),\r\n                fullWidth: true,\r\n                maxWidth: 'sm',\r\n                componentProps: {\r\n                  cancelLabel: utils.string.t('app.no'),\r\n                  confirmLabel: utils.string.t('app.yes'),\r\n                  confirmMessage: (\r\n                    <Typography variant=\"h5\" color=\"secondary\">\r\n                      {utils.string.t('claims.modals.confirm.subtitle')}\r\n                    </Typography>\r\n                  ),\r\n                  submitHandler: () => {\r\n                    submitHandler();\r\n                    dispatch(hideModal());\r\n                  },\r\n                  cancelHandler: () => {\r\n                    dispatch(hideModal('CONFIRM'));\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          )\r\n          : dispatch(hideModal());\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: (values) => {\r\n        dispatch(postEditLossInformation(values));\r\n        submitHandler();\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onClosingUploadModal = () => {\r\n    dispatch(hideModal('DMS_UPLOAD_FILES'));\r\n  }\r\n\r\n  return (\r\n    <EditLossInformationView\r\n      actions={actions}\r\n      fields={fields}\r\n      lossInformation={lossInformation}\r\n      handlers={{\r\n        onClosingUploadModal\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}