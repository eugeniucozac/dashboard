{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './DmsUploadMetaData.styles';\nimport { Accordion, FormGrid, Loader, Info } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport config from 'config'; // mui\n\nimport { Box, Typography, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nDmsUploadMetaDataView.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  dmsContext: PropTypes.string.isRequired,\n  preUploadMetaData: PropTypes.object,\n  postUploadMetaData: PropTypes.array,\n  filesSubmitted: PropTypes.bool\n};\nexport function DmsUploadMetaDataView(_ref) {\n  var _this = this;\n\n  var isLoading = _ref.isLoading,\n      dmsContext = _ref.dmsContext,\n      preUploadMetaData = _ref.preUploadMetaData,\n      postUploadMetaData = _ref.postUploadMetaData,\n      filesSubmitted = _ref.filesSubmitted;\n  var classes = makeStyles(styles, {\n    name: 'DmsUploadMetaData'\n  })();\n  var commonInfo = preUploadMetaData.commonInfo,\n      lossInfo = preUploadMetaData.lossInfo,\n      claimInfo = preUploadMetaData.claimInfo,\n      policyInfo = preUploadMetaData.policyInfo;\n  var isClaimContext = dmsContext === constants.DMS_CONTEXT_CLAIM;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      isDataLoading: isLoading,\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\" \", utils.string.t('dms.upload.modalItems.viewData')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 51\n      }, this),\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.boxView,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('dms.upload.commonInfoSection.commonInfo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: [commonInfo === null || commonInfo === void 0 ? void 0 : commonInfo.map(function (_ref2) {\n              var name = _ref2.name,\n                  value = _ref2.value,\n                  id = _ref2.id;\n              return /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  title: name,\n                  description: value,\n                  nestedClasses: {\n                    root: classes.info\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, _this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, _this);\n            }), filesSubmitted && utils.generic.isValidArray(postUploadMetaData, true) && postUploadMetaData.map(function (eachFileMetaData, ind) {\n              var createdDate = eachFileMetaData.createdDate,\n                  documentVersion = eachFileMetaData.documentVersion,\n                  createdByName = eachFileMetaData.createdByName,\n                  fileLastModifiedDate = eachFileMetaData.fileLastModifiedDate,\n                  documentUploaded = eachFileMetaData.documentUploaded;\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: documentUploaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [createdDate && /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    md: 3,\n                    children: /*#__PURE__*/_jsxDEV(Info, {\n                      title: utils.string.t('dms.upload.commonUploadInfoSection.documentCreatedOn'),\n                      description: \"\".concat(utils.string.t('format.date', {\n                        value: {\n                          date: createdDate,\n                          format: config.ui.format.date.text\n                        }\n                      })),\n                      nestedClasses: {\n                        root: classes.info\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 31\n                  }, _this), documentVersion && /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    md: 3,\n                    children: /*#__PURE__*/_jsxDEV(Info, {\n                      title: utils.string.t('dms.upload.commonUploadInfoSection.documentVersion'),\n                      description: documentVersion,\n                      nestedClasses: {\n                        root: classes.info\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 31\n                  }, _this), createdByName && /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    md: 3,\n                    children: /*#__PURE__*/_jsxDEV(Info, {\n                      title: utils.string.t('dms.upload.commonUploadInfoSection.documentUploadedBy'),\n                      description: createdByName,\n                      nestedClasses: {\n                        root: classes.info\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 31\n                  }, _this), fileLastModifiedDate && /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    md: 3,\n                    children: /*#__PURE__*/_jsxDEV(Info, {\n                      title: utils.string.t('dms.upload.commonUploadInfoSection.documentModifiedOn'),\n                      description: \"\".concat(utils.string.t('format.date', {\n                        value: {\n                          date: fileLastModifiedDate,\n                          format: config.ui.format.date.text\n                        }\n                      })),\n                      nestedClasses: {\n                        root: classes.info\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 33\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 31\n                  }, _this)]\n                }, void 0, true)\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), isClaimContext && /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.boxView,\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('dms.upload.claimInfoSection.claimDetails')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (_ref3) {\n              var name = _ref3.name,\n                  value = _ref3.value,\n                  id = _ref3.id;\n              return /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  title: name,\n                  description: value,\n                  nestedClasses: {\n                    root: classes.info\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, _this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), (isClaimContext || dmsContext === constants.DMS_CONTEXT_LOSS) && /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.boxView,\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('dms.upload.lossInfoSection.lossDetails')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (_ref4) {\n              var name = _ref4.name,\n                  value = _ref4.value,\n                  id = _ref4.id;\n              return /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  title: name,\n                  description: value,\n                  nestedClasses: {\n                    root: classes.info\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, _this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), (dmsContext === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION || dmsContext === constants.DMS_CONTEXT_POLICY || dmsContext === constants.DMS_CONTEXT_CASE) && /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.boxView,\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('dms.upload.policyInfoSection.policyDetails')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: policyInfo === null || policyInfo === void 0 ? void 0 : policyInfo.map(function (_ref5) {\n              var name = _ref5.name,\n                  value = _ref5.value,\n                  id = _ref5.id;\n              return /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Info, {\n                  title: name,\n                  description: value,\n                  nestedClasses: {\n                    root: classes.info\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, _this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        visible: isLoading,\n        inline: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = DmsUploadMetaDataView;\nDmsUploadMetaDataView.displayName = \"DmsUploadMetaDataView\";\nDmsUploadMetaDataView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DmsUploadMetaDataView\",\n  \"props\": {\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"dmsContext\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"preUploadMetaData\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"postUploadMetaData\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"filesSubmitted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.view.js\"] = {\n    name: \"DmsUploadMetaDataView\",\n    docgenInfo: DmsUploadMetaDataView.__docgenInfo,\n    path: \"src\\\\forms\\\\DmsUploadMetaData\\\\DmsUploadMetaData.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsUploadMetaDataView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DmsUploadMetaData/DmsUploadMetaData.view.js"],"names":["React","Fragment","PropTypes","styles","Accordion","FormGrid","Loader","Info","utils","constants","config","Box","Typography","makeStyles","DmsUploadMetaDataView","propTypes","isLoading","bool","isRequired","dmsContext","string","preUploadMetaData","object","postUploadMetaData","array","filesSubmitted","classes","name","commonInfo","lossInfo","claimInfo","policyInfo","isClaimContext","DMS_CONTEXT_CLAIM","root","t","boxView","subTitle","map","value","id","info","generic","isValidArray","eachFileMetaData","ind","createdDate","documentVersion","createdByName","fileLastModifiedDate","documentUploaded","date","format","ui","text","DMS_CONTEXT_LOSS","DMS_CONTEXT_PROCESSING_INSTRUCTION","DMS_CONTEXT_POLICY","DMS_CONTEXT_CASE"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './DmsUploadMetaData.styles';\r\nimport { Accordion, FormGrid, Loader, Info } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\nDmsUploadMetaDataView.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  dmsContext: PropTypes.string.isRequired,\r\n  preUploadMetaData: PropTypes.object,\r\n  postUploadMetaData: PropTypes.array,\r\n  filesSubmitted: PropTypes.bool,\r\n};\r\n\r\nexport function DmsUploadMetaDataView({ isLoading, dmsContext, preUploadMetaData, postUploadMetaData, filesSubmitted }) {\r\n  const classes = makeStyles(styles, { name: 'DmsUploadMetaData' })();\r\n\r\n  const { commonInfo, lossInfo, claimInfo, policyInfo } = preUploadMetaData;\r\n  const isClaimContext = dmsContext === constants.DMS_CONTEXT_CLAIM;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Accordion isDataLoading={isLoading} title={<Typography> {utils.string.t('dms.upload.modalItems.viewData')}</Typography>}>\r\n        {!isLoading && (\r\n          <Box width=\"100%\">\r\n            <Box className={classes.boxView}>\r\n              <Typography className={classes.subTitle}>{utils.string.t('dms.upload.commonInfoSection.commonInfo')}</Typography>\r\n              <FormGrid container spacing={3}>\r\n\r\n                {commonInfo?.map(({ name, value, id }) => (\r\n                  <FormGrid key={id} item xs={12} sm={4} md={3}>\r\n                    <Info title={name} description={value} nestedClasses={{ root: classes.info }} />\r\n                  </FormGrid>\r\n                ))}\r\n\r\n                {filesSubmitted && utils.generic.isValidArray(postUploadMetaData, true) && (\r\n                  postUploadMetaData.map((eachFileMetaData, ind) => {\r\n                    const { createdDate, documentVersion, createdByName, fileLastModifiedDate, documentUploaded } = eachFileMetaData;\r\n                    return (\r\n                      <Fragment key={ind}>\r\n                        {documentUploaded && (\r\n                          <>\r\n                            {createdDate && (\r\n                              <FormGrid item xs={12} sm={4} md={3}>\r\n                                <Info\r\n                                  title={utils.string.t('dms.upload.commonUploadInfoSection.documentCreatedOn')}\r\n                                  description={`${utils.string.t('format.date', {\r\n                                    value: { date: createdDate, format: config.ui.format.date.text },\r\n                                  })}`}\r\n                                  nestedClasses={{ root: classes.info }}\r\n                                />\r\n                              </FormGrid>\r\n                            )}\r\n\r\n                            {documentVersion && (\r\n                              <FormGrid item xs={12} sm={4} md={3}>\r\n                                <Info\r\n                                  title={utils.string.t('dms.upload.commonUploadInfoSection.documentVersion')}\r\n                                  description={documentVersion}\r\n                                  nestedClasses={{ root: classes.info }}\r\n                                />\r\n                              </FormGrid>\r\n                            )}\r\n\r\n                            {createdByName && (\r\n                              <FormGrid item xs={12} sm={4} md={3}>\r\n                                <Info\r\n                                  title={utils.string.t('dms.upload.commonUploadInfoSection.documentUploadedBy')}\r\n                                  description={createdByName}\r\n                                  nestedClasses={{ root: classes.info }}\r\n                                />\r\n                              </FormGrid>\r\n                            )}\r\n                            {fileLastModifiedDate && (\r\n                              <FormGrid item xs={12} sm={4} md={3}>\r\n                                <Info\r\n                                  title={utils.string.t('dms.upload.commonUploadInfoSection.documentModifiedOn')}\r\n                                  description={`${utils.string.t('format.date', {\r\n                                    value: { date: fileLastModifiedDate, format: config.ui.format.date.text },\r\n                                  })}`}\r\n                                  nestedClasses={{ root: classes.info }}\r\n                                />\r\n                              </FormGrid>\r\n                            )}\r\n\r\n                          </>\r\n                        )}\r\n                      </Fragment>\r\n                    )\r\n                  })\r\n                )}\r\n              </FormGrid>\r\n            </Box>\r\n\r\n            {isClaimContext && (\r\n              <Box className={classes.boxView} mt={2}>\r\n                <Typography className={classes.subTitle}>{utils.string.t('dms.upload.claimInfoSection.claimDetails')}</Typography>\r\n                <FormGrid container spacing={3}>\r\n                  {claimInfo?.map(({ name, value, id }) => (\r\n                    <FormGrid key={id} item xs={12} sm={4} md={3}>\r\n                      <Info title={name} description={value} nestedClasses={{ root: classes.info }} />\r\n                    </FormGrid>\r\n                  ))}\r\n                </FormGrid>\r\n              </Box>\r\n            )}\r\n\r\n            {(isClaimContext || dmsContext === constants.DMS_CONTEXT_LOSS) && (\r\n              <Box className={classes.boxView} mt={2}>\r\n                <Typography className={classes.subTitle}>{utils.string.t('dms.upload.lossInfoSection.lossDetails')}</Typography>\r\n                <FormGrid container spacing={3}>\r\n                  {lossInfo?.map(({ name, value, id }) => (\r\n                    <FormGrid key={id} item xs={12} sm={4} md={3}>\r\n                      <Info title={name} description={value} nestedClasses={{ root: classes.info }} />\r\n                    </FormGrid>\r\n                  ))}\r\n                </FormGrid>\r\n              </Box>\r\n            )}\r\n\r\n            {(dmsContext === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION ||\r\n              dmsContext === constants.DMS_CONTEXT_POLICY ||\r\n              dmsContext === constants.DMS_CONTEXT_CASE) && (\r\n                <Box className={classes.boxView} mt={2}>\r\n                  <Typography className={classes.subTitle}>{utils.string.t('dms.upload.policyInfoSection.policyDetails')}</Typography>\r\n                  <FormGrid container spacing={3}>\r\n                    {policyInfo?.map(({ name, value, id }) => (\r\n                      <FormGrid key={id} item xs={12} sm={4} md={3}>\r\n                        <Info title={name} description={value} nestedClasses={{ root: classes.info }} />\r\n                      </FormGrid>\r\n                    ))}\r\n                  </FormGrid>\r\n                </Box>\r\n              )}\r\n          </Box>\r\n        )}\r\n        <Loader visible={isLoading} inline={isLoading} />\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}