{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useHistory } from 'react-router'; //app\n\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\nimport config from 'config';\nimport { LossDetail, LossAction, LossNotes, ClaimsUploadViewSearchDocs, ClaimsProcessingDmsWidget } from 'modules';\nimport * as utils from 'utils';\nimport { DrawerComponent } from 'components';\nimport styles from './LossDashboard.styles';\nimport { selectDmsWidgetExpanded } from 'stores';\nimport * as constants from 'consts';\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl, showModal, hideModal } from 'stores'; //mui\n\nimport { Box, Divider, Typography, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLossDashboardView.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  lossSelected: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  handleSelectTab: PropTypes.func,\n  handleCreateRFIModal: PropTypes.func\n};\nexport function LossDashboardView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      lossSelected = _ref.lossSelected,\n      breadcrumbs = _ref.breadcrumbs,\n      handleSelectTab = _ref.handleSelectTab;\n  var classes = makeStyles(styles, {\n    name: 'LossDashboard'\n  })();\n  var isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\n  var pathname = history.location.pathname;\n\n  var editLossHandler = function editLossHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n    var checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n      var _constants$STATUS_CLA;\n\n      return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA === void 0 ? void 0 : _constants$STATUS_CLA.toUpperCase());\n    })) : false;\n    dispatch(setClaimsStepperControl(0));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        isNewLoss: true,\n        redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n        loss: {\n          isNextDiabled: true,\n          isClaimSubmitted: checkClaimStatus\n        }\n      }\n    });\n  };\n\n  var addClaimHandler = function addClaimHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n\n    function addClaim() {\n      return _addClaim.apply(this, arguments);\n    }\n\n    function _addClaim() {\n      _addClaim = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var checkClaimStatus;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(setClaimsStepperControl(1));\n\n              case 2:\n                checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n                  var _constants$STATUS_CLA2;\n\n                  return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA2 = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA2 === void 0 ? void 0 : _constants$STATUS_CLA2.toUpperCase());\n                })) : false;\n                history.push({\n                  pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n                  state: {\n                    redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n                    loss: {\n                      isNextDiabled: false,\n                      isClaimSubmitted: checkClaimStatus\n                    }\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _addClaim.apply(this, arguments);\n    }\n\n    addClaim();\n  };\n\n  var handleCreateRFIModal = function handleCreateRFIModal(claim) {\n    var breadcrumbs = [{\n      name: 'lossRef',\n      label: utils.string.t('claims.loss.text', {\n        lossRef: claim === null || claim === void 0 ? void 0 : claim.lossRef\n      }),\n      link: pathname,\n      active: true\n    }];\n\n    var TitleWBreadCrumb = function TitleWBreadCrumb() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          links: breadcrumbs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            paddingLeft: '1.2rem'\n          },\n          children: utils.string.t('claims.processing.taskFunction.createRFI')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    };\n\n    dispatch(showModal({\n      component: 'CLAIMS_CREATE_RFI_STEPPER',\n      props: {\n        titleChildren: /*#__PURE__*/_jsxDEV(TitleWBreadCrumb, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }, _this),\n        hideCompOnBlur: false,\n        fullWidth: true,\n        maxWidth: 'lg',\n        disableAutoFocus: true,\n        componentProps: {\n          claim: claim,\n          type: constants.RFI_ON_LOSS,\n          cancelHandler: function cancelHandler() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n  };\n\n  var rowActions = [{\n    id: 'editLoss',\n    label: utils.string.t('claims.loss.popOverFunctionMenusList.editLoss'),\n    callback: function callback() {\n      return editLossHandler(lossSelected);\n    }\n  }, {\n    id: 'addClaim',\n    label: utils.string.t('claims.loss.popOverFunctionMenusList.addClaim'),\n    callback: function callback() {\n      return addClaimHandler(lossSelected);\n    }\n  }, {\n    id: 'createRFI',\n    label: utils.string.t('claims.loss.popOverFunctionMenusList.createRFI'),\n    callback: function callback() {\n      return handleCreateRFIModal(lossSelected);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(classes.content, _defineProperty({}, classes.contentShift, isDmsWidgetExpanded)),\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        testid: \"LossDashboard\",\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          main: true,\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            title: ' ',\n            testid: \"claim-ref-header\",\n            children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n              variant: \"outlined\",\n              id: \"loss-functions\",\n              size: \"small\",\n              color: \"primary\",\n              text: utils.string.t('claims.loss.popOverFunction'),\n              isButton: true,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              items: rowActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            tabs: tabs,\n            value: selectedTab,\n            onChange: function onChange(tabName) {\n              return handleSelectTab(tabName);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), selectedTab === 'details' && /*#__PURE__*/_jsxDEV(LossDetail, {\n            lossObj: lossSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 43\n          }, this), selectedTab === 'actions' && /*#__PURE__*/_jsxDEV(LossAction, {\n            lossData: lossSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 43\n          }, this), selectedTab === 'documents' && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n              refData: lossSelected,\n              refIdName: constants.DMS_CONTEXT_LOSS_ID,\n              dmsContext: constants.DMS_CONTEXT_LOSS,\n              documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), selectedTab === 'notes' && /*#__PURE__*/_jsxDEV(LossNotes, {\n            lossObj: lossSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawerComponent, {\n      isDrawerOpen: true,\n      isFromDashboard: true,\n      children: /*#__PURE__*/_jsxDEV(ClaimsProcessingDmsWidget, {\n        isLossDashboard: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LossDashboardView, \"XO+1060uXO+YfavKXSLE9CcqLBE=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = LossDashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.view.js"],"names":["React","useDispatch","useSelector","PropTypes","classnames","useHistory","Breadcrumb","Layout","Tabs","PopoverMenu","SectionHeader","config","LossDetail","LossAction","LossNotes","ClaimsUploadViewSearchDocs","ClaimsProcessingDmsWidget","utils","DrawerComponent","styles","selectDmsWidgetExpanded","constants","selectClaimAssociateWithLoss","setClaimsStepperControl","showModal","hideModal","Box","Divider","Typography","makeStyles","LossDashboardView","propTypes","tabs","array","isRequired","selectedTab","string","lossSelected","object","breadcrumbs","arrayOf","shape","name","label","link","handleSelectTab","func","handleCreateRFIModal","classes","isDmsWidgetExpanded","dispatch","history","claimsAssociateWithLoss","pathname","location","editLossHandler","lossRef","checkClaimStatus","generic","isValidArray","Boolean","find","claim","claimStatus","STATUS_CLAIMS_DRAFT","toUpperCase","push","routes","claimsFNOL","newLoss","state","isNewLoss","redirectUrl","loss","isNextDiabled","isClaimSubmitted","addClaimHandler","addClaim","t","active","TitleWBreadCrumb","paddingLeft","component","props","titleChildren","hideCompOnBlur","fullWidth","maxWidth","disableAutoFocus","componentProps","type","RFI_ON_LOSS","cancelHandler","rowActions","id","callback","content","contentShift","vertical","horizontal","tabName","DMS_CONTEXT_LOSS_ID","DMS_CONTEXT_LOSS","DMS_DOCUMENT_TYPE_SECTION_KEYS"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { useHistory } from 'react-router';\r\n\r\n//app\r\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\r\nimport config from 'config';\r\nimport { LossDetail, LossAction, LossNotes, ClaimsUploadViewSearchDocs, ClaimsProcessingDmsWidget } from 'modules';\r\nimport * as utils from 'utils';\r\nimport { DrawerComponent } from 'components';\r\nimport styles from './LossDashboard.styles';\r\nimport { selectDmsWidgetExpanded } from 'stores';\r\nimport * as constants from 'consts';\r\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl, showModal, hideModal } from 'stores';\r\n\r\n//mui\r\nimport { Box, Divider, Typography, makeStyles } from '@material-ui/core';\r\n\r\nLossDashboardView.propTypes = {\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  lossSelected: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  handleSelectTab: PropTypes.func,\r\n  handleCreateRFIModal: PropTypes.func,\r\n};\r\n\r\nexport function LossDashboardView({ tabs, selectedTab, lossSelected, breadcrumbs, handleSelectTab }) {\r\n  const classes = makeStyles(styles, { name: 'LossDashboard' })();\r\n  const isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\r\n  const { pathname } = history.location;\r\n\r\n  const editLossHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true)\r\n      ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase()))\r\n      : false;\r\n    dispatch(setClaimsStepperControl(0));\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        isNewLoss: true,\r\n        redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n        loss: { isNextDiabled: true, isClaimSubmitted: checkClaimStatus },\r\n      },\r\n    });\r\n  };\r\n\r\n  const addClaimHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    async function addClaim() {\r\n      await dispatch(setClaimsStepperControl(1));\r\n      const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true)\r\n        ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase()))\r\n        : false;\r\n      history.push({\r\n        pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n        state: {\r\n          redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n          loss: { isNextDiabled: false, isClaimSubmitted: checkClaimStatus },\r\n        },\r\n      });\r\n    }\r\n    addClaim();\r\n  };\r\n\r\n  const handleCreateRFIModal = (claim) => {\r\n    const breadcrumbs = [\r\n      {\r\n        name: 'lossRef',\r\n        label: utils.string.t('claims.loss.text', { lossRef: claim?.lossRef }),\r\n        link: pathname,\r\n        active: true,\r\n      },\r\n    ];\r\n\r\n    const TitleWBreadCrumb = () => {\r\n      return (\r\n        <>\r\n          <Breadcrumb links={breadcrumbs} />\r\n          <Typography variant=\"h2\" style={{ paddingLeft: '1.2rem' }}>\r\n            {utils.string.t('claims.processing.taskFunction.createRFI')}\r\n          </Typography>\r\n        </>\r\n      )\r\n    }\r\n    dispatch(\r\n      showModal({\r\n        component: 'CLAIMS_CREATE_RFI_STEPPER',\r\n        props: {\r\n          titleChildren: <TitleWBreadCrumb />,\r\n          hideCompOnBlur: false,\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            claim,\r\n            type: constants.RFI_ON_LOSS,\r\n            cancelHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  const rowActions = [\r\n    {\r\n      id: 'editLoss',\r\n      label: utils.string.t('claims.loss.popOverFunctionMenusList.editLoss'),\r\n      callback: () => editLossHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'addClaim',\r\n      label: utils.string.t('claims.loss.popOverFunctionMenusList.addClaim'),\r\n      callback: () => addClaimHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'createRFI',\r\n      label: utils.string.t('claims.loss.popOverFunctionMenusList.createRFI'),\r\n      callback: () => handleCreateRFIModal(lossSelected),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n      <div\r\n        className={classnames(classes.content, {\r\n          [classes.contentShift]: isDmsWidgetExpanded,\r\n        })}\r\n      >\r\n        <Layout testid=\"LossDashboard\">\r\n          <Layout main>\r\n            <SectionHeader title={' '} testid=\"claim-ref-header\">\r\n              <PopoverMenu\r\n                variant=\"outlined\"\r\n                id=\"loss-functions\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                text={utils.string.t('claims.loss.popOverFunction')}\r\n                isButton\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                items={rowActions}\r\n              />\r\n            </SectionHeader>\r\n            <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n            {selectedTab === 'details' && <LossDetail lossObj={lossSelected} />}\r\n            {selectedTab === 'actions' && <LossAction lossData={lossSelected} />}\r\n            {selectedTab === 'documents' && (\r\n              <Box mt={2}>\r\n                <ClaimsUploadViewSearchDocs\r\n                  refData={lossSelected}\r\n                  refIdName={constants.DMS_CONTEXT_LOSS_ID}\r\n                  dmsContext={constants.DMS_CONTEXT_LOSS}\r\n                  documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n                />\r\n              </Box>\r\n            )}\r\n            {selectedTab === 'notes' && <LossNotes lossObj={lossSelected} />}\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n      <DrawerComponent isDrawerOpen isFromDashboard>\r\n        <ClaimsProcessingDmsWidget isLossDashboard />\r\n      </DrawerComponent>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}