{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nimport pick from 'lodash/pick';\nimport xorWith from 'lodash/xorWith';\nexport var editDepartmentMarket = function editDepartmentMarket(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/department.actions.putMarket',\n      message: 'Data missing for PUT request'\n    };\n    var marketId = get(formData, 'marketId');\n    var departmentMarketId = get(formData, 'departmentMarketId');\n    var departmentId = get(formData, 'departmentId');\n    dispatch(putDepartmentMarketRequest(formData));\n    dispatch(addLoader('editDepartmentMarket'));\n\n    if (!formData || !departmentId || !marketId || !departmentMarketId) {\n      dispatch(putDepartmentMarketFailure(defaultError));\n      dispatch(enqueueNotification('notification.editDepartmentMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editDepartmentMarket'));\n      return;\n    }\n\n    var previousUnderwriters = get(formData, 'previousUnderwriters', []);\n    var editedUnderwriters = get(formData, 'underwriters', []);\n    var allUnderwriters = xorWith(previousUnderwriters, editedUnderwriters, function (a, b) {\n      return a.id === b.mktId;\n    });\n    var underwriters = allUnderwriters.filter(function (uw) {\n      var hasData = uw.firstName || uw.lastName || uw.emailId;\n      return hasData || uw.id || uw.mktId;\n    }).map(function (uw) {\n      var hasData = uw.firstName || uw.lastName || uw.emailId;\n      var id = uw.id || uw.mktId; // for DELETE, we check that all data has been removed OR it's origin with an ID\n\n      var isDelete = Boolean(!uw.isOrigin && !hasData || uw.isOrigin && id); // for CREATE, we check we don't have the origin prop, that we have data and an ID\n\n      var isUpdate = Boolean(!uw.isOrigin && hasData && id); // for CREATE, if there's no id (uw.id OR uw.mktId) it's a new underwriter\n\n      var isCreate = Boolean(!id);\n      return _objectSpread(_objectSpread(_objectSpread({}, id && {\n        id: id\n      }), {}, {\n        marketId: marketId,\n        departmentId: departmentId\n      }, pick(uw, ['firstName', 'lastName', 'emailId'])), {}, {\n        operation: isCreate ? 'CREATE' : isUpdate ? 'UPDATE' : isDelete ? 'DELETE' : null\n      });\n    }).filter(function (uw) {\n      return uw.operation;\n    });\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/departmentMarket/\".concat(departmentMarketId),\n      data: {\n        departmentId: get(formData, 'departmentId'),\n        marketId: marketId,\n        capacityTypeId: get(formData, 'capacityTypeId'),\n        underwriters: underwriters\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(putDepartmentMarketSuccess(data));\n      dispatch(enqueueNotification('notification.editDepartmentMarket.success', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API put error (department.editDepartmentMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(putDepartmentMarketFailure(err));\n      dispatch(enqueueNotification('notification.editDepartmentMarket.fail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('editDepartmentMarket'));\n      return;\n    });\n  };\n};\nexport var putDepartmentMarketRequest = function putDepartmentMarketRequest(formData) {\n  return {\n    type: 'DEPARTMENT_MARKET_PUT_REQUEST',\n    payload: formData\n  };\n};\nexport var putDepartmentMarketSuccess = function putDepartmentMarketSuccess(responseData) {\n  return {\n    type: 'DEPARTMENT_MARKET_PUT_SUCCESS',\n    payload: responseData\n  };\n};\nexport var putDepartmentMarketFailure = function putDepartmentMarketFailure(error) {\n  return {\n    type: 'DEPARTMENT_MARKET_PUT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/department/department.actions.putMarket.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","get","pick","xorWith","editDepartmentMarket","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","marketId","departmentMarketId","departmentId","putDepartmentMarketRequest","putDepartmentMarketFailure","previousUnderwriters","editedUnderwriters","allUnderwriters","a","b","id","mktId","underwriters","filter","uw","hasData","firstName","lastName","emailId","map","isDelete","Boolean","isOrigin","isUpdate","isCreate","operation","api","put","token","accessToken","edge","path","data","capacityTypeId","then","response","handleResponse","json","handleData","putDepartmentMarketSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\nimport pick from 'lodash/pick';\r\nimport xorWith from 'lodash/xorWith';\r\n\r\nexport const editDepartmentMarket = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/department.actions.putMarket',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  const marketId = get(formData, 'marketId');\r\n  const departmentMarketId = get(formData, 'departmentMarketId');\r\n  const departmentId = get(formData, 'departmentId');\r\n\r\n  dispatch(putDepartmentMarketRequest(formData));\r\n  dispatch(addLoader('editDepartmentMarket'));\r\n\r\n  if (!formData || !departmentId || !marketId || !departmentMarketId) {\r\n    dispatch(putDepartmentMarketFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.editDepartmentMarket.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('editDepartmentMarket'));\r\n    return;\r\n  }\r\n\r\n  const previousUnderwriters = get(formData, 'previousUnderwriters', []);\r\n  const editedUnderwriters = get(formData, 'underwriters', []);\r\n\r\n  const allUnderwriters = xorWith(previousUnderwriters, editedUnderwriters, (a, b) => {\r\n    return a.id === b.mktId;\r\n  });\r\n\r\n  const underwriters = allUnderwriters\r\n    .filter((uw) => {\r\n      const hasData = uw.firstName || uw.lastName || uw.emailId;\r\n      return hasData || uw.id || uw.mktId;\r\n    })\r\n    .map((uw) => {\r\n      const hasData = uw.firstName || uw.lastName || uw.emailId;\r\n      const id = uw.id || uw.mktId;\r\n\r\n      // for DELETE, we check that all data has been removed OR it's origin with an ID\r\n      const isDelete = Boolean((!uw.isOrigin && !hasData) || (uw.isOrigin && id));\r\n\r\n      // for CREATE, we check we don't have the origin prop, that we have data and an ID\r\n      const isUpdate = Boolean(!uw.isOrigin && hasData && id);\r\n\r\n      // for CREATE, if there's no id (uw.id OR uw.mktId) it's a new underwriter\r\n      const isCreate = Boolean(!id);\r\n\r\n      return {\r\n        ...(id && { id }),\r\n        marketId,\r\n        departmentId,\r\n        ...pick(uw, ['firstName', 'lastName', 'emailId']),\r\n        operation: isCreate ? 'CREATE' : isUpdate ? 'UPDATE' : isDelete ? 'DELETE' : null,\r\n      };\r\n    })\r\n    .filter((uw) => {\r\n      return uw.operation;\r\n    });\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/departmentMarket/${departmentMarketId}`,\r\n      data: {\r\n        departmentId: get(formData, 'departmentId'),\r\n        marketId: marketId,\r\n        capacityTypeId: get(formData, 'capacityTypeId'),\r\n        underwriters,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(putDepartmentMarketSuccess(data));\r\n      dispatch(enqueueNotification('notification.editDepartmentMarket.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API put error (department.editDepartmentMarket)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(putDepartmentMarketFailure(err));\r\n      dispatch(enqueueNotification('notification.editDepartmentMarket.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editDepartmentMarket'));\r\n      return;\r\n    });\r\n};\r\n\r\nexport const putDepartmentMarketRequest = (formData) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_PUT_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const putDepartmentMarketSuccess = (responseData) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_PUT_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const putDepartmentMarketFailure = (error) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_PUT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}