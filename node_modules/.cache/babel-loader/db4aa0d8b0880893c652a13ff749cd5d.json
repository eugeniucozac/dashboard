{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport config from 'config';\nimport * as constants from 'consts';\nvar initialState = {\n  gridData: {\n    items: [],\n    itemsTotal: 0,\n    page: 1,\n    pageSize: config.ui.pagination.default,\n    pageTotal: 0,\n    query: '',\n    filters: {},\n    sort: {\n      by: 'instructionId',\n      type: 'lexical',\n      direction: 'desc'\n    }\n  },\n  departmentList: [],\n  advancedSearchResults: [],\n  addedRiskRefDetailsFromAdvSearch: [],\n  producingBrokers: [],\n  accountExecutives: [],\n  instructions: [],\n  documents: {\n    riskReferences: [],\n    premiumTaxDocument: null,\n    signedLinesDocument: null\n  },\n  endorsementNonPremium: [],\n  bordereauPolicyTypes: [],\n  facilityTypes: [],\n  statuses: [],\n  retainedBrokerageAmountForPdf: {\n    retBrokerageAmt: '',\n    convertedBrokerageAmt: {}\n  },\n  totalAmountForPdf: '',\n  isResetAllSelected: false,\n  selectedRiskRef: {}\n};\n\nvar processingInstructionsReducers = function processingInstructionsReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_SUCCESS':\n      var processingInstructionsGridPagination = action.payload.pagination || {};\n      return _objectSpread(_objectSpread({}, state), {}, {\n        gridData: _objectSpread(_objectSpread({}, state.gridData), {}, {\n          items: action.payload.items || [],\n          itemsTotal: get(processingInstructionsGridPagination, 'totalElements', 0),\n          page: get(processingInstructionsGridPagination, 'page', 1),\n          pageSize: get(processingInstructionsGridPagination, 'size', initialState.gridData.pageSize),\n          pageTotal: get(processingInstructionsGridPagination, 'totalPages', 0),\n          query: get(processingInstructionsGridPagination, 'searchBy', ''),\n          sort: _objectSpread(_objectSpread(_objectSpread({}, state.gridData.sort), processingInstructionsGridPagination.direction && {\n            direction: processingInstructionsGridPagination.direction.toLowerCase()\n          }), processingInstructionsGridPagination.orderBy && {\n            by: processingInstructionsGridPagination.orderBy\n          }),\n          filters: action.payload.filters\n        }),\n        loading: false\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_RESET_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        gridData: _objectSpread({}, initialState.gridData)\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_STATUSES_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        statuses: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_DEPARTMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        departmentList: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_UPDATE_ADVANCED_SEARCH_SELECTED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedRiskRefDetailsFromAdvSearch: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_ADVANCED_SEARCH_RESULTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        advancedSearchResults: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_USERS_IN_ROLES_SUCCESS':\n      var usersOptions = action.payload || [];\n      return _objectSpread(_objectSpread({}, state), {}, {\n        producingBrokers: usersOptions.filter(function (user) {\n          return user.userRole === constants.PRODUCING_BROKER;\n        }).map(function (type) {\n          return {\n            id: type.userId,\n            value: type.fullName\n          };\n        }),\n        accountExecutives: usersOptions.filter(function (user) {\n          return user.userRole === constants.ACCOUNT_EXECUTIVE;\n        }).map(function (type) {\n          return {\n            id: type.userId,\n            value: type.fullName\n          };\n        })\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_STORE_BY_ID':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        instructions: _objectSpread(_objectSpread({}, state.instructions), {}, _defineProperty({}, action.id, action.payload))\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        instructions: {}\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_USERS_FOR_ROLE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        usersInRoles: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_STORE_NON_PREMIUM_VALUE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nonPremiumValue: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        endorsementNonPremium: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_BORDEREAU_POLICY_TYPES_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bordereauPolicyTypes: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_DOCUMENTS_STORE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        documents: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_GET_FACILITY_TYPES_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        facilityTypes: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_STORE_RETAINED_BROKERAGE_AMOUNT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        retainedBrokerageAmountForPdf: {\n          retBrokerageAmt: action.payload.retBrokerageAmt,\n          convertedBrokerageAmt: action.payload.convertedBrokerageAmt\n        }\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_STORE_TOTAL_AMOUNT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        totalAmountForPdf: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_RESET_ALL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isResetAllSelected: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_SELECTED_RISKREF':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedRiskRef: action.payload\n      });\n\n    case 'PROCESSING_INSTRUCTIONS_RESET_SELECTED_RISKREF':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedRiskRef: initialState.selectedRiskRef\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default processingInstructionsReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.reducers.js"],"names":["get","config","constants","initialState","gridData","items","itemsTotal","page","pageSize","ui","pagination","default","pageTotal","query","filters","sort","by","type","direction","departmentList","advancedSearchResults","addedRiskRefDetailsFromAdvSearch","producingBrokers","accountExecutives","instructions","documents","riskReferences","premiumTaxDocument","signedLinesDocument","endorsementNonPremium","bordereauPolicyTypes","facilityTypes","statuses","retainedBrokerageAmountForPdf","retBrokerageAmt","convertedBrokerageAmt","totalAmountForPdf","isResetAllSelected","selectedRiskRef","processingInstructionsReducers","state","action","loading","processingInstructionsGridPagination","payload","toLowerCase","orderBy","usersOptions","filter","user","userRole","PRODUCING_BROKER","map","id","userId","value","fullName","ACCOUNT_EXECUTIVE","usersInRoles","nonPremiumValue"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nconst initialState = {\r\n  gridData: {\r\n    items: [],\r\n    itemsTotal: 0,\r\n    page: 1,\r\n    pageSize: config.ui.pagination.default,\r\n    pageTotal: 0,\r\n    query: '',\r\n    filters: {},\r\n    sort: {\r\n      by: 'instructionId',\r\n      type: 'lexical',\r\n      direction: 'desc',\r\n    },\r\n  },\r\n  departmentList: [],\r\n  advancedSearchResults: [],\r\n  addedRiskRefDetailsFromAdvSearch: [],\r\n  producingBrokers: [],\r\n  accountExecutives: [],\r\n  instructions: [],\r\n  documents: {\r\n    riskReferences: [],\r\n    premiumTaxDocument: null,\r\n    signedLinesDocument: null,\r\n  },\r\n  endorsementNonPremium: [],\r\n  bordereauPolicyTypes: [],\r\n  facilityTypes: [],\r\n  statuses: [],\r\n  retainedBrokerageAmountForPdf: {\r\n    retBrokerageAmt: '',\r\n    convertedBrokerageAmt: {},\r\n  },\r\n  totalAmountForPdf: '',\r\n  isResetAllSelected: false,\r\n  selectedRiskRef: {},\r\n};\r\n\r\nconst processingInstructionsReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_SUCCESS':\r\n      const processingInstructionsGridPagination = action.payload.pagination || {};\r\n      return {\r\n        ...state,\r\n        gridData: {\r\n          ...state.gridData,\r\n          items: action.payload.items || [],\r\n          itemsTotal: get(processingInstructionsGridPagination, 'totalElements', 0),\r\n          page: get(processingInstructionsGridPagination, 'page', 1),\r\n          pageSize: get(processingInstructionsGridPagination, 'size', initialState.gridData.pageSize),\r\n          pageTotal: get(processingInstructionsGridPagination, 'totalPages', 0),\r\n          query: get(processingInstructionsGridPagination, 'searchBy', ''),\r\n          sort: {\r\n            ...state.gridData.sort,\r\n            ...(processingInstructionsGridPagination.direction && {\r\n              direction: processingInstructionsGridPagination.direction.toLowerCase(),\r\n            }),\r\n            ...(processingInstructionsGridPagination.orderBy && { by: processingInstructionsGridPagination.orderBy }),\r\n          },\r\n          filters: action.payload.filters,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GRID_DATA_RESET_SEARCH':\r\n      return {\r\n        ...state,\r\n        gridData: {\r\n          ...initialState.gridData,\r\n        },\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_STATUSES_SUCCESS':\r\n      return {\r\n        ...state,\r\n        statuses: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_DEPARTMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        departmentList: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_UPDATE_ADVANCED_SEARCH_SELECTED':\r\n      return {\r\n        ...state,\r\n        addedRiskRefDetailsFromAdvSearch: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_ADVANCED_SEARCH_RESULTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        advancedSearchResults: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_USERS_IN_ROLES_SUCCESS':\r\n      const usersOptions = action.payload || [];\r\n\r\n      return {\r\n        ...state,\r\n        producingBrokers: usersOptions\r\n          .filter((user) => user.userRole === constants.PRODUCING_BROKER)\r\n          .map((type) => {\r\n            return {\r\n              id: type.userId,\r\n              value: type.fullName,\r\n            };\r\n          }),\r\n        accountExecutives: usersOptions\r\n          .filter((user) => user.userRole === constants.ACCOUNT_EXECUTIVE)\r\n          .map((type) => {\r\n            return {\r\n              id: type.userId,\r\n              value: type.fullName,\r\n            };\r\n          }),\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_STORE_BY_ID':\r\n      return {\r\n        ...state,\r\n        instructions: {\r\n          ...state.instructions,\r\n          [action.id]: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_RESET':\r\n      return {\r\n        ...state,\r\n        instructions: {},\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_USERS_FOR_ROLE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        usersInRoles: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_STORE_NON_PREMIUM_VALUE':\r\n      return {\r\n        ...state,\r\n        nonPremiumValue: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_SUCCESS':\r\n      return {\r\n        ...state,\r\n        endorsementNonPremium: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_BORDEREAU_POLICY_TYPES_SUCCESS':\r\n      return {\r\n        ...state,\r\n        bordereauPolicyTypes: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_DOCUMENTS_STORE':\r\n      return {\r\n        ...state,\r\n        documents: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_GET_FACILITY_TYPES_SUCCESS':\r\n      return {\r\n        ...state,\r\n        facilityTypes: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_STORE_RETAINED_BROKERAGE_AMOUNT':\r\n      return {\r\n        ...state,\r\n        retainedBrokerageAmountForPdf: {\r\n          retBrokerageAmt: action.payload.retBrokerageAmt,\r\n          convertedBrokerageAmt: action.payload.convertedBrokerageAmt,\r\n        },\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_STORE_TOTAL_AMOUNT':\r\n      return {\r\n        ...state,\r\n        totalAmountForPdf: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_RESET_ALL':\r\n      return {\r\n        ...state,\r\n        isResetAllSelected: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_SELECTED_RISKREF':\r\n      return {\r\n        ...state,\r\n        selectedRiskRef: action.payload,\r\n      };\r\n\r\n    case 'PROCESSING_INSTRUCTIONS_RESET_SELECTED_RISKREF':\r\n      return {\r\n        ...state,\r\n        selectedRiskRef: initialState.selectedRiskRef,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default processingInstructionsReducers;\r\n"]},"metadata":{},"sourceType":"module"}