{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getClaimsAssociateWithLoss = function getClaimsAssociateWithLoss(lossDetailID) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimsAssociateWithLoss'\n    };\n    dispatch(getClaimsAssociateWithLossRequest());\n    dispatch(addLoader('getClaimsAssociateWithLoss'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/loss/\".concat(lossDetailID, \"/claim-list\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getClaimsAssociateWithLossSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getClaimsAssociateWithLossFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getClaimsAssociateWithLoss'));\n    });\n  };\n};\nexport var getClaimsAssociateWithLossRequest = function getClaimsAssociateWithLossRequest(params) {\n  return {\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getClaimsAssociateWithLossSuccess = function getClaimsAssociateWithLossSuccess(data) {\n  return {\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getClaimsAssociateWithLossFailure = function getClaimsAssociateWithLossFailure(error) {\n  return {\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimsAssociateWithLoss.js"],"names":["authLogout","addLoader","removeLoader","utils","getClaimsAssociateWithLoss","lossDetailID","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getClaimsAssociateWithLossRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","data","getClaimsAssociateWithLossSuccess","catch","err","getClaimsAssociateWithLossFailure","handleUnauthorized","finally","params","type","payload","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,YAAD;AAAA,SAAkB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClF;AADkF,oBAEvBA,QAAQ,EAFe;AAAA,QAElEC,IAFkE,aAE1EC,IAF0E,CAElED,IAFkE;AAAA,QAExCE,QAFwC,aAE1DC,MAF0D,CAEhDC,IAFgD,CAExCF,QAFwC;;AAIlF,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,iCAAiC,EAAlC,CAAR;AACAT,IAAAA,QAAQ,CAACL,SAAS,CAAC,4BAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACa,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,iCAA0BhB,YAA1B;AAHD,KADA,EAMJiB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcpB,KAAK,CAACa,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,iCAAiC,CAACD,IAAI,CAACA,IAAN,CAAlC,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAVI,EAWJE,KAXI,CAWE,UAACC,GAAD,EAAS;AACdtB,MAAAA,QAAQ,CAACuB,iCAAiC,CAACD,GAAD,EAAMf,YAAN,CAAlC,CAAR;AACAV,MAAAA,KAAK,CAACa,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CN,UAA5C;AACA,aAAO4B,GAAP;AACD,KAfI,EAgBJG,OAhBI,CAgBI,YAAM;AACbzB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,4BAAD,CAAb,CAAR;AACD,KAlBI,CAAP;AAmBD,GA9ByC;AAAA,CAAnC;AAgCP,OAAO,IAAMa,iCAAiC,GAAG,SAApCA,iCAAoC,CAACiB,MAAD,EAAY;AAC3D,SAAO;AACLC,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMN,iCAAiC,GAAG,SAApCA,iCAAoC,CAACD,IAAD,EAAU;AACzD,SAAO;AACLQ,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,iCAAiC,GAAG,SAApCA,iCAAoC,CAACM,KAAD,EAAW;AAC1D,SAAO;AACLF,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getClaimsAssociateWithLoss = (lossDetailID) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getClaimsAssociateWithLoss',\r\n  };\r\n\r\n  dispatch(getClaimsAssociateWithLossRequest());\r\n  dispatch(addLoader('getClaimsAssociateWithLoss'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/loss/${lossDetailID}/claim-list`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getClaimsAssociateWithLossSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getClaimsAssociateWithLossFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getClaimsAssociateWithLoss'));\r\n    });\r\n};\r\n\r\nexport const getClaimsAssociateWithLossRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getClaimsAssociateWithLossSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getClaimsAssociateWithLossFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_ASSOCIATE_WITH_LOSS_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}