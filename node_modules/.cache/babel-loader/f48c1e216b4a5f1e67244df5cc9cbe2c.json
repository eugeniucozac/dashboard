{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { get } from 'lodash';\nimport types from './types';\nimport * as utils from 'utils';\nvar initialState = {\n  view: {\n    files: [],\n    versionHistory: {},\n    fileMetaData: {},\n    isDmsFileViewGridDataLoading: false,\n    isDmsWidgetDocsLoading: false\n  },\n  search: {\n    files: [],\n    isDmsSearchDataLoading: false\n  },\n  upload: {\n    metaData: {\n      requestParams: {\n        referenceId: '',\n        sectionRef: ''\n      },\n      data: {},\n      isLoading: false\n    },\n    documentsUploaded: {}\n  },\n  contextSubType: {\n    type: '',\n    caseIncidentID: '',\n    caseIncidentNotesID: '',\n    refId: ''\n  },\n  dmsWidgetExpanded: false,\n  docViewer: {\n    isOpen: false\n  },\n  advanceSearchValues: {},\n  claimDocsMetaData: {},\n  widgetDocDetails: {},\n  clientSideUploadFiles: {\n    fileDetails: {},\n    documentList: [],\n    documentNameList: []\n  },\n  multipleContextDocs: {\n    files: [],\n    versionHistory: {},\n    fileMetaData: {},\n    isLoading: false\n  }\n};\n\nvar dmsReducers = function dmsReducers() {\n  var _state$search, _state$search2, _action$payload, _action$payload$data, _action$payload2, _action$payload4, _action$payload5, _action$payload6, _action$payload7, _action$payload8;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        documentTypes: action.payload\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          isDmsSearchDataLoading: true\n        })\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: action.payload,\n          itemsTotal: get(action.payload, 'totalElements', 0),\n          query: get(action.payload, 'searchBy') || [],\n          filters: (state === null || state === void 0 ? void 0 : (_state$search = state.search) === null || _state$search === void 0 ? void 0 : _state$search.filters) || get(action.payload, 'data.filterValue'),\n          isDmsSearchDataLoading: false\n        })\n      });\n\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: (state === null || state === void 0 ? void 0 : (_state$search2 = state.search) === null || _state$search2 === void 0 ? void 0 : _state$search2.files) || action.payload,\n          query: get(action.payload, 'searchBy') || [],\n          filters: Object.keys((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$data = _action$payload.data) === null || _action$payload$data === void 0 ? void 0 : _action$payload$data.filterValue).reduce(function (options, field) {\n            options[field] = action.payload.data.filterValue[field].sort(function (a, b) {\n              return utils.string.capitalise(a.name) > utils.string.capitalise(b.name) ? 1 : -1;\n            });\n            return options;\n          }, {})\n        })\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          isDmsSearchDataLoading: false\n        })\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: initialState.search\n      });\n\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: initialState.upload\n      });\n\n    case 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          isDmsFileViewGridDataLoading: true\n        })\n      });\n\n    case 'DMS_WIDGET_DOCUMENT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        widgetDocDetails: _objectSpread(_objectSpread({}, state.widgetDocDetails), {}, {\n          isDmsWidgetDocsLoading: true\n        })\n      });\n\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          files: action.payload,\n          isDmsFileViewGridDataLoading: false\n        })\n      });\n\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multipleContextDocs: _objectSpread(_objectSpread({}, state.multipleContextDocs), {}, {\n          files: action.payload,\n          isLoading: false\n        })\n      });\n\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multipleContextDocs: _objectSpread(_objectSpread({}, initialState.multipleContextDocs), {}, {\n          isLoading: true\n        })\n      });\n\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multipleContextDocs: _objectSpread(_objectSpread({}, initialState.multipleContextDocs), {}, {\n          isLoading: false\n        })\n      });\n\n    case 'DMS_WIDGET_DOCUMENTS_SUCCESS':\n      var docs = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.reduce(function (dmsDocs, doc) {\n        var docRefId = doc === null || doc === void 0 ? void 0 : doc.referenceId;\n        var docDetail = (dmsDocs === null || dmsDocs === void 0 ? void 0 : dmsDocs[docRefId]) ? [].concat(_toConsumableArray(dmsDocs === null || dmsDocs === void 0 ? void 0 : dmsDocs[docRefId]), [doc]) : [doc];\n        dmsDocs[docRefId] = docDetail;\n        return dmsDocs;\n      }, {});\n      return _objectSpread(_objectSpread({}, state), {}, {\n        widgetDocDetails: _objectSpread(_objectSpread({}, state.widgetDocDetails), {}, {\n          isDmsWidgetDocsLoading: false\n        }, docs)\n      });\n\n    case 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          isDmsFileViewGridDataLoading: false\n        })\n      });\n\n    case 'DMS_WIDGET_DOCUMENTS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        widgetDocDetails: _objectSpread(_objectSpread({}, state.widgetDocDetails), {}, {\n          isDmsWidgetDocsLoading: false\n        })\n      });\n\n    case 'DMS_VIEW_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread({}, initialState.view)\n      });\n\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: action.payload\n        })\n      });\n\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: initialState.view.versionHistory\n        })\n      });\n\n    case 'GET_EDIT_DMS_META_DATA_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          fileMetaData: action.payload\n        })\n      });\n\n    case 'DMS_EDIT_META_DATA_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          fileMetaData: initialState.view.fileMetaData\n        })\n      });\n\n    case 'DMS_METADATA_GET_REQUEST':\n      var _action$payload3 = action.payload,\n          referenceId = _action$payload3.referenceId,\n          sectionRef = _action$payload3.sectionRef;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          metaData: _objectSpread(_objectSpread({}, state.upload.metaData), {}, {\n            requestParams: {\n              referenceId: referenceId,\n              sectionRef: sectionRef\n            },\n            data: initialState.upload.metaData.data,\n            isLoading: true\n          })\n        }),\n        claimDocsMetaData: {\n          data: initialState.claimDocsMetaData\n        }\n      });\n\n    case 'DMS_METADATA_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          metaData: _objectSpread(_objectSpread({}, state.upload.metaData), {}, {\n            data: action.payload,\n            isLoading: false\n          })\n        }),\n        claimDocsMetaData: _objectSpread(_objectSpread({}, state.claimDocsMetaData), {}, {\n          data: ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.claimRef) ? action.payload : {}\n        })\n      });\n\n    case 'DMS_METADATA_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          metaData: _objectSpread({}, initialState.upload.metaData)\n        }),\n        claimDocsMetaData: _objectSpread(_objectSpread({}, state.claimDocsMetaData), {}, {\n          data: initialState.claimDocsMetaData\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentsUploaded: initialState.upload.documentsUploaded\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentsUploaded: action.payload\n        })\n      });\n\n    case 'DMS_POST_DOCUMENTS_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentsUploaded: initialState.upload.documentsUploaded\n        })\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: _objectSpread(_objectSpread({}, state.contextSubType), action.payload)\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: initialState.contextSubType\n      });\n\n    case 'DMS_WIDGET_EXPANDED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dmsWidgetExpanded: action.payload\n      });\n\n    case 'DMS_DOC_VIEWER_SET_STATE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        docViewer: {\n          isOpen: action.payload\n        }\n      });\n\n    case 'DMS_ADVANCE_SEARCH_VALUES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        advanceSearchValues: action.payload\n      });\n\n    case 'RESET_ADVANCE_SEARCH_VALUES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        advanceSearchValues: initialState.advanceSearchValues\n      });\n\n    case 'RESET_WIDGET_CLAIMS_METADATA':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        claimDocsMetaData: initialState.claimDocsMetaData\n      });\n\n    case 'RESET_DMS_WIDGET_DOCUMENTS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        widgetDocDetails: initialState.widgetDocDetails\n      });\n\n    case 'DMS_CLIENT_SIDE_UPLOAD_DOCUMENTS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clientSideUploadFiles: _objectSpread(_objectSpread({}, state.clientSideUploadFiles), {}, {\n          fileDetails: (_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.fileDetails,\n          documentList: (_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.documentList\n        })\n      });\n\n    case 'DMS_CLIENT_SIDE_GET_UPLOADED_DOCUMENT_NAMES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clientSideUploadFiles: _objectSpread(_objectSpread({}, state.clientSideUploadFiles), {}, {\n          documentNameList: (_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : _action$payload7.documentNameList\n        })\n      });\n\n    case 'REMOVE_DMS_CLIENT_SIDE_UPLOADED_DOCUMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clientSideUploadFiles: (_action$payload8 = action.payload) === null || _action$payload8 === void 0 ? void 0 : _action$payload8.uploadedFiles\n      });\n\n    case 'RESET_DMS_CLIENT_SIDE_UPLOADED_DOCUMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clientSideUploadFiles: initialState.clientSideUploadFiles\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dmsReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.reducers.js"],"names":["get","types","utils","initialState","view","files","versionHistory","fileMetaData","isDmsFileViewGridDataLoading","isDmsWidgetDocsLoading","search","isDmsSearchDataLoading","upload","metaData","requestParams","referenceId","sectionRef","data","isLoading","documentsUploaded","contextSubType","type","caseIncidentID","caseIncidentNotesID","refId","dmsWidgetExpanded","docViewer","isOpen","advanceSearchValues","claimDocsMetaData","widgetDocDetails","clientSideUploadFiles","fileDetails","documentList","documentNameList","multipleContextDocs","dmsReducers","state","action","documentTypes","payload","itemsTotal","query","filters","Object","keys","filterValue","reduce","options","field","sort","a","b","string","capitalise","name","docs","dmsDocs","doc","docRefId","docDetail","GET_DMS_VERSION_HISTORY_SUCCESS","claimRef","uploadedFiles"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\r\nimport types from './types';\r\nimport * as utils from 'utils';\r\n\r\nconst initialState = {\r\n  view: {\r\n    files: [],\r\n    versionHistory: {},\r\n    fileMetaData: {},\r\n    isDmsFileViewGridDataLoading: false,\r\n    isDmsWidgetDocsLoading: false,\r\n  },\r\n  search: {\r\n    files: [],\r\n    isDmsSearchDataLoading: false,\r\n  },\r\n  upload: {\r\n    metaData: {\r\n      requestParams: { referenceId: '', sectionRef: '' },\r\n      data: {},\r\n      isLoading: false,\r\n    },\r\n    documentsUploaded: {},\r\n  },\r\n  contextSubType: {\r\n    type: '',\r\n    caseIncidentID: '',\r\n    caseIncidentNotesID: '',\r\n    refId: '',\r\n  },\r\n  dmsWidgetExpanded: false,\r\n  docViewer: {\r\n    isOpen: false,\r\n  },\r\n  advanceSearchValues: {},\r\n  claimDocsMetaData: {},\r\n  widgetDocDetails: {},\r\n  clientSideUploadFiles: {\r\n    fileDetails: {},\r\n    documentList: [],\r\n    documentNameList: [],\r\n  },\r\n  multipleContextDocs: {\r\n    files: [],\r\n    versionHistory: {},\r\n    fileMetaData: {},\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nconst dmsReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        documentTypes: action.payload,\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_REQUEST':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          isDmsSearchDataLoading: true,\r\n        },\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: action.payload,\r\n          itemsTotal: get(action.payload, 'totalElements', 0),\r\n          query: get(action.payload, 'searchBy') || [],\r\n          filters: state?.search?.filters || get(action.payload, 'data.filterValue'),\r\n          isDmsSearchDataLoading: false,\r\n        },\r\n      };\r\n\r\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: state?.search?.files || action.payload,\r\n          query: get(action.payload, 'searchBy') || [],\r\n          filters: Object.keys(action.payload?.data?.filterValue).reduce((options, field) => {\r\n            options[field] = action.payload.data.filterValue[field].sort((a, b) =>\r\n              utils.string.capitalise(a.name) > utils.string.capitalise(b.name) ? 1 : -1\r\n            );\r\n            return options;\r\n          }, {}),\r\n        },\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_FAILURE':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          isDmsSearchDataLoading: false,\r\n        },\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        search: initialState.search,\r\n      };\r\n\r\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        upload: initialState.upload,\r\n      };\r\n\r\n    case 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          isDmsFileViewGridDataLoading: true,\r\n        },\r\n      };\r\n    case 'DMS_WIDGET_DOCUMENT_REQUEST':\r\n      return {\r\n        ...state,\r\n        widgetDocDetails: {\r\n          ...state.widgetDocDetails,\r\n          isDmsWidgetDocsLoading: true,\r\n        },\r\n      };\r\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          files: action.payload,\r\n          isDmsFileViewGridDataLoading: false,\r\n        },\r\n      };\r\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        multipleContextDocs: {\r\n          ...state.multipleContextDocs,\r\n          files: action.payload,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_REQUEST':\r\n      return {\r\n        ...state,\r\n        multipleContextDocs: {\r\n          ...initialState.multipleContextDocs,\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_FAILURE':\r\n      return {\r\n        ...state,\r\n        multipleContextDocs: {\r\n          ...initialState.multipleContextDocs,\r\n          isLoading: false,\r\n        },\r\n      };\r\n    case 'DMS_WIDGET_DOCUMENTS_SUCCESS':\r\n      const docs = action.payload?.reduce((dmsDocs, doc) => {\r\n        const docRefId = doc?.referenceId;\r\n        const docDetail = dmsDocs?.[docRefId] ? [...dmsDocs?.[docRefId], doc] : [doc];\r\n        dmsDocs[docRefId] = docDetail;\r\n        return dmsDocs;\r\n      }, {});\r\n      return {\r\n        ...state,\r\n        widgetDocDetails: {\r\n          ...state.widgetDocDetails,\r\n          isDmsWidgetDocsLoading: false,\r\n          ...docs,\r\n        },\r\n      };\r\n    case 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          isDmsFileViewGridDataLoading: false,\r\n        },\r\n      };\r\n    case 'DMS_WIDGET_DOCUMENTS_FAILURE':\r\n      return {\r\n        ...state,\r\n        widgetDocDetails: {\r\n          ...state.widgetDocDetails,\r\n          isDmsWidgetDocsLoading: false,\r\n        },\r\n      };\r\n    case 'DMS_VIEW_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...initialState.view,\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: initialState.view.versionHistory,\r\n        },\r\n      };\r\n\r\n    case 'GET_EDIT_DMS_META_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          fileMetaData: action.payload,\r\n        },\r\n      };\r\n    case 'DMS_EDIT_META_DATA_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          fileMetaData: initialState.view.fileMetaData,\r\n        },\r\n      };\r\n\r\n    case 'DMS_METADATA_GET_REQUEST':\r\n      const { referenceId, sectionRef } = action.payload;\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          metaData: {\r\n            ...state.upload.metaData,\r\n            requestParams: { referenceId: referenceId, sectionRef: sectionRef },\r\n            data: initialState.upload.metaData.data,\r\n            isLoading: true,\r\n          },\r\n        },\r\n        claimDocsMetaData: {\r\n          data: initialState.claimDocsMetaData,\r\n        },\r\n      };\r\n    case 'DMS_METADATA_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          metaData: { ...state.upload.metaData, data: action.payload, isLoading: false },\r\n        },\r\n        claimDocsMetaData: {\r\n          ...state.claimDocsMetaData,\r\n          data: action.payload?.claimRef ? action.payload : {},\r\n        },\r\n      };\r\n    case 'DMS_METADATA_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        upload: { ...state.upload, metaData: { ...initialState.upload.metaData } },\r\n        claimDocsMetaData: {\r\n          ...state.claimDocsMetaData,\r\n          data: initialState.claimDocsMetaData,\r\n        },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_REQUEST':\r\n      return {\r\n        ...state,\r\n        upload: { ...state.upload, documentsUploaded: initialState.upload.documentsUploaded },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        upload: { ...state.upload, documentsUploaded: action.payload },\r\n      };\r\n\r\n    case 'DMS_POST_DOCUMENTS_ERROR':\r\n      return {\r\n        ...state,\r\n        upload: { ...state.upload, documentsUploaded: initialState.upload.documentsUploaded },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\r\n      return {\r\n        ...state,\r\n        contextSubType: {\r\n          ...state.contextSubType,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\r\n      return {\r\n        ...state,\r\n        contextSubType: initialState.contextSubType,\r\n      };\r\n\r\n    case 'DMS_WIDGET_EXPANDED':\r\n      return {\r\n        ...state,\r\n        dmsWidgetExpanded: action.payload,\r\n      };\r\n\r\n    case 'DMS_DOC_VIEWER_SET_STATE':\r\n      return {\r\n        ...state,\r\n        docViewer: {\r\n          isOpen: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_ADVANCE_SEARCH_VALUES':\r\n      return {\r\n        ...state,\r\n        advanceSearchValues: action.payload,\r\n      };\r\n\r\n    case 'RESET_ADVANCE_SEARCH_VALUES':\r\n      return {\r\n        ...state,\r\n        advanceSearchValues: initialState.advanceSearchValues,\r\n      };\r\n\r\n    case 'RESET_WIDGET_CLAIMS_METADATA':\r\n      return {\r\n        ...state,\r\n        claimDocsMetaData: initialState.claimDocsMetaData,\r\n      };\r\n\r\n    case 'RESET_DMS_WIDGET_DOCUMENTS':\r\n      return {\r\n        ...state,\r\n        widgetDocDetails: initialState.widgetDocDetails,\r\n      };\r\n\r\n    case 'DMS_CLIENT_SIDE_UPLOAD_DOCUMENTS':\r\n      return {\r\n        ...state,\r\n        clientSideUploadFiles: {\r\n          ...state.clientSideUploadFiles,\r\n          fileDetails: action.payload?.fileDetails,\r\n          documentList: action.payload?.documentList,\r\n        },\r\n      };\r\n\r\n    case 'DMS_CLIENT_SIDE_GET_UPLOADED_DOCUMENT_NAMES':\r\n      return {\r\n        ...state,\r\n        clientSideUploadFiles: {\r\n          ...state.clientSideUploadFiles,\r\n          documentNameList: action.payload?.documentNameList,\r\n        },\r\n      };\r\n\r\n    case 'REMOVE_DMS_CLIENT_SIDE_UPLOADED_DOCUMENT':\r\n      return {\r\n        ...state,\r\n        clientSideUploadFiles: action.payload?.uploadedFiles,\r\n      };\r\n\r\n    case 'RESET_DMS_CLIENT_SIDE_UPLOADED_DOCUMENT':\r\n      return {\r\n        ...state,\r\n        clientSideUploadFiles: initialState.clientSideUploadFiles,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dmsReducers;\r\n"]},"metadata":{},"sourceType":"module"}