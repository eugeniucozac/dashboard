{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\QuoteBindAdmin\\\\QuoteBindAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet'; // app\n\nimport { QuoteBindAdminView } from './QuoteBindAdmin.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuoteBindAdmin() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  useEffect(function () {\n    setSelectedTab('facilities');\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleSelectTab = function handleSelectTab(name) {\n    setSelectedTab(name);\n  };\n\n  var tabs = [{\n    value: 'facilities',\n    label: utils.string.t('app.facility_plural')\n  }, {\n    value: 'clients',\n    label: utils.string.t('app.client_plural')\n  }, {\n    value: 'carriers',\n    label: utils.string.t('products.admin.carrier_plural')\n  }, {\n    value: 'insureds',\n    label: utils.string.t('app.insured_plural')\n  }, {\n    value: 'reInsureds',\n    label: utils.string.t('app.reInsured_plural')\n  }];\n  var breadcrumbs = [{\n    name: 'products',\n    label: utils.string.t('products.title'),\n    link: config.routes.quoteBind.root\n  }, {\n    name: 'products-admin',\n    label: utils.string.t('products.admin.titleShort'),\n    link: config.routes.quoteBind.admin,\n    active: true\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('products.admin.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuoteBindAdminView, {\n      tabs: tabs,\n      breadcrumbs: breadcrumbs,\n      selectedTab: selectedTab,\n      handleSelectTab: handleSelectTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuoteBindAdmin, \"QNFzvOSG7R8zsz3Q89lftZrZxiM=\", false, function () {\n  return [useSelector];\n});\n\n_c = QuoteBindAdmin;\nQuoteBindAdmin.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"QuoteBindAdmin\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\QuoteBindAdmin\\\\QuoteBindAdmin.js\"] = {\n    name: \"QuoteBindAdmin\",\n    docgenInfo: QuoteBindAdmin.__docgenInfo,\n    path: \"src\\\\pages\\\\QuoteBindAdmin\\\\QuoteBindAdmin.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteBindAdmin\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/QuoteBindAdmin/QuoteBindAdmin.js"],"names":["React","useEffect","useState","useSelector","Helmet","QuoteBindAdminView","utils","config","QuoteBindAdmin","selectedTab","setSelectedTab","brand","state","ui","handleSelectTab","name","tabs","value","label","string","t","breadcrumbs","link","routes","quoteBind","root","admin","active","app","getAppName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACDN,QAAQ,EADP;AAAA;AAAA,MAChCO,WADgC;AAAA,MACnBC,cADmB;;AAEvC,MAAMC,KAAK,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,EAAN,CAASF,KAApB;AAAA,GAAD,CAAzB;AAEAV,EAAAA,SAAS,CACP,YAAM;AACJS,IAAAA,cAAc,CAAC,YAAD,CAAd;AACD,GAHM,EAIP,EAJO,CAIJ;AAJI,GAAT;;AAOA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChCL,IAAAA,cAAc,CAACK,IAAD,CAAd;AACD,GAFD;;AAIA,MAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,qBAAf;AAA9B,GADW,EAEX;AAAEH,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,mBAAf;AAA3B,GAFW,EAGX;AAAEH,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,+BAAf;AAA5B,GAHW,EAIX;AAAEH,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,oBAAf;AAA5B,GAJW,EAKX;AAAEH,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,sBAAf;AAA9B,GALW,CAAb;AAQA,MAAMC,WAAW,GAAG,CAClB;AACEN,IAAAA,IAAI,EAAE,UADR;AAEEG,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,gBAAf,CAFT;AAGEE,IAAAA,IAAI,EAAEf,MAAM,CAACgB,MAAP,CAAcC,SAAd,CAAwBC;AAHhC,GADkB,EAMlB;AACEV,IAAAA,IAAI,EAAE,gBADR;AAEEG,IAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,2BAAf,CAFT;AAGEE,IAAAA,IAAI,EAAEf,MAAM,CAACgB,MAAP,CAAcC,SAAd,CAAwBE,KAHhC;AAIEC,IAAAA,MAAM,EAAE;AAJV,GANkB,CAApB;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,4BAAWrB,KAAK,CAACa,MAAN,CAAaC,CAAb,CAAe,sBAAf,CAAX,gBAAuDd,KAAK,CAACsB,GAAN,CAAUC,UAAV,CAAqBlB,KAArB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAEK,IAA1B;AAAgC,MAAA,WAAW,EAAEK,WAA7C;AAA0D,MAAA,WAAW,EAAEZ,WAAvE;AAAoF,MAAA,eAAe,EAAEK;AAArG;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GA9CuBN,c;UAERL,W;;;KAFQK,c","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// app\r\nimport { QuoteBindAdminView } from './QuoteBindAdmin.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function QuoteBindAdmin() {\r\n  const [selectedTab, setSelectedTab] = useState();\r\n  const brand = useSelector((state) => state.ui.brand);\r\n\r\n  useEffect(\r\n    () => {\r\n      setSelectedTab('facilities');\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleSelectTab = (name) => {\r\n    setSelectedTab(name);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'facilities', label: utils.string.t('app.facility_plural') },\r\n    { value: 'clients', label: utils.string.t('app.client_plural') },\r\n    { value: 'carriers', label: utils.string.t('products.admin.carrier_plural') },\r\n    { value: 'insureds', label: utils.string.t('app.insured_plural') },\r\n    { value: 'reInsureds', label: utils.string.t('app.reInsured_plural') },\r\n  ];\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'products',\r\n      label: utils.string.t('products.title'),\r\n      link: config.routes.quoteBind.root,\r\n    },\r\n    {\r\n      name: 'products-admin',\r\n      label: utils.string.t('products.admin.titleShort'),\r\n      link: config.routes.quoteBind.admin,\r\n      active: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('products.admin.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n\r\n      <QuoteBindAdminView tabs={tabs} breadcrumbs={breadcrumbs} selectedTab={selectedTab} handleSelectTab={handleSelectTab} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}