{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var getPiRefData = function getPiRefData(type, query) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getPiRefData'\n    };\n    dispatch(getPiRefDataRequest(type, query));\n    var typeObj = {\n      assureds: {\n        path: \"instruction/refdata/assured/\".concat(query),\n        isQueryMandatory: true\n      },\n      ids: {\n        path: \"instruction/refdata/instructionId/\".concat(query),\n        isQueryMandatory: true\n      },\n      status: {\n        path: 'instruction/refdata/instructionStatus',\n        isQueryMandatory: false\n      }\n    };\n\n    if (!type || !Object.keys(typeObj).includes(type)) {\n      dispatch(getPiRefDataFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing or invalid refData type'\n      })));\n      return;\n    }\n\n    if (!query && typeObj[type].isQueryMandatory) {\n      dispatch(getPiRefDataFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing search query'\n      })));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: typeObj[type].path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getPiRefDataSuccess(type, data.data));\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.getPiRefData)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getPiRefDataFailure(err));\n      return err;\n    });\n  };\n};\nexport var getPiRefDataRequest = function getPiRefDataRequest(type, query) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_REQUEST',\n    payload: {\n      type: type,\n      query: query\n    }\n  };\n};\nexport var getPiRefDataSuccess = function getPiRefDataSuccess(type, responseData) {\n  switch (type) {\n    case 'assureds':\n      return {\n        type: 'PROCESSING_INSTRUCTIONS_GET_ASSUREDS_BY_NAME_SUCCESS',\n        payload: responseData\n      };\n\n    case 'ids':\n      return {\n        type: 'PROCESSING_INSTRUCTIONS_GET_IDS_SUCCESS',\n        payload: responseData\n      };\n\n    case 'status':\n      return {\n        type: 'PROCESSING_INSTRUCTIONS_GET_STATUSES_SUCCESS',\n        payload: responseData\n      };\n\n    default:\n      return {\n        type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_SUCCESS',\n        payload: responseData\n      };\n  }\n};\nexport var getPiRefDataFailure = function getPiRefDataFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.getRefData.js"],"names":["utils","authLogout","getPiRefData","type","query","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getPiRefDataRequest","typeObj","assureds","path","isQueryMandatory","ids","status","Object","keys","includes","getPiRefDataFailure","message","api","get","token","accessToken","ppService","then","response","handleResponse","json","handleNewData","data","getPiRefDataSuccess","catch","err","handleError","handleUnauthorized","payload","responseData","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getPiRefData = (type, query) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.getPiRefData',\r\n  };\r\n\r\n  dispatch(getPiRefDataRequest(type, query));\r\n\r\n  const typeObj = {\r\n    assureds: {\r\n      path: `instruction/refdata/assured/${query}`,\r\n      isQueryMandatory: true,\r\n    },\r\n    ids: {\r\n      path: `instruction/refdata/instructionId/${query}`,\r\n      isQueryMandatory: true,\r\n    },\r\n    status: {\r\n      path: 'instruction/refdata/instructionStatus',\r\n      isQueryMandatory: false,\r\n    },\r\n  };\r\n\r\n  if (!type || !Object.keys(typeObj).includes(type)) {\r\n    dispatch(getPiRefDataFailure({ ...defaultError, message: 'Missing or invalid refData type' }));\r\n    return;\r\n  }\r\n\r\n  if (!query && typeObj[type].isQueryMandatory) {\r\n    dispatch(getPiRefDataFailure({ ...defaultError, message: 'Missing search query' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: typeObj[type].path,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getPiRefDataSuccess(type, data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.getPiRefData)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getPiRefDataFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getPiRefDataRequest = (type, query) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_REQUEST',\r\n    payload: { type, query },\r\n  };\r\n};\r\n\r\nexport const getPiRefDataSuccess = (type, responseData) => {\r\n  switch (type) {\r\n    case 'assureds':\r\n      return {\r\n        type: 'PROCESSING_INSTRUCTIONS_GET_ASSUREDS_BY_NAME_SUCCESS',\r\n        payload: responseData,\r\n      };\r\n    case 'ids':\r\n      return {\r\n        type: 'PROCESSING_INSTRUCTIONS_GET_IDS_SUCCESS',\r\n        payload: responseData,\r\n      };\r\n    case 'status':\r\n      return {\r\n        type: 'PROCESSING_INSTRUCTIONS_GET_STATUSES_SUCCESS',\r\n        payload: responseData,\r\n      };\r\n    default:\r\n      return {\r\n        type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_SUCCESS',\r\n        payload: responseData,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getPiRefDataFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_REF_DATA_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}