{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup'; //app\n\nimport TaskSidebarNotesView from './TaskSidebarNotes.view';\nimport { selectClaimsTasksProcessingSelected } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskSidebarNotes.propTypes = {\n  allowNavigation: PropTypes.func.isRequired\n};\nexport default function TaskSidebarNotes(_ref) {\n  _s();\n\n  var _claimsTaskProcessing, _claimsTaskProcessing2;\n\n  var allowNavigation = _ref.allowNavigation;\n  var claimsTaskProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\n  var taskSelected = claimsTaskProcessingSelected === null || claimsTaskProcessingSelected === void 0 ? void 0 : claimsTaskProcessingSelected[0];\n  var fields = [{\n    name: 'caseIncidentID',\n    type: 'hidden',\n    value: claimsTaskProcessingSelected === null || claimsTaskProcessingSelected === void 0 ? void 0 : (_claimsTaskProcessing = claimsTaskProcessingSelected[0]) === null || _claimsTaskProcessing === void 0 ? void 0 : _claimsTaskProcessing.caseIncidentID\n  }, {\n    name: 'taskId',\n    type: 'hidden',\n    value: claimsTaskProcessingSelected === null || claimsTaskProcessingSelected === void 0 ? void 0 : (_claimsTaskProcessing2 = claimsTaskProcessingSelected[0]) === null || _claimsTaskProcessing2 === void 0 ? void 0 : _claimsTaskProcessing2.taskId\n  }, {\n    name: 'addNotes',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().max(1000, utils.string.t('validation.string.max')).required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      multiline: true,\n      rows: 3,\n      rowsMax: 6\n    }\n  }]; // abort\n\n  if (!utils.generic.isValidObject(taskSelected, 'caseIncidentID')) return null;\n  return /*#__PURE__*/_jsxDEV(TaskSidebarNotesView, {\n    fields: fields,\n    task: taskSelected,\n    allowNavigation: allowNavigation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TaskSidebarNotes, \"wz1R6yeShQ+tZfe5JKmMI1XaDns=\", false, function () {\n  return [useSelector];\n});\n\n_c = TaskSidebarNotes;\nTaskSidebarNotes.displayName = \"TaskSidebarNotes\";\nTaskSidebarNotes.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskSidebarNotes\",\n  \"props\": {\n    \"allowNavigation\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.js\"] = {\n    name: \"TaskSidebarNotes\",\n    docgenInfo: TaskSidebarNotes.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSidebarNotes\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskSidebarNotes/TaskSidebarNotes.js"],"names":["React","PropTypes","useSelector","Yup","TaskSidebarNotesView","selectClaimsTasksProcessingSelected","utils","TaskSidebarNotes","propTypes","allowNavigation","func","isRequired","claimsTaskProcessingSelected","taskSelected","fields","name","type","value","caseIncidentID","taskId","validation","string","max","t","required","muiComponentProps","multiline","rows","rowsMax","generic","isValidObject"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,mCAAT,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,eAAe,EAAER,SAAS,CAACS,IAAV,CAAeC;AADL,CAA7B;AAIA,eAAe,SAASJ,gBAAT,OAA+C;AAAA;;AAAA;;AAAA,MAAnBE,eAAmB,QAAnBA,eAAmB;AAC5D,MAAMG,4BAA4B,GAAGV,WAAW,CAACG,mCAAD,CAAhD;AACA,MAAMQ,YAAY,GAAGD,4BAAH,aAAGA,4BAAH,uBAAGA,4BAA4B,CAAG,CAAH,CAAjD;AAEA,MAAME,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAEL,4BAAF,aAAEA,4BAAF,gDAAEA,4BAA4B,CAAG,CAAH,CAA9B,0DAAE,sBAAmCM;AAH5C,GADa,EAMb;AACEH,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,KAAK,EAAEL,4BAAF,aAAEA,4BAAF,iDAAEA,4BAA4B,CAAG,CAAH,CAA9B,2DAAE,uBAAmCO;AAH5C,GANa,EAWb;AACEJ,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEG,IAAAA,UAAU,EAAEjB,GAAG,CAACkB,MAAJ,GAAaC,GAAb,CAAiB,IAAjB,EAAuBhB,KAAK,CAACe,MAAN,CAAaE,CAAb,CAAe,uBAAf,CAAvB,EAAgEC,QAAhE,CAAyElB,KAAK,CAACe,MAAN,CAAaE,CAAb,CAAe,qBAAf,CAAzE,CAJd;AAKEE,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,IAAI,EAAE,CAFW;AAGjBC,MAAAA,OAAO,EAAE;AAHQ;AALrB,GAXa,CAAf,CAJ4D,CA4B5D;;AACA,MAAI,CAACtB,KAAK,CAACuB,OAAN,CAAcC,aAAd,CAA4BjB,YAA5B,EAA0C,gBAA1C,CAAL,EAAkE,OAAO,IAAP;AAElE,sBAAO,QAAC,oBAAD;AAAsB,IAAA,MAAM,EAAEC,MAA9B;AAAsC,IAAA,IAAI,EAAED,YAA5C;AAA0D,IAAA,eAAe,EAAEJ;AAA3E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhCuBF,gB;UACeL,W;;;KADfK,gB;AAAAA,gB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n//app\r\nimport TaskSidebarNotesView from './TaskSidebarNotes.view';\r\nimport { selectClaimsTasksProcessingSelected } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nTaskSidebarNotes.propTypes = {\r\n  allowNavigation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function TaskSidebarNotes({ allowNavigation }) {\r\n  const claimsTaskProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\r\n  const taskSelected = claimsTaskProcessingSelected?.[0];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'caseIncidentID',\r\n      type: 'hidden',\r\n      value: claimsTaskProcessingSelected?.[0]?.caseIncidentID,\r\n    },\r\n    {\r\n      name: 'taskId',\r\n      type: 'hidden',\r\n      value: claimsTaskProcessingSelected?.[0]?.taskId,\r\n    },\r\n    {\r\n      name: 'addNotes',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string().max(1000, utils.string.t('validation.string.max')).required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 6,\r\n      },\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(taskSelected, 'caseIncidentID')) return null;\r\n\r\n  return <TaskSidebarNotesView fields={fields} task={taskSelected} allowNavigation={allowNavigation} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}