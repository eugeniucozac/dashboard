{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTasksTabProcessingTable\\\\ClaimsTasksTabProcessingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { ClaimsTasksTabProcessingView } from './ClaimsTasksTabProcessingTable.view';\nimport { selectClaimsTasksProcessingListPagination, collapseSidebar, selectClaimsTasksProcessingListSelected, selectClaimsProcessingTasksListSelected } from 'stores';\nimport { useSort, usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTasksTabProcessingTable.propTypes = {\n  isTaskTeam: PropTypes.bool.isRequired,\n  tasks: PropTypes.object.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  handleUpdateTaskPriority: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  refreshTasksGrid: PropTypes.func.isRequired,\n  isMultiSelect: PropTypes.bool,\n  multiSelectField: PropTypes.array,\n  control: PropTypes.object\n};\nexport default function ClaimsTasksTabProcessingTable(_ref) {\n  _s();\n\n  var isTaskTeam = _ref.isTaskTeam,\n      tasks = _ref.tasks,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      handleSort = _ref.handleSort,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      handleUpdateTaskPriority = _ref.handleUpdateTaskPriority,\n      refreshTasksGrid = _ref.refreshTasksGrid,\n      isMultiSelect = _ref.isMultiSelect,\n      multiSelectField = _ref.multiSelectField,\n      control = _ref.control;\n  var dispatch = useDispatch();\n  var tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\n  var tasksProcessingPagination = useSelector(selectClaimsTasksProcessingListPagination);\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var pagination = usePagination((tasks === null || tasks === void 0 ? void 0 : tasks.items) || [], tasksProcessingPagination, handleChangePage, handleChangeRowsPerPage);\n  var taskItems = (tasks === null || tasks === void 0 ? void 0 : tasks.items) || [];\n  var hasTasks = utils.generic.isValidArray(taskItems, true);\n  var tasksProcessingSelectedLength = (tasksProcessingSelected === null || tasksProcessingSelected === void 0 ? void 0 : tasksProcessingSelected.length) || 0;\n  useEffect(function () {\n    if (tasksProcessingSelectedLength !== 1) {\n      dispatch(collapseSidebar());\n    }\n  }, [tasksProcessingSelectedLength]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var selectTask = function selectTask(taskObj) {\n    return function () {\n      if (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskId) {\n        dispatch(selectClaimsProcessingTasksListSelected(taskObj, true));\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsTasksTabProcessingView, {\n    isTaskTeam: isTaskTeam,\n    hasTasks: hasTasks,\n    taskItems: taskItems,\n    tasksSelected: tasksProcessingSelected,\n    cols: cols,\n    columnProps: columnProps,\n    handleUpdateTaskPriority: handleUpdateTaskPriority,\n    sort: sort,\n    pagination: pagination,\n    handleSort: handleSort,\n    handlers: {\n      selectTask: selectTask\n    },\n    refreshTasksGrid: refreshTasksGrid,\n    isMultiSelect: isMultiSelect,\n    multiSelectField: multiSelectField,\n    control: control\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTasksTabProcessingTable, \"nV/2H1Fo6rsa4drfndj/sxEcijc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSort, usePagination];\n});\n\n_c = ClaimsTasksTabProcessingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTasksTabProcessingTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTasksTabProcessingTable/ClaimsTasksTabProcessingTable.js"],"names":["React","useEffect","PropTypes","useSelector","useDispatch","ClaimsTasksTabProcessingView","selectClaimsTasksProcessingListPagination","collapseSidebar","selectClaimsTasksProcessingListSelected","selectClaimsProcessingTasksListSelected","useSort","usePagination","utils","ClaimsTasksTabProcessingTable","propTypes","isTaskTeam","bool","isRequired","tasks","object","cols","array","columnProps","func","handleUpdateTaskPriority","sort","handleSort","handleChangePage","handleChangeRowsPerPage","refreshTasksGrid","isMultiSelect","multiSelectField","control","colsArr","sortObj","dispatch","tasksProcessingSelected","tasksProcessingPagination","pagination","items","taskItems","hasTasks","generic","isValidArray","tasksProcessingSelectedLength","length","selectTask","taskObj","taskId"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { ClaimsTasksTabProcessingView } from './ClaimsTasksTabProcessingTable.view';\r\nimport {\r\n  selectClaimsTasksProcessingListPagination,\r\n  collapseSidebar,\r\n  selectClaimsTasksProcessingListSelected,\r\n  selectClaimsProcessingTasksListSelected,\r\n} from 'stores';\r\nimport { useSort, usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nClaimsTasksTabProcessingTable.propTypes = {\r\n  isTaskTeam: PropTypes.bool.isRequired,\r\n  tasks: PropTypes.object.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  handleUpdateTaskPriority: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  refreshTasksGrid: PropTypes.func.isRequired,\r\n  isMultiSelect: PropTypes.bool,\r\n  multiSelectField: PropTypes.array,\r\n  control: PropTypes.object,\r\n};\r\n\r\nexport default function ClaimsTasksTabProcessingTable({\r\n  isTaskTeam,\r\n  tasks,\r\n  cols: colsArr,\r\n  columnProps,\r\n  sort: sortObj,\r\n  handleSort,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleUpdateTaskPriority,\r\n  refreshTasksGrid,\r\n  isMultiSelect,\r\n  multiSelectField,\r\n  control,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\r\n  const tasksProcessingPagination = useSelector(selectClaimsTasksProcessingListPagination);\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const pagination = usePagination(tasks?.items || [], tasksProcessingPagination, handleChangePage, handleChangeRowsPerPage);\r\n  const taskItems = tasks?.items || [];\r\n  const hasTasks = utils.generic.isValidArray(taskItems, true);\r\n\r\n  const tasksProcessingSelectedLength = tasksProcessingSelected?.length || 0;\r\n\r\n  useEffect(() => {\r\n    if (tasksProcessingSelectedLength !== 1) {\r\n      dispatch(collapseSidebar());\r\n    }\r\n  }, [tasksProcessingSelectedLength]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const selectTask = (taskObj) => () => {\r\n    if (taskObj?.taskId) {\r\n      dispatch(selectClaimsProcessingTasksListSelected(taskObj, true));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ClaimsTasksTabProcessingView\r\n      isTaskTeam={isTaskTeam}\r\n      hasTasks={hasTasks}\r\n      taskItems={taskItems}\r\n      tasksSelected={tasksProcessingSelected}\r\n      cols={cols}\r\n      columnProps={columnProps}\r\n      handleUpdateTaskPriority={handleUpdateTaskPriority}\r\n      sort={sort}\r\n      pagination={pagination}\r\n      handleSort={handleSort}\r\n      handlers={{\r\n        selectTask,\r\n      }}\r\n      refreshTasksGrid={refreshTasksGrid}\r\n      isMultiSelect={isMultiSelect}\r\n      multiSelectField={multiSelectField}\r\n      control={control}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}