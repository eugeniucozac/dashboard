{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ViewClaimInformation\\\\ViewClaimInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { ViewClaimInformationView } from './ViewClaimInformation.view';\nimport { hideModal, submitClaimDetailsInformation } from 'stores';\nimport * as utils from 'utils';\nimport { selectClaimsInformation, getClaimsPreviewInformation, getLossQualifiers, getCatCodes, getPolicyInformation, selectLossQualifiers, selectLossId, selectCatCodes, selectClaimsPolicyInformation, selectClaimsInterest, selectClaimsPolicySections, getLossInformation, claimsPolicyData, postClaimDetailsInformationSuccess, selectClaimsProcessingSelected, getInterest, getBEAdjuster, getPolicySections } from 'stores';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewClaimInformation(_ref) {\n  _s();\n\n  var _useSelector, _lossQualifiers$find, _policySections$find;\n\n  var claimData = _ref.claimData,\n      _ref$isAssignedToHidd = _ref.isAssignedToHidden,\n      isAssignedToHidden = _ref$isAssignedToHidd === void 0 ? true : _ref$isAssignedToHidd,\n      _ref$isWorkflowStatus = _ref.isWorkflowStatusHidden,\n      isWorkflowStatusHidden = _ref$isWorkflowStatus === void 0 ? true : _ref$isWorkflowStatus;\n  useEffect(function () {\n    dispatch(getLossInformation(claimData.lossDetailID, claimData.sourceID, claimData.divisionID, claimData.claimReference));\n    dispatch(claimsPolicyData({\n      xbInstanceID: claimData.xbInstanceID,\n      xbPolicyID: claimData.xbPolicyID\n    }));\n    dispatch(getPolicyInformation());\n    dispatch(getInterest());\n    dispatch(getBEAdjuster());\n    dispatch(postClaimDetailsInformationSuccess(claimData.claimID));\n    dispatch(getClaimsPreviewInformation(claimData === null || claimData === void 0 ? void 0 : claimData.claimID, claimData === null || claimData === void 0 ? void 0 : claimData.claimReference, claimData === null || claimData === void 0 ? void 0 : claimData.sourceID, claimData === null || claimData === void 0 ? void 0 : claimData.departmentID));\n\n    if (utils.generic.isInvalidOrEmptyArray(lossQualifiers)) {\n      dispatch(getLossQualifiers());\n    }\n\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\n      dispatch(getCatCodes());\n    }\n\n    dispatch(getPolicySections());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var dispatch = useDispatch();\n  var claimPreviewInfo = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var interestObj = interests === null || interests === void 0 ? void 0 : interests.find(function (item) {\n    return item.policyInterestID === claimPreviewInfo.policyInterestID;\n  });\n  var interest = interestObj === null || interestObj === void 0 ? void 0 : interestObj.description;\n  var selectedLossQualifier = claimPreviewInfo && ((_lossQualifiers$find = lossQualifiers.find(function (list) {\n    return parseInt(list.id) === claimPreviewInfo.lossQualifierID;\n  })) === null || _lossQualifiers$find === void 0 ? void 0 : _lossQualifiers$find.name);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var claimsProcessingSelected = useSelector(selectClaimsProcessingSelected);\n  var claimSelected = claimsProcessingSelected === null || claimsProcessingSelected === void 0 ? void 0 : claimsProcessingSelected[0];\n  var claimDetails = {\n    claimant: claimPreviewInfo.claimantName,\n    status: claimPreviewInfo.claimStatus,\n    claimRef: claimPreviewInfo.claimReference,\n    lossQualifierName: selectedLossQualifier,\n    lossDateFrom: claimPreviewInfo.lossFromDate,\n    lossDateTo: claimPreviewInfo.lossToDate,\n    adjusterType: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster'),\n    adjusterName: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) !== 0 ? claimPreviewInfo.adjusterName : claimPreviewInfo.nonBEAdjusterName,\n    adjusterRef: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.adjusterReference,\n    priority: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.priorityDescription,\n    settlementCurrency: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.settlementCurrencyCode,\n    interest: interest,\n    complexity: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexity,\n    complexityBasis: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexityBasis,\n    referral: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralValue,\n    referralResponse: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralResponseDescription,\n    location: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.location,\n    fguNarrative: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.fgunarrative,\n    processNotes: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.processNotes,\n    isBordereau: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.isBordereau,\n    certificateNumber: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateNumber,\n    ucr: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.ucr,\n    claimReceivedDate: claimPreviewInfo.claimReceivedDate,\n    certificateInceptionDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateInceptionDate,\n    certificateExpiryDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateExpiryDate,\n    basisOfOrder: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.basisOfOrder) || 0, \"%\"),\n    orderPercentage: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.orderPercentage) || 0, \" %\"),\n    movementType: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.movementType,\n    underWritingGroupData: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policyUnderWritingGroupDtoList,\n    policySectionID: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policySectionID,\n    policySectionDesc: !isSectionEnabled ? '' : !(claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _claimPreviewInfo$pol;\n\n      return sec.id.toString() === (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : (_claimPreviewInfo$pol = claimPreviewInfo.policySectionID) === null || _claimPreviewInfo$pol === void 0 ? void 0 : _claimPreviewInfo$pol.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name,\n    documentInfo: {\n      firmOrder: {\n        name: 'Filename1.pdf',\n        type: 'pdf'\n      },\n      processingInstructions: {\n        name: 'Filename2.pdf',\n        type: 'pdf'\n      },\n      transactionSheets: {\n        name: 'Filename3.html',\n        type: 'html'\n      }\n    },\n    bordereauPeriod: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.bordereauPeriod,\n    assignedTo: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.assignedTo,\n    workflowStatus: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.processState\n  };\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.yes'),\n    handler: function handler() {\n      return dispatch(hideModal());\n    }\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.no'),\n    handler: function handler() {\n      return dispatch(submitClaimDetailsInformation());\n    }\n  }];\n\n  var handleCancel = function handleCancel() {\n    dispatch(hideModal());\n  };\n\n  return /*#__PURE__*/_jsxDEV(ViewClaimInformationView, {\n    actions: actions,\n    handleCancel: handleCancel,\n    lossInformation: lossInformation,\n    catCodes: catCodes,\n    policyInformation: policyInformation,\n    claimInformation: claimDetails,\n    columns: underWritingGroupColumns,\n    isAssignedToHidden: isAssignedToHidden,\n    isWorkflowStatusHidden: isWorkflowStatusHidden\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewClaimInformation, \"JQRSVG8WaYyF0oAWNSIEzA+4KJ0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ViewClaimInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewClaimInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ViewClaimInformation/ViewClaimInformation.js"],"names":["React","useEffect","useDispatch","useSelector","ViewClaimInformationView","hideModal","submitClaimDetailsInformation","utils","selectClaimsInformation","getClaimsPreviewInformation","getLossQualifiers","getCatCodes","getPolicyInformation","selectLossQualifiers","selectLossId","selectCatCodes","selectClaimsPolicyInformation","selectClaimsInterest","selectClaimsPolicySections","getLossInformation","claimsPolicyData","postClaimDetailsInformationSuccess","selectClaimsProcessingSelected","getInterest","getBEAdjuster","getPolicySections","constants","ViewClaimInformation","claimData","isAssignedToHidden","isWorkflowStatusHidden","dispatch","lossDetailID","sourceID","divisionID","claimReference","xbInstanceID","xbPolicyID","claimID","departmentID","generic","isInvalidOrEmptyArray","lossQualifiers","catCodes","claimPreviewInfo","lossInformation","policyInformation","interests","items","policySections","interestObj","find","item","policyInterestID","interest","description","selectedLossQualifier","list","parseInt","id","lossQualifierID","name","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","claimsProcessingSelected","claimSelected","claimDetails","claimant","claimantName","status","claimStatus","claimRef","lossQualifierName","lossDateFrom","lossFromDate","lossDateTo","lossToDate","adjusterType","beAdjusterID","string","t","adjusterName","nonBEAdjusterName","adjusterRef","adjusterReference","priority","priorityDescription","settlementCurrency","settlementCurrencyCode","complexity","complexityBasis","referral","referralValue","referralResponse","referralResponseDescription","location","fguNarrative","fgunarrative","processNotes","isBordereau","certificateNumber","ucr","claimReceivedDate","certificateInceptionDate","certificateExpiryDate","basisOfOrder","orderPercentage","movementType","underWritingGroupData","policyUnderWritingGroupDtoList","policySectionID","policySectionDesc","sec","toString","documentInfo","firmOrder","type","processingInstructions","transactionSheets","bordereauPeriod","assignedTo","workflowStatus","processState","underWritingGroupColumns","label","actions","handler","handleCancel"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { ViewClaimInformationView } from './ViewClaimInformation.view';\r\nimport { hideModal, submitClaimDetailsInformation } from 'stores';\r\nimport * as utils from 'utils';\r\nimport {\r\n  selectClaimsInformation,\r\n  getClaimsPreviewInformation,\r\n  getLossQualifiers,\r\n  getCatCodes,\r\n  getPolicyInformation,\r\n  selectLossQualifiers,\r\n  selectLossId,\r\n  selectCatCodes,\r\n  selectClaimsPolicyInformation,\r\n  selectClaimsInterest,\r\n  selectClaimsPolicySections,\r\n  getLossInformation,\r\n  claimsPolicyData,\r\n  postClaimDetailsInformationSuccess,\r\n  selectClaimsProcessingSelected,\r\n  getInterest,\r\n  getBEAdjuster,\r\n  getPolicySections,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ViewClaimInformation({ claimData, isAssignedToHidden = true, isWorkflowStatusHidden = true }) {\r\n  useEffect(() => {\r\n    dispatch(getLossInformation(claimData.lossDetailID, claimData.sourceID, claimData.divisionID, claimData.claimReference));\r\n    dispatch(claimsPolicyData({ xbInstanceID: claimData.xbInstanceID, xbPolicyID: claimData.xbPolicyID }));\r\n    dispatch(getPolicyInformation());\r\n    dispatch(getInterest());\r\n    dispatch(getBEAdjuster());\r\n    dispatch(postClaimDetailsInformationSuccess(claimData.claimID));\r\n    dispatch(getClaimsPreviewInformation(claimData?.claimID, claimData?.claimReference, claimData?.sourceID, claimData?.departmentID));\r\n    if (utils.generic.isInvalidOrEmptyArray(lossQualifiers)) {\r\n      dispatch(getLossQualifiers());\r\n    }\r\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\r\n      dispatch(getCatCodes());\r\n    }\r\n    dispatch(getPolicySections());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const dispatch = useDispatch();\r\n  const claimPreviewInfo = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n\r\n  const interestObj = interests?.find((item) => item.policyInterestID === claimPreviewInfo.policyInterestID);\r\n  const interest = interestObj?.description;\r\n  let selectedLossQualifier =\r\n    claimPreviewInfo && lossQualifiers.find((list) => parseInt(list.id) === claimPreviewInfo.lossQualifierID)?.name;\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n  const claimsProcessingSelected = useSelector(selectClaimsProcessingSelected);\r\n  const claimSelected = claimsProcessingSelected?.[0];\r\n  const claimDetails = {\r\n    claimant: claimPreviewInfo.claimantName,\r\n    status: claimPreviewInfo.claimStatus,\r\n    claimRef: claimPreviewInfo.claimReference,\r\n    lossQualifierName: selectedLossQualifier,\r\n    lossDateFrom: claimPreviewInfo.lossFromDate,\r\n    lossDateTo: claimPreviewInfo.lossToDate,\r\n    adjusterType:\r\n      claimPreviewInfo?.beAdjusterID === 0\r\n        ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n        : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    adjusterName: claimPreviewInfo?.beAdjusterID !== 0 ? claimPreviewInfo.adjusterName : claimPreviewInfo.nonBEAdjusterName,\r\n    adjusterRef: claimPreviewInfo?.adjusterReference,\r\n    priority: claimPreviewInfo?.priorityDescription,\r\n    settlementCurrency: claimPreviewInfo?.settlementCurrencyCode,\r\n    interest: interest,\r\n    complexity: claimPreviewInfo?.complexity,\r\n    complexityBasis: claimPreviewInfo?.complexityBasis,\r\n    referral: claimPreviewInfo?.referralValue,\r\n    referralResponse: claimPreviewInfo?.referralResponseDescription,\r\n    location: claimPreviewInfo?.location,\r\n    fguNarrative: claimPreviewInfo?.fgunarrative,\r\n    processNotes: claimPreviewInfo?.processNotes,\r\n    isBordereau: claimPreviewInfo?.isBordereau,\r\n    certificateNumber: claimPreviewInfo?.certificateNumber,\r\n    ucr: claimPreviewInfo?.ucr,\r\n    claimReceivedDate: claimPreviewInfo.claimReceivedDate,\r\n    certificateInceptionDate: claimPreviewInfo?.certificateInceptionDate,\r\n    certificateExpiryDate: claimPreviewInfo?.certificateExpiryDate,\r\n    basisOfOrder: `${claimPreviewInfo?.basisOfOrder || 0}%`,\r\n    orderPercentage: `${claimPreviewInfo?.orderPercentage || 0} %`,\r\n    movementType: claimPreviewInfo?.movementType,\r\n    underWritingGroupData: claimPreviewInfo?.policyUnderWritingGroupDtoList,\r\n    policySectionID: claimPreviewInfo?.policySectionID,\r\n    policySectionDesc: !isSectionEnabled\r\n      ? ''\r\n      : !claimPreviewInfo?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec.id.toString() === claimPreviewInfo?.policySectionID?.toString())?.name,\r\n    documentInfo: {\r\n      firmOrder: { name: 'Filename1.pdf', type: 'pdf' },\r\n      processingInstructions: { name: 'Filename2.pdf', type: 'pdf' },\r\n      transactionSheets: { name: 'Filename3.html', type: 'html' },\r\n    },\r\n    bordereauPeriod: claimPreviewInfo?.bordereauPeriod,\r\n    assignedTo: claimSelected?.assignedTo,\r\n    workflowStatus: claimSelected?.processState,\r\n  };\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => dispatch(hideModal()),\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.no'),\r\n      handler: () => dispatch(submitClaimDetailsInformation()),\r\n    },\r\n  ];\r\n\r\n  const handleCancel = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  return (\r\n    <ViewClaimInformationView\r\n      actions={actions}\r\n      handleCancel={handleCancel}\r\n      lossInformation={lossInformation}\r\n      catCodes={catCodes}\r\n      policyInformation={policyInformation}\r\n      claimInformation={claimDetails}\r\n      columns={underWritingGroupColumns}\r\n      isAssignedToHidden={isAssignedToHidden}\r\n      isWorkflowStatusHidden={isWorkflowStatusHidden}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}