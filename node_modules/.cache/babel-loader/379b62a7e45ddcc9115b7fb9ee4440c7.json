{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport { v4 as uuidv4 } from 'uuid';\nexport var getUnderwritingGroupsBySection = function getUnderwritingGroupsBySection() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    var _underWritingGroups$s, _underWritingGroups$s2;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        _getState$claims = _getState.claims,\n        policyData = _getState$claims.policyData,\n        underWritingGroups = _getState$claims.underWritingGroups;\n\n    var defaultError = {\n      component: 'getUnderwritingGroupsBySection',\n      file: 'stores/claims.actions.getUnderwritingGroupsBySection'\n    };\n    var prevDirection = (underWritingGroups === null || underWritingGroups === void 0 ? void 0 : (_underWritingGroups$s = underWritingGroups.sort) === null || _underWritingGroups$s === void 0 ? void 0 : _underWritingGroups$s.direction) || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction.toUpperCase() : prevDirection;\n    var prevSortBy = (underWritingGroups === null || underWritingGroups === void 0 ? void 0 : (_underWritingGroups$s2 = underWritingGroups.sort) === null || _underWritingGroups$s2 === void 0 ? void 0 : _underWritingGroups$s2.by) || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var policyID = policyData.xbPolicyID || '';\n    var sourceID = policyData.xbInstanceID || '';\n    dispatch(getUnderwritingGroupsBySectionRequest());\n    dispatch(addLoader('getUnderwritingGroupsBySection'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/policy/\".concat(policyID, \"/source/\").concat(sourceID, \"/underwriting-groups?sortBy=\").concat(newSortBy, \"&direction=\").concat(newDirection)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var sortedUnderwritingGroups = data.data.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          id: uuidv4()\n        });\n      });\n      dispatch(getUnderwritingGroupsBySectionSuccess({\n        sortedUnderwritingGroups: sortedUnderwritingGroups,\n        newSortBy: newSortBy,\n        newDirection: newDirection\n      }));\n      return sortedUnderwritingGroups;\n    })[\"catch\"](function (err) {\n      dispatch(getUnderwritingGroupsBySectionFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getUnderwritingGroupsBySection'));\n    });\n  };\n};\nexport var getUnderwritingGroupsBySectionRequest = function getUnderwritingGroupsBySectionRequest() {\n  return {\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_REQUEST'\n  };\n};\nexport var getUnderwritingGroupsBySectionSuccess = function getUnderwritingGroupsBySectionSuccess(data) {\n  return {\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getUnderwritingGroupsBySectionFailure = function getUnderwritingGroupsBySectionFailure(err) {\n  return {\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getUnderwritingGroupsBySection.js"],"names":["addLoader","authLogout","removeLoader","utils","v4","uuidv4","getUnderwritingGroupsBySection","params","dispatch","getState","auth","user","endpoint","config","vars","claims","policyData","underWritingGroups","defaultError","component","file","prevDirection","sort","direction","newDirection","hasOwnProperty","toUpperCase","prevSortBy","by","newSortBy","sortBy","policyID","xbPolicyID","sourceID","xbInstanceID","getUnderwritingGroupsBySectionRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","data","sortedUnderwritingGroups","map","item","id","getUnderwritingGroupsBySectionSuccess","err","getUnderwritingGroupsBySectionFailure","handleUnauthorized","type","payload"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const getUnderwritingGroupsBySection =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } }, claims: { policyData, underWritingGroups } } = getState();\r\n\r\n    const defaultError = {\r\n      component: 'getUnderwritingGroupsBySection',\r\n      file: 'stores/claims.actions.getUnderwritingGroupsBySection',\r\n    };\r\n\r\n    const prevDirection = underWritingGroups?.sort?.direction || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction.toUpperCase() : prevDirection;\r\n\r\n    const prevSortBy = underWritingGroups?.sort?.by || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n    const policyID = policyData.xbPolicyID || '';\r\n    const sourceID = policyData.xbInstanceID || '';\r\n\r\n    dispatch(getUnderwritingGroupsBySectionRequest());\r\n    dispatch(addLoader('getUnderwritingGroupsBySection'));\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: `api/data/policy/${policyID}/source/${sourceID}/underwriting-groups?sortBy=${newSortBy}&direction=${newDirection}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleNewData(json))\r\n      .then((data) => {\r\n        const sortedUnderwritingGroups = data.data.map((item) => {\r\n          return { ...item, id: uuidv4() };\r\n        });\r\n        dispatch(getUnderwritingGroupsBySectionSuccess({ sortedUnderwritingGroups, newSortBy, newDirection }));\r\n        return sortedUnderwritingGroups;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getUnderwritingGroupsBySectionFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        dispatch(removeLoader('getUnderwritingGroupsBySection'));\r\n      });\r\n  };\r\n\r\nexport const getUnderwritingGroupsBySectionRequest = () => {\r\n  return {\r\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getUnderwritingGroupsBySectionSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getUnderwritingGroupsBySectionFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_UNDERWRITING_GROUPS_BY_SECTION_GET_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}