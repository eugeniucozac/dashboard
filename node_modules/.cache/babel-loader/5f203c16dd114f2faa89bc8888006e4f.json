{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditClaimTaskNote\\\\EditClaimTaskNote.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './EditClaimTaskNote.styles';\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormLabel, FormText } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditClaimTaskNoteView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  buttons: PropTypes.shape({\n    cancel: PropTypes.object.isRequired,\n    submit: PropTypes.object.isRequired\n  }),\n  formProps: PropTypes.object.isRequired,\n  note: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.array.isRequired\n};\nexport function EditClaimTaskNoteView(_ref) {\n  var fields = _ref.fields,\n      _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? {} : _ref$buttons,\n      formProps = _ref.formProps,\n      note = _ref.note,\n      breadcrumbs = _ref.breadcrumbs;\n  var classes = makeStyles(styles, {\n    name: 'EditClaimTaskNote'\n  })();\n  var control = formProps.control,\n      errors = formProps.errors,\n      handleSubmit = formProps.handleSubmit,\n      formState = formProps.formState;\n  var getNotesBreadCrumb = breadcrumbs === null || breadcrumbs === void 0 ? void 0 : breadcrumbs.filter(function (_ref2) {\n    var name = _ref2.name;\n    return name === 'lossRef' || name === 'claimRef' || name === 'taskRef';\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [!utils.generic.isInvalidOrEmptyArray(getNotesBreadCrumb) ? /*#__PURE__*/_jsxDEV(FormGrid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        classes: {\n          root: classes.breadcrumbSpacing\n        },\n        children: getNotesBreadCrumb === null || getNotesBreadCrumb === void 0 ? void 0 : getNotesBreadCrumb.map(function (_ref3) {\n          var name = _ref3.name,\n              label = _ref3.label;\n          return name !== 'taskRef' ? label + ' / ' : label;\n        }).join('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(buttons.submit.handler),\n      \"data-testid\": \"form-editClaimTaskNote\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.editNoteFields.createdDate.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              classes: {\n                root: classes.textOnly\n              },\n              children: utils.string.t('format.date', {\n                value: {\n                  date: (note === null || note === void 0 ? void 0 : note.createdDate) || '',\n                  format: config.ui.format.date.textTime\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.editNoteFields.createdByName.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              classes: {\n                root: classes.textOnly\n              },\n              children: (note === null || note === void 0 ? void 0 : note.createdByName) || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.editNoteFields.details.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'details', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.editNoteFields.updatedDate.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              classes: {\n                root: classes.textOnly\n              },\n              children: utils.string.t('format.date', {\n                value: {\n                  date: (note === null || note === void 0 ? void 0 : note.updatedDate) || '',\n                  format: config.ui.format.date.textTime\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.editNoteFields.updatedByName.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              classes: {\n                root: classes.textOnly\n              },\n              children: (note === null || note === void 0 ? void 0 : note.updatedByName) || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [buttons.cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: buttons.cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), buttons.submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          onClick: handleSubmit(buttons.submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = EditClaimTaskNoteView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditClaimTaskNoteView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditClaimTaskNote/EditClaimTaskNote.view.js"],"names":["React","PropTypes","styles","Button","FormActions","FormContainer","FormFields","FormGrid","FormLabel","FormText","utils","config","makeStyles","Typography","EditClaimTaskNoteView","propTypes","fields","array","isRequired","buttons","shape","cancel","object","submit","formProps","note","breadcrumbs","classes","name","control","errors","handleSubmit","formState","getNotesBreadCrumb","filter","root","generic","isInvalidOrEmptyArray","breadcrumbSpacing","map","label","join","handler","string","t","textOnly","value","date","createdDate","format","ui","textTime","createdByName","form","getFieldProps","updatedDate","updatedByName","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './EditClaimTaskNote.styles';\r\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormLabel, FormText } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nEditClaimTaskNoteView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  buttons: PropTypes.shape({\r\n    cancel: PropTypes.object.isRequired,\r\n    submit: PropTypes.object.isRequired,\r\n  }),\r\n  formProps: PropTypes.object.isRequired,\r\n  note: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function EditClaimTaskNoteView({ fields, buttons = {}, formProps, note, breadcrumbs }) {\r\n  const classes = makeStyles(styles, { name: 'EditClaimTaskNote' })();\r\n\r\n  const { control, errors, handleSubmit, formState } = formProps;\r\n\r\n  const getNotesBreadCrumb = breadcrumbs?.filter(({name}) => name === 'lossRef' || name === 'claimRef' || name === 'taskRef' );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {!utils.generic.isInvalidOrEmptyArray(getNotesBreadCrumb)\r\n        ? <FormGrid item xs={12}><Typography variant=\"body2\" classes={{ root: classes.breadcrumbSpacing }}>{getNotesBreadCrumb?.map(({name, label}) => (name !== 'taskRef' ?  label+' / ' : label)).join('')}</Typography></FormGrid>\r\n        : null\r\n      }\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(buttons.submit.handler)} data-testid=\"form-editClaimTaskNote\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container alignItems=\"center\">\r\n            <FormGrid item xs={12} sm={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.editNoteFields.createdDate.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={9}>\r\n              <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                {utils.string.t('format.date', { value: { date: note?.createdDate || '', format: config.ui.format.date.textTime } })}\r\n              </Typography>\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container alignItems=\"center\">\r\n            <FormGrid item xs={12} sm={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.editNoteFields.createdByName.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={9}>\r\n              <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                {note?.createdByName || ''}\r\n              </Typography>\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.editNoteFields.details.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={9}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'details', control, errors)} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container alignItems=\"center\">\r\n            <FormGrid item xs={12} sm={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.editNoteFields.updatedDate.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={9}>\r\n              <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                {utils.string.t('format.date', { value: { date: note?.updatedDate || '', format: config.ui.format.date.textTime } })}\r\n              </Typography>\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container alignItems=\"center\">\r\n            <FormGrid item xs={12} sm={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.editNoteFields.updatedByName.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={9}>\r\n              <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                {note?.updatedByName || ''}\r\n              </Typography>\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {buttons.cancel && (\r\n            <Button text={buttons.cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={buttons.cancel.handler} />\r\n          )}\r\n          {buttons.submit && (\r\n            <Button\r\n              text={buttons.submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              onClick={handleSubmit(buttons.submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}