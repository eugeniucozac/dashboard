{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionRow.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport styles from './LossActionTable.styles';\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLossActionRow.prototype = {\n  data: PropTypes.array.isRequired,\n  columnProps: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  level: PropTypes.number.isRequired\n};\nexport function LossActionRow(_ref) {\n  var data = _ref.data,\n      columnProps = _ref.columnProps,\n      onClick = _ref.onClick,\n      isOpen = _ref.isOpen,\n      level = _ref.level;\n  var classes = makeStyles(styles, {\n    name: 'LossActionTable'\n  })({\n    expanded: isOpen,\n    level: level\n  });\n  var hasChildren = data.actionChildItemList;\n  var chipColor = ['info', 'success', 'alert', 'error', 'light'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      onClick: onClick,\n      className: classes.row,\n      \"data-testid\": \"search-row-\".concat(data === null || data === void 0 ? void 0 : data.actionID),\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actionId')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.actionID),\n        children: [hasChildren && /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n          className: classes.arrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          text: \"\".concat(data === null || data === void 0 ? void 0 : data.actionID),\n          color: \"secondary\",\n          onClick: function onClick() {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('name')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.actionName),\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: data === null || data === void 0 ? void 0 : data.actionName,\n          size: \"small\",\n          type: chipColor[level],\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.description),\n        children: data === null || data === void 0 ? void 0 : data.description\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.team),\n        children: data === null || data === void 0 ? void 0 : data.team\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.assignedTo),\n        children: data === null || data === void 0 ? void 0 : data.assignedTo\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.dateCreated),\n        children: utils.string.t('format.date', {\n          value: {\n            date: data === null || data === void 0 ? void 0 : data.dateCreated,\n            format: config.ui.format.date.textTime\n          }\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDate')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.targetDueDate),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"error\",\n          children: utils.string.t('format.date', {\n            value: {\n              date: data === null || data === void 0 ? void 0 : data.targetDueDate,\n              format: config.ui.format.date.text\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.priority),\n        children: data === null || data === void 0 ? void 0 : data.priority\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.status),\n        children: (data === null || data === void 0 ? void 0 : data.status) && /*#__PURE__*/_jsxDEV(Status, {\n          size: \"sm\",\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: data === null || data === void 0 ? void 0 : data.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this),\n          status: (data === null || data === void 0 ? void 0 : data.status) === 'Complete' ? 'success' : 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.insured),\n        children: data === null || data === void 0 ? void 0 : data.insured\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.divisionID),\n        children: data === null || data === void 0 ? void 0 : data.divisionID\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskCompleted')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.taskCompleted),\n        children: data === null || data === void 0 ? void 0 : data.taskCompleted\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, data === null || data === void 0 ? void 0 : data.actionID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = LossActionRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionRow\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionRow.js"],"names":["React","PropTypes","TableCell","Status","Translate","Chip","Link","utils","config","styles","makeStyles","TableRow","Typography","KeyboardArrowDownIcon","LossActionRow","prototype","data","array","isRequired","columnProps","onClick","func","isOpen","bool","level","number","classes","name","expanded","hasChildren","actionChildItemList","chipColor","row","actionID","arrow","actionName","description","team","assignedTo","dateCreated","string","t","value","date","format","ui","textTime","targetDueDate","text","priority","status","insured","divisionID","taskCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport styles from './LossActionTable.styles';\r\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nLossActionRow.prototype = {\r\n  data: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function LossActionRow({ data, columnProps, onClick, isOpen, level }) {\r\n  const classes = makeStyles(styles, { name: 'LossActionTable' })({ expanded: isOpen, level });\r\n  const hasChildren = data.actionChildItemList;\r\n  const chipColor = ['info', 'success', 'alert', 'error', 'light'];\r\n\r\n  return (\r\n    <>\r\n      <TableRow onClick={onClick} className={classes.row} key={data?.actionID} data-testid={`search-row-${data?.actionID}`} hover>\r\n        <TableCell {...columnProps('actionId')} data-testid={`row-col-${data?.actionID}`}>\r\n          {hasChildren && <KeyboardArrowDownIcon className={classes.arrow} />}\r\n          <Link text={`${data?.actionID}`} color=\"secondary\" onClick={() => {}} />\r\n        </TableCell>\r\n        <TableCell {...columnProps('name')} data-testid={`row-col-${data?.actionName}`}>\r\n          <Chip label={data?.actionName} size=\"small\" type={chipColor[level]} variant=\"outlined\" />\r\n        </TableCell>\r\n        <TableCell {...columnProps('description')} data-testid={`row-col-${data?.description}`}>\r\n          {data?.description}\r\n        </TableCell>\r\n        <TableCell {...columnProps('team')} data-testid={`row-col-${data?.team}`}>\r\n          {data?.team}\r\n        </TableCell>\r\n        <TableCell {...columnProps('assignedTo')} data-testid={`row-col-${data?.assignedTo}`}>\r\n          {data?.assignedTo}\r\n        </TableCell>\r\n        <TableCell {...columnProps('createdDate')} data-testid={`row-col-${data?.dateCreated}`}>\r\n          {utils.string.t('format.date', {\r\n            value: { date: data?.dateCreated, format: config.ui.format.date.textTime },\r\n          })}\r\n        </TableCell>\r\n        <TableCell {...columnProps('targetDate')} data-testid={`row-col-${data?.targetDueDate}`}>\r\n          <Typography variant=\"body2\" color=\"error\">\r\n            {utils.string.t('format.date', {\r\n              value: { date: data?.targetDueDate, format: config.ui.format.date.text },\r\n            })}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell {...columnProps('priority')} data-testid={`row-col-${data?.priority}`}>\r\n          {data?.priority}\r\n        </TableCell>\r\n        <TableCell {...columnProps('status')} data-testid={`row-col-${data?.status}`}>\r\n          {data?.status && (\r\n            <Status size=\"sm\" text={<Translate label={data?.status} />} status={data?.status === 'Complete' ? 'success' : 'error'} />\r\n          )}\r\n        </TableCell>\r\n        <TableCell {...columnProps('insured')} data-testid={`row-col-${data?.insured}`}>\r\n          {data?.insured}\r\n        </TableCell>\r\n        <TableCell {...columnProps('division')} data-testid={`row-col-${data?.divisionID}`}>\r\n          {data?.divisionID}\r\n        </TableCell>\r\n        <TableCell {...columnProps('taskCompleted')} data-testid={`row-col-${data?.taskCompleted}`}>\r\n          {data?.taskCompleted}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}