{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Accordion\\\\Accordion.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './Accordion.styles';\nimport { Link, Loader } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Accordion, AccordionDetails, AccordionSummary, Typography, Grid, Box } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAccordionView.propTypes = {\n  title: PropTypes.node,\n  icon: PropTypes.bool,\n  boxed: PropTypes.bool,\n  expanded: PropTypes.bool,\n  isDataLoading: PropTypes.bool,\n  density: PropTypes.oneOf(['compact', 'default', 'comfortable']),\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    color: PropTypes.oneOf(['primary', 'secondary', 'neutral']),\n    onClick: PropTypes.func.isRequired\n  })),\n  testid: PropTypes.string,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n};\nAccordionView.defaultProps = {\n  icon: true,\n  density: 'default',\n  isDataLoading: false,\n  testid: '',\n  defaultHeader: true\n};\nexport function AccordionView(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      icon = _ref.icon,\n      boxed = _ref.boxed,\n      expanded = _ref.expanded,\n      isDataLoading = _ref.isDataLoading,\n      density = _ref.density,\n      actions = _ref.actions,\n      testid = _ref.testid,\n      onChange = _ref.onChange,\n      children = _ref.children,\n      defaultHeader = _ref.defaultHeader;\n  var classes = makeStyles(styles, {\n    name: 'Accordion'\n  })({\n    blank: !boxed,\n    density: density\n  });\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    expanded: expanded,\n    onChange: onChange,\n    className: classes.panel,\n    \"data-testid\": \"accordion\".concat(testid ? \"-\".concat(testid) : ''),\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n      classes: {\n        root: classnames(classes.summary),\n        content: classnames(classes.summaryContent)\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: defaultHeader ? classes.header : classes.customHeader,\n        children: [icon && (isDataLoading ? /*#__PURE__*/_jsxDEV(Box, {\n          m: 0.5,\n          ml: 1.2,\n          mr: 1.2,\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            visible: isDataLoading,\n            inline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n          className: classes.arrow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          noWrap: true,\n          className: classes.title,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          \"data-testid\": \"accordion-actions\",\n          children: utils.generic.isValidArray(actions, true) && actions.map(function (action) {\n            var isValid = Boolean(action.icon || action.text);\n            var isIcon = isValid && Boolean(action.icon && !action.text);\n            var isText = isValid && Boolean(action.text);\n            var hasOnClick = utils.generic.isFunction(action.onClick);\n            var IconComponent = isIcon ? action.icon : null; // skip if action doesn't have an onClick method\n\n            if (!hasOnClick) return null; // render icon\n\n            if (isIcon) {\n              return /*#__PURE__*/_jsxDEV(IconComponent, {\n                color: action.color || 'secondary',\n                className: classnames(classes.actionsIcon),\n                onClick: function onClick(e) {\n                  return action.onClick(e, action.id);\n                }\n              }, action.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, _this);\n            } // render text link\n\n\n            if (isText) {\n              var _action$nestedClasses, _action$nestedClasses2;\n\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [isDataLoading && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    m: 0.5,\n                    ml: 0.5,\n                    children: /*#__PURE__*/_jsxDEV(Loader, {\n                      visible: isDataLoading,\n                      inline: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    text: action.text,\n                    icon: isDataLoading ? null : action.icon,\n                    iconPosition: action.iconPosition,\n                    color: action.color || 'secondary',\n                    handleClick: function handleClick(e) {\n                      return action.onClick(e, action.id);\n                    },\n                    nestedClasses: {\n                      link: classnames(classes.actionsText, (_action$nestedClasses = action.nestedClasses) === null || _action$nestedClasses === void 0 ? void 0 : _action$nestedClasses.link),\n                      icon: classnames((_action$nestedClasses2 = action.nestedClasses) === null || _action$nestedClasses2 === void 0 ? void 0 : _action$nestedClasses2.icon)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 23\n                }, _this)]\n              }, action.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, _this);\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n      className: classes.details,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = AccordionView;\nAccordionView.displayName = \"AccordionView\";\nAccordionView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AccordionView\",\n  \"props\": {\n    \"icon\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"density\": {\n      \"defaultValue\": {\n        \"value\": \"'default'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'compact'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'default'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'comfortable'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDataLoading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"testid\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"defaultHeader\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"boxed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"expanded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"icon\": {\n              \"name\": \"object\",\n              \"required\": false\n            },\n            \"text\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"color\": {\n              \"name\": \"enum\",\n              \"value\": [{\n                \"value\": \"'primary'\",\n                \"computed\": false\n              }, {\n                \"value\": \"'secondary'\",\n                \"computed\": false\n              }, {\n                \"value\": \"'neutral'\",\n                \"computed\": false\n              }],\n              \"required\": false\n            },\n            \"onClick\": {\n              \"name\": \"func\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"node\"\n          }\n        }, {\n          \"name\": \"node\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Accordion\\\\Accordion.view.js\"] = {\n    name: \"AccordionView\",\n    docgenInfo: AccordionView.__docgenInfo,\n    path: \"src\\\\components\\\\Accordion\\\\Accordion.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Accordion/Accordion.view.js"],"names":["React","PropTypes","classnames","styles","Link","Loader","utils","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","Grid","Box","KeyboardArrowDownIcon","AccordionView","propTypes","title","node","icon","bool","boxed","expanded","isDataLoading","density","oneOf","actions","arrayOf","shape","id","string","isRequired","object","text","color","onClick","func","testid","onChange","children","oneOfType","defaultProps","defaultHeader","classes","name","blank","panel","root","summary","content","summaryContent","header","customHeader","arrow","generic","isValidArray","map","action","isValid","Boolean","isIcon","isText","hasOnClick","isFunction","IconComponent","actionsIcon","e","iconPosition","link","actionsText","nestedClasses","details"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,gBAAhC,EAAkDC,gBAAlD,EAAoEC,UAApE,EAAgFC,IAAhF,EAAsFC,GAAtF,QAAiG,mBAAjG;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAEhB,SAAS,CAACiB,IADO;AAExBC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,IAFQ;AAGxBC,EAAAA,KAAK,EAAEpB,SAAS,CAACmB,IAHO;AAIxBE,EAAAA,QAAQ,EAAErB,SAAS,CAACmB,IAJI;AAKxBG,EAAAA,aAAa,EAAEtB,SAAS,CAACmB,IALD;AAMxBI,EAAAA,OAAO,EAAEvB,SAAS,CAACwB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,aAAvB,CAAhB,CANe;AAOxBC,EAAAA,OAAO,EAAEzB,SAAS,CAAC0B,OAAV,CACP1B,SAAS,CAAC2B,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAE5B,SAAS,CAAC6B,MAAV,CAAiBC,UADP;AAEdZ,IAAAA,IAAI,EAAElB,SAAS,CAAC+B,MAFF;AAGdC,IAAAA,IAAI,EAAEhC,SAAS,CAAC6B,MAHF;AAIdI,IAAAA,KAAK,EAAEjC,SAAS,CAACwB,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,CAAhB,CAJO;AAKdU,IAAAA,OAAO,EAAElC,SAAS,CAACmC,IAAV,CAAeL;AALV,GAAhB,CADO,CAPe;AAgBxBM,EAAAA,MAAM,EAAEpC,SAAS,CAAC6B,MAhBM;AAiBxBQ,EAAAA,QAAQ,EAAErC,SAAS,CAACmC,IAjBI;AAkBxBG,EAAAA,QAAQ,EAAEtC,SAAS,CAACuC,SAAV,CAAoB,CAACvC,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAACiB,IAA5B,CAAD,EAAoCjB,SAAS,CAACiB,IAA9C,CAApB,EAAyEa;AAlB3D,CAA1B;AAqBAhB,aAAa,CAAC0B,YAAd,GAA6B;AAC3BtB,EAAAA,IAAI,EAAE,IADqB;AAE3BK,EAAAA,OAAO,EAAE,SAFkB;AAG3BD,EAAAA,aAAa,EAAE,KAHY;AAI3Bc,EAAAA,MAAM,EAAE,EAJmB;AAK3BK,EAAAA,aAAa,EAAE;AALY,CAA7B;AAQA,OAAO,SAAS3B,aAAT,OAYJ;AAAA;;AAAA,MAXDE,KAWC,QAXDA,KAWC;AAAA,MAVDE,IAUC,QAVDA,IAUC;AAAA,MATDE,KASC,QATDA,KASC;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,OAMC,QANDA,OAMC;AAAA,MALDE,OAKC,QALDA,OAKC;AAAA,MAJDW,MAIC,QAJDA,MAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDG,aACC,QADDA,aACC;AACD,MAAMC,OAAO,GAAGpC,UAAU,CAACJ,MAAD,EAAS;AAAEyC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAA0C;AAAEC,IAAAA,KAAK,EAAE,CAACxB,KAAV;AAAiBG,IAAAA,OAAO,EAAPA;AAAjB,GAA1C,CAAhB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEF,QAArB;AAA+B,IAAA,QAAQ,EAAEgB,QAAzC;AAAmD,IAAA,SAAS,EAAEK,OAAO,CAACG,KAAtE;AAA6E,sCAAyBT,MAAM,cAAOA,MAAP,IAAkB,EAAjD,CAA7E;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAE;AACPU,QAAAA,IAAI,EAAE7C,UAAU,CAACyC,OAAO,CAACK,OAAT,CADT;AAEPC,QAAAA,OAAO,EAAE/C,UAAU,CAACyC,OAAO,CAACO,cAAT;AAFZ,OADX;AAAA,6BAME;AAAK,QAAA,SAAS,EAAER,aAAa,GAAGC,OAAO,CAACQ,MAAX,GAAoBR,OAAO,CAACS,YAAzD;AAAA,mBACGjC,IAAI,KACFI,aAAa,gBACZ,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,GAAR;AAAa,UAAA,EAAE,EAAE,GAAjB;AAAsB,UAAA,EAAE,EAAE,GAA1B;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,aAAjB;AAAgC,YAAA,MAAM;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADY,gBAKZ,QAAC,qBAAD;AAAuB,UAAA,SAAS,EAAEoB,OAAO,CAACU;AAA1C;AAAA;AAAA;AAAA;AAAA,gBANC,CADP,eAUE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,MAAM,MAA/B;AAAgC,UAAA,SAAS,EAAEV,OAAO,CAAC1B,KAAnD;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE;AAAK,UAAA,SAAS,EAAE0B,OAAO,CAACjB,OAAxB;AAAiC,yBAAY,mBAA7C;AAAA,oBACGpB,KAAK,CAACgD,OAAN,CAAcC,YAAd,CAA2B7B,OAA3B,EAAoC,IAApC,KACCA,OAAO,CAAC8B,GAAR,CAAY,UAACC,MAAD,EAAY;AACtB,gBAAMC,OAAO,GAAGC,OAAO,CAACF,MAAM,CAACtC,IAAP,IAAesC,MAAM,CAACxB,IAAvB,CAAvB;AACA,gBAAM2B,MAAM,GAAGF,OAAO,IAAIC,OAAO,CAACF,MAAM,CAACtC,IAAP,IAAe,CAACsC,MAAM,CAACxB,IAAxB,CAAjC;AACA,gBAAM4B,MAAM,GAAGH,OAAO,IAAIC,OAAO,CAACF,MAAM,CAACxB,IAAR,CAAjC;AACA,gBAAM6B,UAAU,GAAGxD,KAAK,CAACgD,OAAN,CAAcS,UAAd,CAAyBN,MAAM,CAACtB,OAAhC,CAAnB;AACA,gBAAM6B,aAAa,GAAGJ,MAAM,GAAGH,MAAM,CAACtC,IAAV,GAAiB,IAA7C,CALsB,CAOtB;;AACA,gBAAI,CAAC2C,UAAL,EAAiB,OAAO,IAAP,CARK,CAUtB;;AACA,gBAAIF,MAAJ,EAAY;AACV,kCACE,QAAC,aAAD;AAEE,gBAAA,KAAK,EAAEH,MAAM,CAACvB,KAAP,IAAgB,WAFzB;AAGE,gBAAA,SAAS,EAAEhC,UAAU,CAACyC,OAAO,CAACsB,WAAT,CAHvB;AAIE,gBAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,yBAAOT,MAAM,CAACtB,OAAP,CAAe+B,CAAf,EAAkBT,MAAM,CAAC5B,EAAzB,CAAP;AAAA;AAJX,iBACO4B,MAAM,CAAC5B,EADd;AAAA;AAAA;AAAA;AAAA,uBADF;AAQD,aApBqB,CAsBtB;;;AACA,gBAAIgC,MAAJ,EAAY;AAAA;;AACV,kCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAA,2BACGtC,aAAa,iBACZ,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACE,QAAC,GAAD;AAAK,oBAAA,CAAC,EAAE,GAAR;AAAa,oBAAA,EAAE,EAAE,GAAjB;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAEA,aAAjB;AAAgC,sBAAA,MAAM;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAQE,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAA,yCACE,QAAC,IAAD;AACE,oBAAA,IAAI,EAAEkC,MAAM,CAACxB,IADf;AAEE,oBAAA,IAAI,EAAEV,aAAa,GAAG,IAAH,GAAUkC,MAAM,CAACtC,IAFtC;AAGE,oBAAA,YAAY,EAAEsC,MAAM,CAACU,YAHvB;AAIE,oBAAA,KAAK,EAAEV,MAAM,CAACvB,KAAP,IAAgB,WAJzB;AAKE,oBAAA,WAAW,EAAE,qBAACgC,CAAD;AAAA,6BAAOT,MAAM,CAACtB,OAAP,CAAe+B,CAAf,EAAkBT,MAAM,CAAC5B,EAAzB,CAAP;AAAA,qBALf;AAME,oBAAA,aAAa,EAAE;AACbuC,sBAAAA,IAAI,EAAElE,UAAU,CAACyC,OAAO,CAAC0B,WAAT,2BAAsBZ,MAAM,CAACa,aAA7B,0DAAsB,sBAAsBF,IAA5C,CADH;AAEbjD,sBAAAA,IAAI,EAAEjB,UAAU,2BAACuD,MAAM,CAACa,aAAR,2DAAC,uBAAsBnD,IAAvB;AAFH;AANjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBARF;AAAA,iBAAqBsC,MAAM,CAAC5B,EAA5B;AAAA;AAAA;AAAA;AAAA,uBADF;AAwBD;;AAED,mBAAO,IAAP;AACD,WAnDD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,eA8EE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEc,OAAO,CAAC4B,OAArC;AAAA,gBAA+ChC;AAA/C;AAAA;AAAA;AAAA;AAAA,YA9EF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;KAjGexB,a;AAAAA,a","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './Accordion.styles';\r\nimport { Link, Loader } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Accordion, AccordionDetails, AccordionSummary, Typography, Grid, Box } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nAccordionView.propTypes = {\r\n  title: PropTypes.node,\r\n  icon: PropTypes.bool,\r\n  boxed: PropTypes.bool,\r\n  expanded: PropTypes.bool,\r\n  isDataLoading: PropTypes.bool,\r\n  density: PropTypes.oneOf(['compact', 'default', 'comfortable']),\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      icon: PropTypes.object,\r\n      text: PropTypes.string,\r\n      color: PropTypes.oneOf(['primary', 'secondary', 'neutral']),\r\n      onClick: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n  testid: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n};\r\n\r\nAccordionView.defaultProps = {\r\n  icon: true,\r\n  density: 'default',\r\n  isDataLoading: false,\r\n  testid: '',\r\n  defaultHeader: true,\r\n};\r\n\r\nexport function AccordionView({\r\n  title,\r\n  icon,\r\n  boxed,\r\n  expanded,\r\n  isDataLoading,\r\n  density,\r\n  actions,\r\n  testid,\r\n  onChange,\r\n  children,\r\n  defaultHeader,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Accordion' })({ blank: !boxed, density });\r\n\r\n  return (\r\n    <Accordion expanded={expanded} onChange={onChange} className={classes.panel} data-testid={`accordion${testid ? `-${testid}` : ''}`}>\r\n      <AccordionSummary\r\n        classes={{\r\n          root: classnames(classes.summary),\r\n          content: classnames(classes.summaryContent),\r\n        }}\r\n      >\r\n        <div className={defaultHeader ? classes.header : classes.customHeader}>\r\n          {icon &&\r\n            (isDataLoading ? (\r\n              <Box m={0.5} ml={1.2} mr={1.2}>\r\n                <Loader visible={isDataLoading} inline />\r\n              </Box>\r\n            ) : (\r\n              <KeyboardArrowDownIcon className={classes.arrow} />\r\n            ))}\r\n\r\n          <Typography variant=\"h4\" noWrap className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.actions} data-testid=\"accordion-actions\">\r\n            {utils.generic.isValidArray(actions, true) &&\r\n              actions.map((action) => {\r\n                const isValid = Boolean(action.icon || action.text);\r\n                const isIcon = isValid && Boolean(action.icon && !action.text);\r\n                const isText = isValid && Boolean(action.text);\r\n                const hasOnClick = utils.generic.isFunction(action.onClick);\r\n                const IconComponent = isIcon ? action.icon : null;\r\n\r\n                // skip if action doesn't have an onClick method\r\n                if (!hasOnClick) return null;\r\n\r\n                // render icon\r\n                if (isIcon) {\r\n                  return (\r\n                    <IconComponent\r\n                      key={action.id}\r\n                      color={action.color || 'secondary'}\r\n                      className={classnames(classes.actionsIcon)}\r\n                      onClick={(e) => action.onClick(e, action.id)}\r\n                    />\r\n                  );\r\n                }\r\n\r\n                // render text link\r\n                if (isText) {\r\n                  return (\r\n                    <Grid container key={action.id}>\r\n                      {isDataLoading && (\r\n                        <Grid item>\r\n                          <Box m={0.5} ml={0.5}>\r\n                            <Loader visible={isDataLoading} inline />\r\n                          </Box>\r\n                        </Grid>\r\n                      )}\r\n                      <Grid item>\r\n                        <Link\r\n                          text={action.text}\r\n                          icon={isDataLoading ? null : action.icon}\r\n                          iconPosition={action.iconPosition}\r\n                          color={action.color || 'secondary'}\r\n                          handleClick={(e) => action.onClick(e, action.id)}\r\n                          nestedClasses={{\r\n                            link: classnames(classes.actionsText, action.nestedClasses?.link),\r\n                            icon: classnames(action.nestedClasses?.icon),\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                }\r\n\r\n                return null;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </AccordionSummary>\r\n\r\n      <AccordionDetails className={classes.details}>{children}</AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}