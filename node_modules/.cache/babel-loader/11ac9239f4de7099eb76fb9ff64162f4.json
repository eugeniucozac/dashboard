{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\CreateAdhocTask\\\\CreateAdhocTask.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { EnterAdHockDetails, CreateAdhocUploadDocuments, ConfrmCreateAdhock } from 'modules';\nimport styles from './CreateAdhocTask.style';\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nCreateAdhocTaskView.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n  handleStep: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  steps: PropTypes.func.isRequired,\n  progress: PropTypes.number.isRequired,\n  formsStatus: PropTypes.array.isRequired,\n  handleSkipUpload: PropTypes.func.isRequired,\n  isNextSteppedAllowed: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  claim: PropTypes.object.isRequired,\n  handleFormStatus: PropTypes.func.isRequired,\n  reminderList: PropTypes.array.isRequired\n};\nexport default function CreateAdhocTaskView(_ref) {\n  var _this = this;\n\n  var activeStep = _ref.activeStep,\n      handleStep = _ref.handleStep,\n      handleNext = _ref.handleNext,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      formsStatus = _ref.formsStatus,\n      handleSkipUpload = _ref.handleSkipUpload,\n      isNextSteppedAllowed = _ref.isNextSteppedAllowed,\n      handleCancel = _ref.handleCancel,\n      handleBack = _ref.handleBack,\n      handleSubmit = _ref.handleSubmit,\n      claim = _ref.claim,\n      handleFormStatus = _ref.handleFormStatus,\n      reminderList = _ref.reminderList;\n  var classes = makeStyles(styles, {\n    name: 'CreateAdhocTask'\n  })();\n\n  var isStepCompleted = function isStepCompleted(index) {\n    var _formsStatus$index;\n\n    return (formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus$index = formsStatus[index]) === null || _formsStatus$index === void 0 ? void 0 : _formsStatus$index.isSubmitted) === true;\n  };\n\n  var stepContent = function stepContent(index) {\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(EnterAdHockDetails, {\n          handleNext: handleNext,\n          handleSkipUpload: handleSkipUpload,\n          handleCancel: handleCancel,\n          claim: claim,\n          handleFormStatus: handleFormStatus,\n          reminderList: reminderList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CreateAdhocUploadDocuments, {\n          handleBack: handleBack,\n          handleNext: handleNext,\n          handleCancel: handleCancel,\n          activeStep: activeStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(ConfrmCreateAdhock, {\n          handleBack: handleBack,\n          handleCancel: handleCancel,\n          handleSubmit: handleSubmit,\n          activeStep: activeStep,\n          claim: claim,\n          reminderList: reminderList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(EnterAdHockDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      \"data-testid\": \"LinearStepper-AdHockTask\",\n      classes: {\n        root: classes.stepper\n      },\n      children: steps === null || steps === void 0 ? void 0 : steps.map(function (label, index) {\n        var stepProps = {};\n\n        if (isStepCompleted(index)) {\n          stepProps.completed = index === activeStep ? false : true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, _objectSpread(_objectSpread({\n          onClick: function onClick() {\n            return handleStep(index);\n          }\n        }, stepProps), {}, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: isNextSteppedAllowed(index) ? classes.iconContainerCompleted : classes.iconContainer\n              }\n            },\n            children: label === null || label === void 0 ? void 0 : label.form\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, _this)\n        }), label === null || label === void 0 ? void 0 : label.form, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: stepContent(activeStep)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateAdhocTaskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdhocTaskView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/CreateAdhocTask/CreateAdhocTask.view.js"],"names":["React","PropTypes","EnterAdHockDetails","CreateAdhocUploadDocuments","ConfrmCreateAdhock","styles","LinearProgress","Stepper","Step","StepLabel","makeStyles","CreateAdhocTaskView","propTypes","activeStep","number","isRequired","handleStep","func","handleNext","steps","progress","formsStatus","array","handleSkipUpload","isNextSteppedAllowed","bool","handleCancel","handleBack","handleSubmit","claim","object","handleFormStatus","reminderList","classes","name","isStepCompleted","index","isSubmitted","stepContent","root","stepper","map","label","stepProps","completed","iconContainerCompleted","iconContainer","form","linearProgress","container"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { EnterAdHockDetails, CreateAdhocUploadDocuments, ConfrmCreateAdhock } from 'modules';\r\n\r\nimport styles from './CreateAdhocTask.style';\r\n\r\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\r\n\r\nCreateAdhocTaskView.propTypes = {\r\n  activeStep: PropTypes.number.isRequired,\r\n  handleStep: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  steps: PropTypes.func.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  formsStatus: PropTypes.array.isRequired,\r\n  handleSkipUpload: PropTypes.func.isRequired,\r\n  isNextSteppedAllowed: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  claim: PropTypes.object.isRequired,\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n  reminderList: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function CreateAdhocTaskView({\r\n  activeStep,\r\n  handleStep,\r\n  handleNext,\r\n  steps,\r\n  progress,\r\n  formsStatus,\r\n  handleSkipUpload,\r\n  isNextSteppedAllowed,\r\n  handleCancel,\r\n  handleBack,\r\n  handleSubmit,\r\n  claim,\r\n  handleFormStatus,\r\n  reminderList,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdhocTask' })();\r\n\r\n  const isStepCompleted = (index) => {\r\n    return formsStatus?.[index]?.isSubmitted === true;\r\n  };\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <EnterAdHockDetails\r\n            handleNext={handleNext}\r\n            handleSkipUpload={handleSkipUpload}\r\n            handleCancel={handleCancel}\r\n            claim={claim}\r\n            handleFormStatus={handleFormStatus}\r\n            reminderList={reminderList}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <CreateAdhocUploadDocuments handleBack={handleBack} handleNext={handleNext} handleCancel={handleCancel} activeStep={activeStep} />\r\n        );\r\n      case 2:\r\n        return (\r\n          <ConfrmCreateAdhock\r\n            handleBack={handleBack}\r\n            handleCancel={handleCancel}\r\n            handleSubmit={handleSubmit}\r\n            activeStep={activeStep}\r\n            claim={claim}\r\n            reminderList={reminderList}\r\n          />\r\n        );\r\n      default:\r\n        return <EnterAdHockDetails />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stepper alternativeLabel activeStep={activeStep} data-testid=\"LinearStepper-AdHockTask\" classes={{ root: classes.stepper }}>\r\n        {steps?.map((label, index) => {\r\n          const stepProps = {};\r\n          if (isStepCompleted(index)) {\r\n            stepProps.completed = index === activeStep ? false : true;\r\n          }\r\n          return (\r\n            <Step key={label?.form} onClick={() => handleStep(index)} {...stepProps}>\r\n              <StepLabel\r\n                StepIconProps={{\r\n                  classes: {\r\n                    root: isNextSteppedAllowed(index) ? classes.iconContainerCompleted : classes.iconContainer,\r\n                  },\r\n                }}\r\n              >\r\n                {label?.form}\r\n              </StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      <div className={classes.container}>{stepContent(activeStep)}</div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}