{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\BulkUpdateLayer\\\\BulkUpdateLayer.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport get from 'lodash/get'; // app\n\nimport styles from './BulkUpdateLayer.styles';\nimport { Button, FormContainer, FormGrid, FormFields, FormActions, FormCheckbox, FormSelect, FormText, Translate, FormAutocompleteMui, FormDate } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nBulkUpdateLayerView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  isBulkLayer: PropTypes.bool\n};\nexport function BulkUpdateLayerView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      isBulkLayer = _ref.isBulkLayer;\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var isDelete = Boolean(watch('delete'));\n  var classes = makeStyles(styles, {\n    name: 'BulkUpdateLayer'\n  })({\n    isDeleteChecked: isDelete\n  });\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n  submit.label = isDelete ? /*#__PURE__*/_jsxDEV(Translate, {\n    label: \"app.delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 29\n  }, this) : submit.label;\n  submit.danger = isDelete;\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  var isSubmitDisabled = !isDelete && !formState.isDirty;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      \"data-testid\": \"form-bulk-update-layer\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [!isBulkLayer && /*#__PURE__*/_jsxDEV(Collapse, {\n          in: !isDelete,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            pb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'statusId', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 9,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'uniqueMarketReference', control)), {}, {\n                  error: get(errors, 'uniqueMarketReference.id')\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'section', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                nestedClasses: {\n                  root: classes.isoCode\n                },\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'isoCode', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'premium', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'written', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'quoteDate', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'validUntilDate', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'subjectivities', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), isBulkLayer && /*#__PURE__*/_jsxDEV(Collapse, {\n          in: !isDelete,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            pb: 1.5,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'isoCode', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'delete', control, errors)), {}, {\n          nestedClasses: {\n            root: classes.checkbox\n          },\n          register: register,\n          watch: watch\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isDelete,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            pt: 1.5,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'deleteConfirm', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: onCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || isSubmitDisabled,\n          color: \"primary\",\n          danger: submit.danger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BulkUpdateLayerView, \"3IGR9IlnDng3xT0r4bCvHCa638k=\", false, function () {\n  return [useForm];\n});\n\n_c = BulkUpdateLayerView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BulkUpdateLayerView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/BulkUpdateLayer/BulkUpdateLayer.view.js"],"names":["React","PropTypes","useForm","yupResolver","get","styles","Button","FormContainer","FormGrid","FormFields","FormActions","FormCheckbox","FormSelect","FormText","Translate","FormAutocompleteMui","FormDate","utils","makeStyles","Box","Collapse","BulkUpdateLayerView","propTypes","fields","array","actions","isBulkLayer","bool","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","register","watch","reset","errors","handleSubmit","formState","isDelete","Boolean","classes","name","isDeleteChecked","cancel","find","action","submit","label","danger","onCancel","generic","isFunction","handler","onSubmit","data","isSubmitDisabled","isDirty","root","getFieldProps","isoCode","checkbox","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './BulkUpdateLayer.styles';\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormGrid,\r\n  FormFields,\r\n  FormActions,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  FormText,\r\n  Translate,\r\n  FormAutocompleteMui,\r\n  FormDate,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\r\n\r\nBulkUpdateLayerView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  isBulkLayer: PropTypes.bool,\r\n};\r\n\r\nexport function BulkUpdateLayerView({ fields, actions, isBulkLayer }) {\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, register, watch, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const isDelete = Boolean(watch('delete'));\r\n  const classes = makeStyles(styles, { name: 'BulkUpdateLayer' })({ isDeleteChecked: isDelete });\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  submit.label = isDelete ? <Translate label=\"app.delete\" /> : submit.label;\r\n  submit.danger = isDelete;\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  const isSubmitDisabled = !isDelete && !formState.isDirty;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} data-testid=\"form-bulk-update-layer\">\r\n        <FormFields type=\"dialog\">\r\n          {!isBulkLayer && (\r\n            <Collapse in={!isDelete}>\r\n              <Box pb={1.5}>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={5}>\r\n                    <FormSelect {...utils.form.getFieldProps(fields, 'statusId', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={9}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'uniqueMarketReference', control)}\r\n                      error={get(errors, 'uniqueMarketReference.id')}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'section', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={3} nestedClasses={{ root: classes.isoCode }}>\r\n                    <FormSelect {...utils.form.getFieldProps(fields, 'isoCode', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'premium', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'written', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'quoteDate', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'validUntilDate', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'subjectivities', control, errors)} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </Collapse>\r\n          )}\r\n          {isBulkLayer && (\r\n            <Collapse in={!isDelete}>\r\n              <Box pb={1.5}>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormSelect {...utils.form.getFieldProps(fields, 'isoCode', control, errors)} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </Collapse>\r\n          )}\r\n          <FormCheckbox\r\n            {...utils.form.getFieldProps(fields, 'delete', control, errors)}\r\n            nestedClasses={{ root: classes.checkbox }}\r\n            register={register}\r\n            watch={watch}\r\n          />\r\n          <Collapse in={isDelete}>\r\n            <Box pt={1.5}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'deleteConfirm', control, errors)} />\r\n            </Box>\r\n          </Collapse>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={onCancel} />}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || isSubmitDisabled}\r\n              color=\"primary\"\r\n              danger={submit.danger}\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}