{"ast":null,"code":"import { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var postSaveTaskProcessingAssignees = function postSaveTaskProcessingAssignees(data) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postSaveTaskProcessingAssignees'\n    };\n    dispatch(postSaveTaskProcessingAssigneesRequest(data));\n    dispatch(addLoader('postSaveTaskProcessingAssignees'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/process/task/saveAssignees',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json, true);\n    }).then(function (data) {\n      dispatch(postSaveTaskProcessingAssigneesSuccess(data.data));\n      dispatch(enqueueNotification(data.message, 'success'));\n      dispatch(hideModal());\n      return data;\n    }).catch(function (error) {\n      dispatch(postSaveTaskProcessingAssigneesFailure(error, defaultError));\n      dispatch(enqueueNotification(error.json.message, 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('postSaveTaskProcessingAssignees'));\n    });\n  };\n};\nexport var postSaveTaskProcessingAssigneesRequest = function postSaveTaskProcessingAssigneesRequest(data) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_REQUEST',\n    payload: data\n  };\n};\nexport var postSaveTaskProcessingAssigneesSuccess = function postSaveTaskProcessingAssigneesSuccess(params) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_SUCCESS',\n    payload: params\n  };\n};\nexport var postSaveTaskProcessingAssigneesFailure = function postSaveTaskProcessingAssigneesFailure(error) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postSaveTaskProcessingAssignees.js"],"names":["addLoader","removeLoader","enqueueNotification","hideModal","authLogout","utils","postSaveTaskProcessingAssignees","data","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","postSaveTaskProcessingAssigneesRequest","api","post","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","postSaveTaskProcessingAssigneesSuccess","message","catch","error","postSaveTaskProcessingAssigneesFailure","handleUnauthorized","finally","type","payload","params"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,mBAAlC,EAAuDC,SAAvD,EAAkEC,UAAlE,QAAoF,QAApF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC/E;AAD+E,oBAEpBA,QAAQ,EAFY;AAAA,QAE/DC,IAF+D,aAEvEC,IAFuE,CAE/DD,IAF+D;AAAA,QAErCE,QAFqC,aAEvDC,MAFuD,CAE7CC,IAF6C,CAErCF,QAFqC;;AAI/E,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,sCAAsC,CAACV,IAAD,CAAvC,CAAR;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAAC,iCAAD,CAAV,CAAR;AAEA,WAAOK,KAAK,CAACa,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADR;AAEJT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,UAFf;AAGJC,MAAAA,IAAI,EAAE,qCAHF;AAIJhB,MAAAA,IAAI,EAAEA;AAJF,KADD,EAOJiB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcpB,KAAK,CAACa,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUtB,KAAK,CAACa,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,EAA8B,IAA9B,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACjB,IAAD,EAAU;AACdC,MAAAA,QAAQ,CAACqB,sCAAsC,CAACtB,IAAI,CAACA,IAAN,CAAvC,CAAR;AACAC,MAAAA,QAAQ,CAACN,mBAAmB,CAACK,IAAI,CAACuB,OAAN,EAAe,SAAf,CAApB,CAAR;AACAtB,MAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACA,aAAOI,IAAP;AACD,KAdI,EAeJwB,KAfI,CAeE,UAACC,KAAD,EAAW;AAChBxB,MAAAA,QAAQ,CAACyB,sCAAsC,CAACD,KAAD,EAAQjB,YAAR,CAAvC,CAAR;AACAP,MAAAA,QAAQ,CAACN,mBAAmB,CAAC8B,KAAK,CAACL,IAAN,CAAWG,OAAZ,EAAqB,OAArB,CAApB,CAAR;AACAzB,MAAAA,KAAK,CAACa,GAAN,CAAUgB,kBAAV,CAA6BF,KAA7B,EAAoCxB,QAApC,EAA8CJ,UAA9C;AACA,aAAO4B,KAAP;AACD,KApBI,EAqBJG,OArBI,CAqBI,YAAM;AACb3B,MAAAA,QAAQ,CAACP,YAAY,CAAC,iCAAD,CAAb,CAAR;AACD,KAvBI,CAAP;AAwBD,GAnC8C;AAAA,CAAxC;AAqCP,OAAO,IAAMgB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAACV,IAAD,EAAU;AAC9D,SAAO;AACL6B,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAE9B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMsB,sCAAsC,GAAG,SAAzCA,sCAAyC,CAACS,MAAD,EAAY;AAChE,SAAO;AACLF,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAML,sCAAsC,GAAG,SAAzCA,sCAAyC,CAACD,KAAD,EAAW;AAC/D,SAAO;AACLI,IAAAA,IAAI,EAAE,6CADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postSaveTaskProcessingAssignees = (data) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postSaveTaskProcessingAssignees',\r\n  };\r\n\r\n  dispatch(postSaveTaskProcessingAssigneesRequest(data));\r\n  dispatch(addLoader('postSaveTaskProcessingAssignees'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/process/task/saveAssignees',\r\n      data: data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json, true))\r\n    .then((data) => {\r\n      dispatch(postSaveTaskProcessingAssigneesSuccess(data.data));\r\n      dispatch(enqueueNotification(data.message, 'success'));\r\n      dispatch(hideModal());\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(postSaveTaskProcessingAssigneesFailure(error, defaultError));\r\n      dispatch(enqueueNotification(error.json.message, 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postSaveTaskProcessingAssignees'));\r\n    });\r\n};\r\n\r\nexport const postSaveTaskProcessingAssigneesRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postSaveTaskProcessingAssigneesSuccess = (params) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_SUCCESS',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const postSaveTaskProcessingAssigneesFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_SAVE_ASSIGNEES_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}