{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './AddEditUmr.styles';\nimport { ErrorMessage, Button, FilterChips, FormContainer, FormFields, FormActions, FormGrid, FormText, Translate } from 'components';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditUmrView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  list: PropTypes.array,\n  query: PropTypes.string,\n  valid: PropTypes.bool,\n  error: PropTypes.string,\n  refs: PropTypes.object,\n  handlers: PropTypes.object\n};\nexport function AddEditUmrView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      list = _ref.list,\n      query = _ref.query,\n      valid = _ref.valid,\n      error = _ref.error,\n      refs = _ref.refs,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'AddEditUmr'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var getErrorObj = function getErrorObj() {\n    if (query && !valid) {\n      return {\n        message: utils.string.t('openingMemo.addEditUmr.errorAlreadyTaken'),\n        type: 'required'\n      };\n    }\n  };\n\n  var isFormValid = query && query.length > 3 && valid;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"form-addEditUmr\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'umr')), {}, {\n                error: getErrorObj(),\n                hint: utils.string.t('openingMemo.addEditUmr.hintNotLongEnough'),\n                control: control\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                refProp: refs.btn,\n                text: utils.string.t('app.add'),\n                disabled: !isFormValid || formState.isSubmitting,\n                color: \"secondary\",\n                onClick: function onClick() {\n                  if (!list.includes(query)) {\n                    handlers.add(query);\n                    handlers.reset();\n                    reset();\n                  }\n                },\n                nestedClasses: {\n                  btn: classes.button\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 0.25,\n          mb: 0.75,\n          children: /*#__PURE__*/_jsxDEV(Translate, {\n            variant: \"body1\",\n            label: \"openingMemo.addEditUmr.listCurrentUmr\",\n            className: classes.listTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          error: {\n            message: error\n          },\n          nestedClasses: {\n            root: classes.listError\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FilterChips, {\n          items: list.map(function (l) {\n            return {\n              value: l,\n              label: l\n            };\n          }),\n          handleRemoveItems: handlers.remove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditUmrView, \"yCDKk5UEUNVI77P5VEL+AVTll5Q=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = AddEditUmrView;\nAddEditUmrView.displayName = \"AddEditUmrView\";\nAddEditUmrView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddEditUmrView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"list\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"query\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"valid\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"refs\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.view.js\"] = {\n    name: \"AddEditUmrView\",\n    docgenInfo: AddEditUmrView.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditUmrView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditUmr/AddEditUmr.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","ErrorMessage","Button","FilterChips","FormContainer","FormFields","FormActions","FormGrid","FormText","Translate","useFormActions","utils","makeStyles","Box","AddEditUmrView","propTypes","fields","array","actions","list","query","string","valid","bool","error","refs","object","handlers","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","handleSubmit","formState","cancel","submit","getErrorObj","message","t","type","isFormValid","length","root","handler","getFieldProps","btn","isSubmitting","includes","add","button","listTitle","listError","map","l","value","label","remove"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './AddEditUmr.styles';\r\nimport { ErrorMessage, Button, FilterChips, FormContainer, FormFields, FormActions, FormGrid, FormText, Translate } from 'components';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nAddEditUmrView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  list: PropTypes.array,\r\n  query: PropTypes.string,\r\n  valid: PropTypes.bool,\r\n  error: PropTypes.string,\r\n  refs: PropTypes.object,\r\n  handlers: PropTypes.object,\r\n};\r\n\r\nexport function AddEditUmrView({ fields, actions, list, query, valid, error, refs, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'AddEditUmr' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  const getErrorObj = () => {\r\n    if (query && !valid) {\r\n      return {\r\n        message: utils.string.t('openingMemo.addEditUmr.errorAlreadyTaken'),\r\n        type: 'required',\r\n      };\r\n    }\r\n  };\r\n\r\n  const isFormValid = query && query.length > 3 && valid;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"form-addEditUmr\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              <Box display=\"flex\" alignItems=\"flex-start\">\r\n                <FormText\r\n                  {...utils.form.getFieldProps(fields, 'umr')}\r\n                  error={getErrorObj()}\r\n                  hint={utils.string.t('openingMemo.addEditUmr.hintNotLongEnough')}\r\n                  control={control}\r\n                />\r\n                <Button\r\n                  refProp={refs.btn}\r\n                  text={utils.string.t('app.add')}\r\n                  disabled={!isFormValid || formState.isSubmitting}\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    if (!list.includes(query)) {\r\n                      handlers.add(query);\r\n                      handlers.reset();\r\n                      reset();\r\n                    }\r\n                  }}\r\n                  nestedClasses={{\r\n                    btn: classes.button,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <Box ml={0.25} mb={0.75}>\r\n            <Translate variant=\"body1\" label=\"openingMemo.addEditUmr.listCurrentUmr\" className={classes.listTitle} />\r\n          </Box>\r\n\r\n          {error && <ErrorMessage error={{ message: error }} nestedClasses={{ root: classes.listError }} />}\r\n\r\n          <FilterChips items={list.map((l) => ({ value: l, label: l }))} handleRemoveItems={handlers.remove} />\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}