{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\ModalDialog\\\\ModalDialog.js\",\n    _this = this;\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport styles from './ModalDialog.styles';\nimport * as utils from 'utils';\nimport { Button, Translate } from 'components'; // mui\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ModalDialog = function ModalDialog(props) {\n  var classes = makeStyles(styles, {\n    name: 'Products'\n  })();\n  var visible = props.visible,\n      fullScreen = props.fullScreen,\n      fullWidth = props.fullWidth,\n      enableFullScreen = props.enableFullScreen,\n      maxWidth = props.maxWidth,\n      cancelHandler = props.cancelHandler,\n      disableBackdropClick = props.disableBackdropClick;\n\n  var handleClose = function handleClose(callback) {\n    props.hideModal();\n    utils.generic.isFunction(callback) && callback();\n  };\n\n  var handleFullScreen = function handleFullScreen() {\n    props.fullScreenModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    disableBackdropClick: disableBackdropClick,\n    open: visible,\n    onClose: function onClose() {\n      return cancelHandler ? handleClose(cancelHandler) : handleClose();\n    },\n    fullWidth: fullWidth,\n    fullScreen: fullScreen || props.fullScreen,\n    maxWidth: props.maxWidth,\n    disableAutoFocus: props.disableAutoFocus,\n    \"aria-labelledby\": \"modal-title\",\n    classes: _objectSpread({}, !maxWidth && {\n      paper: classes.paper\n    }),\n    children: [enableFullScreen ? /*#__PURE__*/_jsxDEV(Button, {\n      icon: FullscreenIcon,\n      variant: \"text\",\n      onClick: function onClick() {\n        return handleFullScreen;\n      },\n      nestedClasses: {\n        btn: classes.fullScreen\n      },\n      \"data-testid\": \"modal-fullscreen-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, _this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      icon: CloseIcon,\n      variant: \"text\",\n      onClick: function onClick() {\n        return cancelHandler ? handleClose(cancelHandler) : handleClose();\n      },\n      nestedClasses: {\n        btn: classes.close\n      },\n      \"data-testid\": \"modal-close-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), (props.title || props.titleChildren) && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        disableTypography: true,\n        id: \"modal-title\",\n        children: props.titleChildren ? props.titleChildren : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Translate, {\n            label: props.title,\n            variant: \"h2\",\n            className: classes.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, _this), props.subtitle && /*#__PURE__*/_jsxDEV(Translate, {\n            label: props.subtitle,\n            variant: \"h6\",\n            className: classes.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 36\n          }, _this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.content,\n      children: [props.hint && /*#__PURE__*/_jsxDEV(DialogContentText, {\n        className: classes.hint,\n        children: /*#__PURE__*/_jsxDEV(Translate, {\n          variant: \"body2\",\n          label: props.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, _this), get(props, 'children') ? get(props, 'children') : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), get(props, 'actions', []).length > 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: props.actions.map(function (action, idx) {\n          var btnAction = null;\n\n          if (action.type === 'ok' || action.type === 'cancel') {\n            btnAction = function btnAction() {\n              return handleClose(action.callback);\n            };\n          } else {\n            btnAction = function btnAction() {\n              return action.callback;\n            };\n          }\n\n          return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, btnAction && {\n            onClick: btnAction\n          }), action.variant && {\n            variant: action.variant\n          }), action.color && {\n            color: action.color\n          }), {}, {\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: action.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, _this),\n            \"data-testid\": \"modal-btn-\".concat(action.type)\n          }), idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\nModalDialog.displayName = \"ModalDialog\";\n_c = ModalDialog;\nModalDialog.propTypes = {\n  visible: PropTypes.bool,\n  type: PropTypes.string,\n  props: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    fullWidth: PropTypes.bool,\n    fullScreen: PropTypes.bool,\n    maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    componentProps: PropTypes.object\n  }),\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.string,\n    label: PropTypes.string,\n    variant: PropTypes.string,\n    color: PropTypes.string,\n    callback: PropTypes.func\n  })),\n  hideModal: PropTypes.func.isRequired\n};\nModalDialog.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ModalDialog\",\n  \"props\": {\n    \"visible\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"props\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"title\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"subtitle\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"fullWidth\": {\n            \"name\": \"bool\",\n            \"required\": false\n          },\n          \"fullScreen\": {\n            \"name\": \"bool\",\n            \"required\": false\n          },\n          \"maxWidth\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'xs'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'sm'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'md'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'lg'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'xl'\",\n              \"computed\": false\n            }],\n            \"required\": false\n          },\n          \"componentProps\": {\n            \"name\": \"object\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"type\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"variant\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"color\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"callback\": {\n              \"name\": \"func\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hideModal\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ModalDialog;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\ModalDialog\\\\ModalDialog.js\"] = {\n    name: \"ModalDialog\",\n    docgenInfo: ModalDialog.__docgenInfo,\n    path: \"src\\\\components\\\\ModalDialog\\\\ModalDialog.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalDialog\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/ModalDialog/ModalDialog.js"],"names":["React","Fragment","PropTypes","get","styles","utils","Button","Translate","CloseIcon","FullscreenIcon","makeStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","ModalDialog","props","classes","name","visible","fullScreen","fullWidth","enableFullScreen","maxWidth","cancelHandler","disableBackdropClick","handleClose","callback","hideModal","generic","isFunction","handleFullScreen","fullScreenModal","disableAutoFocus","paper","btn","close","title","titleChildren","subtitle","content","hint","length","actions","map","action","idx","btnAction","type","onClick","variant","color","label","propTypes","bool","string","shape","oneOf","componentProps","object","arrayOf","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ModalDialog.styles';\r\nimport * as utils from 'utils';\r\nimport { Button, Translate } from 'components';\r\n\r\n// mui\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { makeStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core';\r\n\r\nconst ModalDialog = (props) => {\r\n  const classes = makeStyles(styles, { name: 'Products' })();\r\n  const { visible, fullScreen, fullWidth, enableFullScreen, maxWidth, cancelHandler, disableBackdropClick } = props;\r\n\r\n  const handleClose = (callback) => {\r\n    props.hideModal();\r\n    utils.generic.isFunction(callback) && callback();\r\n  };\r\n\r\n  const handleFullScreen = () => {\r\n    props.fullScreenModal();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={disableBackdropClick}\r\n      open={visible}\r\n      onClose={() => (cancelHandler ? handleClose(cancelHandler) : handleClose())}\r\n      fullWidth={fullWidth}\r\n      fullScreen={fullScreen || props.fullScreen}\r\n      maxWidth={props.maxWidth}\r\n      disableAutoFocus={props.disableAutoFocus}\r\n      aria-labelledby=\"modal-title\"\r\n      classes={{\r\n        ...(!maxWidth && { paper: classes.paper }),\r\n      }}\r\n    >\r\n      {enableFullScreen ? (\r\n        <Button\r\n          icon={FullscreenIcon}\r\n          variant=\"text\"\r\n          onClick={() => handleFullScreen}\r\n          nestedClasses={{ btn: classes.fullScreen }}\r\n          data-testid=\"modal-fullscreen-button\"\r\n        />\r\n      ) : null}\r\n\r\n      <Button\r\n        icon={CloseIcon}\r\n        variant=\"text\"\r\n        onClick={() => (cancelHandler ? handleClose(cancelHandler) : handleClose())}\r\n        nestedClasses={{ btn: classes.close }}\r\n        data-testid=\"modal-close-button\"\r\n      />\r\n\r\n      {(props.title || props.titleChildren) && (\r\n        <Fragment>\r\n          <DialogTitle disableTypography id=\"modal-title\">\r\n            {props.titleChildren ? (\r\n              props.titleChildren\r\n            ) : (\r\n              <>\r\n                <Translate label={props.title} variant=\"h2\" className={classes.title} />\r\n                {props.subtitle && <Translate label={props.subtitle} variant=\"h6\" className={classes.subtitle} />}\r\n              </>\r\n            )}\r\n          </DialogTitle>\r\n          <Divider />\r\n        </Fragment>\r\n      )}\r\n\r\n      <DialogContent className={classes.content}>\r\n        {props.hint && (\r\n          <DialogContentText className={classes.hint}>\r\n            <Translate variant=\"body2\" label={props.hint} />\r\n          </DialogContentText>\r\n        )}\r\n\r\n        {get(props, 'children') ? get(props, 'children') : null}\r\n      </DialogContent>\r\n\r\n      {get(props, 'actions', []).length > 0 && (\r\n        <Fragment>\r\n          <Divider />\r\n          <DialogActions>\r\n            {props.actions.map((action, idx) => {\r\n              let btnAction = null;\r\n\r\n              if (action.type === 'ok' || action.type === 'cancel') {\r\n                btnAction = () => handleClose(action.callback);\r\n              } else {\r\n                btnAction = () => action.callback;\r\n              }\r\n\r\n              return (\r\n                <Button\r\n                  key={idx}\r\n                  {...(btnAction && { onClick: btnAction })}\r\n                  {...(action.variant && { variant: action.variant })}\r\n                  {...(action.color && { color: action.color })}\r\n                  text={<Translate label={action.label} />}\r\n                  data-testid={`modal-btn-${action.type}`}\r\n                />\r\n              );\r\n            })}\r\n          </DialogActions>\r\n        </Fragment>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nModalDialog.propTypes = {\r\n  visible: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  props: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    fullScreen: PropTypes.bool,\r\n    maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n    componentProps: PropTypes.object,\r\n  }),\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string,\r\n      label: PropTypes.string,\r\n      variant: PropTypes.string,\r\n      color: PropTypes.string,\r\n      callback: PropTypes.func,\r\n    })\r\n  ),\r\n  hideModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalDialog;\r\n"]},"metadata":{},"sourceType":"module"}