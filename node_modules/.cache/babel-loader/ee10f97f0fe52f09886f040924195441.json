{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ReportingDetails\\\\ReportingDetails.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PowerBIEmbed } from 'powerbi-client-react';\nimport styles from './ReportingDetails.styles'; // app\n\nimport { Layout, SectionHeader, Breadcrumb } from 'components'; // mui\n\nimport { Divider, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReportingDetailsView.propTypes = {\n  reportTitle: PropTypes.string.isRequired,\n  report: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    active: PropTypes.bool\n  })).isRequired\n};\nvar model = {\n  BackgroundType: {\n    Default: 0,\n    Transparent: 1\n  },\n  TokenType: {\n    Add: 0,\n    Embed: 1\n  },\n  DisplayOption: {\n    ActualSize: 2,\n    FitToPage: 0,\n    FitToWidth: 1\n  }\n};\nexport function ReportingDetailsView(_ref) {\n  var reportTitle = _ref.reportTitle,\n      breadcrumbs = _ref.breadcrumbs,\n      report = _ref.report;\n  var classes = makeStyles(styles, {\n    name: 'PowerBiReport'\n  })();\n  var embedConfiguration = {\n    type: 'report',\n    // Supported types: report, dashboard, tile, visual and qna\n    id: report === null || report === void 0 ? void 0 : report.id,\n    embedUrl: report === null || report === void 0 ? void 0 : report.embedUrl,\n    accessToken: report === null || report === void 0 ? void 0 : report.accessToken,\n    // Keep as empty string, null or undefined\n    tokenType: model.TokenType.Embed,\n    pageView: model.DisplayOption.FitToPage,\n    settings: {\n      background: model.BackgroundType.Default,\n      filterPaneEnabled: false,\n      panes: {\n        filters: {\n          expanded: true,\n          visible: true\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      isCentered: true,\n      testid: \"reporting\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: reportTitle,\n          testid: \"reporting_header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), (report === null || report === void 0 ? void 0 : report.accessToken) && (report === null || report === void 0 ? void 0 : report.embedUrl) ? /*#__PURE__*/_jsxDEV(PowerBIEmbed, {\n          embedConfig: embedConfiguration,\n          cssClassName: classes.report\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 54\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ReportingDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportingDetailsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ReportingDetails/ReportingDetails.view.js"],"names":["React","PropTypes","PowerBIEmbed","styles","Layout","SectionHeader","Breadcrumb","Divider","makeStyles","ReportingDetailsView","propTypes","reportTitle","string","isRequired","report","object","breadcrumbs","arrayOf","shape","name","label","link","active","bool","model","BackgroundType","Default","Transparent","TokenType","Add","Embed","DisplayOption","ActualSize","FitToPage","FitToWidth","classes","embedConfiguration","type","id","embedUrl","accessToken","tokenType","pageView","settings","background","filterPaneEnabled","panes","filters","expanded","visible"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PowerBIEmbed } from 'powerbi-client-react';\r\n\r\nimport styles from './ReportingDetails.styles';\r\n// app\r\nimport { Layout, SectionHeader, Breadcrumb } from 'components';\r\n\r\n// mui\r\nimport { Divider, makeStyles } from '@material-ui/core';\r\n\r\nReportingDetailsView.propTypes = {\r\n  reportTitle: PropTypes.string.isRequired,\r\n  report: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n      active: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nconst model = {\r\n  BackgroundType: {\r\n    Default: 0,\r\n    Transparent: 1,\r\n  },\r\n  TokenType: {\r\n    Add: 0,\r\n    Embed: 1,\r\n  },\r\n  DisplayOption: {\r\n    ActualSize: 2,\r\n    FitToPage: 0,\r\n    FitToWidth: 1,\r\n  },\r\n};\r\n\r\nexport function ReportingDetailsView({ reportTitle, breadcrumbs, report }) {\r\n  const classes = makeStyles(styles, { name: 'PowerBiReport' })();\r\n\r\n  const embedConfiguration = {\r\n    type: 'report', // Supported types: report, dashboard, tile, visual and qna\r\n    id: report?.id,\r\n    embedUrl: report?.embedUrl,\r\n    accessToken: report?.accessToken, // Keep as empty string, null or undefined\r\n    tokenType: model.TokenType.Embed,\r\n    pageView: model.DisplayOption.FitToPage,\r\n    settings: {\r\n      background: model.BackgroundType.Default,\r\n      filterPaneEnabled: false,\r\n      panes: {\r\n        filters: {\r\n          expanded: true,\r\n          visible: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n      <Layout isCentered testid=\"reporting\">\r\n        <Layout main>\r\n          <SectionHeader title={reportTitle} testid=\"reporting_header\"></SectionHeader>\r\n          {report?.accessToken && report?.embedUrl ? <PowerBIEmbed embedConfig={embedConfiguration} cssClassName={classes.report} /> : null}\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}