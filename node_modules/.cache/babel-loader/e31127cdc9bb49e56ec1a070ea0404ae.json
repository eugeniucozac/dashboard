{"ast":null,"code":"import * as utils from 'utils';\nexport var getTeamsData = function getTeamsData() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: 'user/refData/organisations'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getTeamsDataSuccess(json.data));\n      return json.data;\n    })[\"catch\"](function (error) {\n      dispatch(getTeamsDataFailure(error, {\n        file: 'stores/administration.actions.getTeamsData'\n      }));\n      return error;\n    });\n  };\n};\nexport var getTeamsDataSuccess = function getTeamsDataSuccess(data) {\n  return {\n    type: 'ADMINISTRATION_TEAMS_DATA_SUCCESS',\n    payload: data\n  };\n};\nexport var getTeamsDataFailure = function getTeamsDataFailure(data) {\n  return {\n    type: 'ADMINISTRATION_TEAMS_DATA_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/administration/administration.actions.getTeamsData.js"],"names":["utils","getTeamsData","dispatch","getState","auth","user","endpoint","config","vars","api","get","token","accessToken","authService","path","then","response","handleResponse","data","handleNewData","json","getTeamsDataSuccess","error","getTeamsDataFailure","file","type","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMpDA,QAAQ,EAN4C;AAAA,QAE9CC,IAF8C,aAEtDC,IAFsD,CAE9CD,IAF8C;AAAA,QAI5CE,QAJ4C,aAGtDC,MAHsD,CAIpDC,IAJoD,CAI5CF,QAJ4C;;AAQxD,WAAON,KAAK,CAACS,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEP,IAAI,CAACQ,WADT;AAEHN,MAAAA,QAAQ,EAAEA,QAAQ,CAACO,WAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAchB,KAAK,CAACS,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUlB,KAAK,CAACS,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdlB,MAAAA,QAAQ,CAACmB,mBAAmB,CAACD,IAAI,CAACF,IAAN,CAApB,CAAR;AACA,aAAOE,IAAI,CAACF,IAAZ;AACD,KAXI,WAYE,UAACI,KAAD,EAAW;AAChBpB,MAAAA,QAAQ,CACNqB,mBAAmB,CAACD,KAAD,EAAQ;AACzBE,QAAAA,IAAI,EAAE;AADmB,OAAR,CADb,CAAR;AAKA,aAAOF,KAAP;AACD,KAnBI,CAAP;AAoBD,GA5B2B;AAAA,CAArB;AA8BP,OAAO,IAAMD,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,IAAD,EAAU;AAC3C,SAAO;AACLO,IAAAA,IAAI,EAAE,mCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACL,IAAD,EAAU;AAC3C,SAAO;AACLO,IAAAA,IAAI,EAAE,mCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\n\r\nexport const getTeamsData = () => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: 'user/refData/organisations',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => utils.api.handleNewData(data))\r\n    .then((json) => {\r\n      dispatch(getTeamsDataSuccess(json.data));\r\n      return json.data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        getTeamsDataFailure(error, {\r\n          file: 'stores/administration.actions.getTeamsData',\r\n        })\r\n      );\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const getTeamsDataSuccess = (data) => {\r\n  return {\r\n    type: 'ADMINISTRATION_TEAMS_DATA_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getTeamsDataFailure = (data) => {\r\n  return {\r\n    type: 'ADMINISTRATION_TEAMS_DATA_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}