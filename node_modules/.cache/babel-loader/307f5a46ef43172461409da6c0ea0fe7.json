{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\Admin\\\\Admin.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './Admin.styles';\nimport { Layout, SectionHeader, Tabs } from 'components';\nimport { AdminUser, AdminOffices, AdminMarkets } from 'modules';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAdminView.propTypes = {\n  handleSelectTab: PropTypes.func.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  isDev: PropTypes.bool.isRequired\n};\nexport function AdminView(_ref) {\n  var handleSelectTab = _ref.handleSelectTab,\n      selectedTab = _ref.selectedTab,\n      isDev = _ref.isDev;\n  var classes = makeStyles(styles, {\n    name: 'Admin'\n  })();\n  var tabs = [{\n    value: 'users',\n    label: utils.string.t('admin.user_plural')\n  }, {\n    value: 'offices',\n    label: utils.string.t('admin.office_plural')\n  }].concat(_toConsumableArray(isDev ? [{\n    value: 'markets',\n    label: utils.string.t('admin.market_plural')\n  }] : []));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    testid: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n        title: utils.string.t('admin.title'),\n        icon: SettingsIcon,\n        testid: \"admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        compact: true,\n        tabs: tabs,\n        onChange: function onChange(tabName) {\n          return handleSelectTab(tabName);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tabContent,\n        children: [selectedTab === 'users' && /*#__PURE__*/_jsxDEV(AdminUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 39\n        }, this), selectedTab === 'offices' && /*#__PURE__*/_jsxDEV(AdminOffices, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 41\n        }, this), selectedTab === 'markets' && /*#__PURE__*/_jsxDEV(AdminMarkets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = AdminView;\nAdminView.displayName = \"AdminView\";\nAdminView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AdminView\",\n  \"props\": {\n    \"handleSelectTab\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isDev\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\Admin\\\\Admin.view.js\"] = {\n    name: \"AdminView\",\n    docgenInfo: AdminView.__docgenInfo,\n    path: \"src\\\\pages\\\\Admin\\\\Admin.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/Admin/Admin.view.js"],"names":["React","PropTypes","styles","Layout","SectionHeader","Tabs","AdminUser","AdminOffices","AdminMarkets","utils","makeStyles","SettingsIcon","AdminView","propTypes","handleSelectTab","func","isRequired","selectedTab","string","isDev","bool","classes","name","tabs","value","label","t","tabName","tabContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,IAAhC,QAA4C,YAA5C;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,YAAlC,QAAsD,SAAtD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,eAAe,EAAEb,SAAS,CAACc,IAAV,CAAeC,UADZ;AAEpBC,EAAAA,WAAW,EAAEhB,SAAS,CAACiB,MAAV,CAAiBF,UAFV;AAGpBG,EAAAA,KAAK,EAAElB,SAAS,CAACmB,IAAV,CAAeJ;AAHF,CAAtB;AAMA,OAAO,SAASJ,SAAT,OAA4D;AAAA,MAAvCE,eAAuC,QAAvCA,eAAuC;AAAA,MAAtBG,WAAsB,QAAtBA,WAAsB;AAAA,MAATE,KAAS,QAATA,KAAS;AACjE,MAAME,OAAO,GAAGX,UAAU,CAACR,MAAD,EAAS;AAAEoB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AAEA,MAAMC,IAAI,IACR;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAEhB,KAAK,CAACS,MAAN,CAAaQ,CAAb,CAAe,mBAAf;AAAzB,GADQ,EAER;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAEhB,KAAK,CAACS,MAAN,CAAaQ,CAAb,CAAe,qBAAf;AAA3B,GAFQ,4BAGJP,KAAK,GAAG,CAAC;AAAEK,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAEhB,KAAK,CAACS,MAAN,CAAaQ,CAAb,CAAe,qBAAf;AAA3B,GAAD,CAAH,GAA0E,EAH3E,EAAV;AAMA,sBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,OAAf;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEjB,KAAK,CAACS,MAAN,CAAaQ,CAAb,CAAe,aAAf,CAAtB;AAAqD,QAAA,IAAI,EAAEf,YAA3D;AAAyE,QAAA,MAAM,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,IAAI,EAAEY,IAApB;AAA0B,QAAA,QAAQ,EAAE,kBAACI,OAAD;AAAA,iBAAab,eAAe,CAACa,OAAD,CAA5B;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACO,UAAxB;AAAA,mBACGX,WAAW,KAAK,OAAhB,iBAA2B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAD9B,EAEGA,WAAW,KAAK,SAAhB,iBAA6B,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFhC,EAGGA,WAAW,KAAK,SAAhB,iBAA6B,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAtBeL,S;AAAAA,S","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './Admin.styles';\r\nimport { Layout, SectionHeader, Tabs } from 'components';\r\nimport { AdminUser, AdminOffices, AdminMarkets } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nAdminView.propTypes = {\r\n  handleSelectTab: PropTypes.func.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  isDev: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function AdminView({ handleSelectTab, selectedTab, isDev }) {\r\n  const classes = makeStyles(styles, { name: 'Admin' })();\r\n\r\n  const tabs = [\r\n    { value: 'users', label: utils.string.t('admin.user_plural') },\r\n    { value: 'offices', label: utils.string.t('admin.office_plural') },\r\n    ...(isDev ? [{ value: 'markets', label: utils.string.t('admin.market_plural') }] : []),\r\n  ];\r\n\r\n  return (\r\n    <Layout testid=\"admin\">\r\n      <Layout main>\r\n        <SectionHeader title={utils.string.t('admin.title')} icon={SettingsIcon} testid=\"admin\" />\r\n        <Tabs compact tabs={tabs} onChange={(tabName) => handleSelectTab(tabName)} />\r\n        <div className={classes.tabContent}>\r\n          {selectedTab === 'users' && <AdminUser />}\r\n          {selectedTab === 'offices' && <AdminOffices />}\r\n          {selectedTab === 'markets' && <AdminMarkets />}\r\n        </div>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}