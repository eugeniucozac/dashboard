{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClaimsRegisterNewLoss = function ClaimsRegisterNewLoss() {\n  _s();\n\n  var steps = ['Create Loss', 'Link Policies', 'Create Claim', 'Manage Documents', 'Confirmation'];\n  var stepsForms = [{\n    form: 'Create Loss',\n    formEditedStatus: false\n  }, {\n    form: 'Link Policies',\n    formEditedStatus: false\n  }, {\n    form: 'Create Claim',\n    formEditedStatus: false\n  }, {\n    form: 'Manage Documents',\n    formEditedStatus: false\n  }, {\n    form: 'Confirmation',\n    formEditedStatus: false\n  }];\n\n  var _useState = useState(steps),\n      _useState2 = _slicedToArray(_useState, 2),\n      stepFields = _useState2[0],\n      setStepFields = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState(stepsForms),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var handleStep = function handleStep(step) {\n    if (!isFormsEdited[activeStep][\"formEditedStatus\"]) {\n      setActiveStep(step);\n    } else {\n      alert(\"navi is blocked\");\n    }\n  };\n\n  var handleNext = function handleNext(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index][\"formEditedStatus\"] = false;\n    setFormEditedStatus(formState);\n    setActiveStep(index + 1);\n  };\n\n  var handleBack = function handleBack(index) {\n    if (!isFormsEdited[activeStep][\"formEditedStatus\"]) {\n      setActiveStep(index - 1);\n    } else {\n      alert(\"navi is blocked\");\n    }\n  };\n\n  var handleSave = function handleSave(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index][\"formEditedStatus\"] = false;\n    setFormEditedStatus(formState);\n  };\n\n  var handleFormStatus = function handleFormStatus(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index][\"formEditedStatus\"] = true;\n    setFormEditedStatus(formState);\n  };\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]);\n  return /*#__PURE__*/_jsxDEV(ClaimsRegisterNewLossView, {\n    activeStep: activeStep,\n    steps: steps,\n    progress: progress,\n    handleStep: handleStep,\n    isFormsEdited: isFormsEdited,\n    isAllStepsCompleted: false,\n    handleFormStatus: handleFormStatus,\n    handleNext: handleNext,\n    handleBack: handleBack,\n    handleSave: handleSave\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ClaimsRegisterNewLoss, \"xU9Socg30bdQza8YfVaMl/h28kY=\");\n\n_c = ClaimsRegisterNewLoss;\nexport default ClaimsRegisterNewLoss;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLoss\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.js"],"names":["React","useState","useEffect","ClaimsRegisterNewLossView","ClaimsRegisterNewLoss","steps","stepsForms","form","formEditedStatus","stepFields","setStepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","handleStep","step","alert","handleNext","index","formState","map","handleBack","handleSave","handleFormStatus","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\r\n\r\nconst ClaimsRegisterNewLoss = () => {\r\n    const steps = [\r\n        'Create Loss',\r\n        'Link Policies',\r\n        'Create Claim',\r\n        'Manage Documents',\r\n        'Confirmation'\r\n    ];\r\n    const stepsForms = [\r\n        { form: 'Create Loss', formEditedStatus: false },\r\n        { form: 'Link Policies', formEditedStatus: false },\r\n        { form: 'Create Claim', formEditedStatus: false },\r\n        { form: 'Manage Documents', formEditedStatus: false },\r\n        { form: 'Confirmation', formEditedStatus: false }\r\n    ];\r\n    const [stepFields, setStepFields] = useState(steps);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [progress, setProgress] = useState(0);\r\n    const [isFormsEdited, setFormEditedStatus] = useState(stepsForms)\r\n\r\n    const handleStep = (step) => {\r\n        if (!isFormsEdited[activeStep][\"formEditedStatus\"]) {\r\n            setActiveStep(step);\r\n        }\r\n        else {\r\n            alert(\"navi is blocked\")\r\n        }\r\n    };\r\n    const handleNext = (index) => {\r\n        const formState = isFormsEdited.map((form) => ({ ...form }))\r\n        formState[index][\"formEditedStatus\"] = false\r\n        setFormEditedStatus(formState)\r\n        setActiveStep(index + 1)\r\n    }\r\n    const handleBack = (index) => {\r\n        if (!isFormsEdited[activeStep][\"formEditedStatus\"]) {\r\n            setActiveStep(index - 1)\r\n        }\r\n        else {\r\n            alert(\"navi is blocked\")\r\n        }\r\n    }\r\n    const handleSave = (index) => {\r\n        const formState = isFormsEdited.map((form) => ({ ...form }))\r\n        formState[index][\"formEditedStatus\"] = false\r\n        setFormEditedStatus(formState)\r\n    }\r\n    const handleFormStatus = (index) => {\r\n        const formState = isFormsEdited.map((form) => ({ ...form }))\r\n        formState[index][\"formEditedStatus\"] = true\r\n        setFormEditedStatus(formState)\r\n    }\r\n    useEffect(() => {\r\n        setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n    }, [activeStep]);\r\n\r\n\r\n    return (\r\n        <ClaimsRegisterNewLossView\r\n            activeStep={activeStep}\r\n            steps={steps}\r\n            progress={progress}\r\n            handleStep={handleStep}\r\n            isFormsEdited={isFormsEdited}\r\n            isAllStepsCompleted={false}\r\n            handleFormStatus={handleFormStatus}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSave}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default ClaimsRegisterNewLoss;\r\n"]},"metadata":{},"sourceType":"module"}